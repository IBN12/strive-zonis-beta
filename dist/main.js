(()=>{"use strict";var n={56:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},72:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var i={},r=[],s=0;s<n.length;s++){var c=n[s],d=o.base?c[0]+o.base:c[0],l=i[d]||0,f="".concat(d," ").concat(l);i[d]=l+1;var A=t(f),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==A)e[A].references++,e[A].updater(u);else{var m=a(u,o);o.byIndex=s,e.splice(s,0,{identifier:f,updater:m,references:1})}r.push(f)}return r}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var i=o(n=n||[],a=a||{});return function(n){n=n||[];for(var r=0;r<i.length;r++){var s=t(i[r]);e[s].references--}for(var c=o(n,a),d=0;d<i.length;d++){var l=t(i[d]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}i=c}}},113:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},159:(n,e,t)=>{t.d(e,{A:()=>s});var o=t(354),a=t.n(o),i=t(314),r=t.n(i)()(a());r.push([n.id,"/* body - The entire body for the application. */\nbody{\n    padding: 0;\n    margin: 0;\n}\n\n*{\n    box-sizing: border-box;\n}\n\n/***************************************************************************************************************************************************************************/\n/***************************************************************************************************************************************************************************/\n/* Mobile and Desktop Miniturization */\n\n/* Media-0 - For mobile viewports */\n@media only screen and (max-width: 1000px)\n{\n    /* |Main Content| */\n    #content{\n        border: 1px solid red;\n        padding: 5px; \n    }\n\n    /* |Main Menu Content| */\n    .main-menu-content{\n        display: flex;\n        flex-direction: column;\n        align-items: center; \n        gap: 10px;\n\n        border: 1px solid purple;\n    }\n\n    /* |Shuffle Cards Content| */\n    .shuffle-cards-content{\n        display: flex;\n        flex-direction: column;\n        gap: 10px;\n\n        border: 1px solid orange;\n        padding: 5px;\n        margin-top: 20px; \n    }\n\n    .display-cards-section{ /* Display cards container */\n        display: flex; \n        justify-content: center; \n        gap: 5px; \n\n        border: 1px solid blue;\n    }\n    .display-cards-section > div{\n        display: flex;\n        justify-content: center;\n        align-items: center;\n\n        border: 1px solid black;\n        width: 65px;\n        height: 65px;\n        font-size: 10px;\n        text-align: center;\n    }\n    .shuffle-card-animation{ /* Shuffle Card Animation for the Display cards container. */\n        animation-name: shuffleCardAnimation;\n        animation-duration: 1s;\n        animation-timing-function: ease-in-out;\n    }\n    @keyframes shuffleCardAnimation{\n        from {\n            transform: scale(1);\n        }\n        to {\n            transform: scale(1.2); \n        }\n    }\n\n    .card-info-window{ /* The main card info window for the each card being displayed in the 'Display Card Section'. */\n        position: relative;\n        top: -120px; /* This will change based on the final page size. */\n\n        border: 1px solid red; \n        background-color: rgba(255, 0, 0, 0.432);\n        padding: 10px; \n    }\n    .card-info-window > div{ /* Close Window Button Section */\n        display: flex;\n        justify-content: end; \n        border: 1px solid green;\n    }\n    .card-info-window > div > img[src]{\n        width: 50px;\n    }\n    .open-card-info-window{ /* Will open the card info window with a keyframe animation. */ \n        animation-name: openCardInfoWindow;\n        animation-duration: .5s;\n        animation-timing-function: ease-in-out;\n        /* animation-fill-mode: forwards; */\n    }\n    @keyframes openCardInfoWindow{\n        from{\n            transform: perspective(800px) translateZ(-4000px);\n        }\n        to{\n            transform: perspective(800px) translateZ(25px); \n        }\n    }\n    .close-card-info-window{ /* Will close the card info window with a keyframe animation. */\n        animation-name: closeCardInfoWindow;\n        animation-duration: .5s;\n        animation-timing-function: ease-in-out;\n        animation-fill-mode: forwards;\n    }\n    @keyframes closeCardInfoWindow{\n        from{\n            transform: perspective(800px) translateZ(25px); \n        }\n        to{\n            transform: perspective(800px) translateZ(-4000px); \n        }\n    }\n\n    .shuffle-limit-reached{\n        animation-name: shuffleLimitReached;\n        animation-duration: 1s;\n        animation-timing-function: ease-in-out;\n    }\n    @keyframes shuffleLimitReached{\n        from{ \n            transform: scale(1)\n        }\n        to{\n            transform: scale(1.1); \n        }\n    }\n} ","",{version:3,sources:["webpack://./src/styles/styles.css"],names:[],mappings:"AAAA,gDAAgD;AAChD;IACI,UAAU;IACV,SAAS;AACb;;AAEA;IACI,sBAAsB;AAC1B;;AAEA,4KAA4K;AAC5K,4KAA4K;AAC5K,sCAAsC;;AAEtC,mCAAmC;AACnC;;IAEI,mBAAmB;IACnB;QACI,qBAAqB;QACrB,YAAY;IAChB;;IAEA,wBAAwB;IACxB;QACI,aAAa;QACb,sBAAsB;QACtB,mBAAmB;QACnB,SAAS;;QAET,wBAAwB;IAC5B;;IAEA,4BAA4B;IAC5B;QACI,aAAa;QACb,sBAAsB;QACtB,SAAS;;QAET,wBAAwB;QACxB,YAAY;QACZ,gBAAgB;IACpB;;IAEA,wBAAwB,4BAA4B;QAChD,aAAa;QACb,uBAAuB;QACvB,QAAQ;;QAER,sBAAsB;IAC1B;IACA;QACI,aAAa;QACb,uBAAuB;QACvB,mBAAmB;;QAEnB,uBAAuB;QACvB,WAAW;QACX,YAAY;QACZ,eAAe;QACf,kBAAkB;IACtB;IACA,yBAAyB,4DAA4D;QACjF,oCAAoC;QACpC,sBAAsB;QACtB,sCAAsC;IAC1C;IACA;QACI;YACI,mBAAmB;QACvB;QACA;YACI,qBAAqB;QACzB;IACJ;;IAEA,mBAAmB,+FAA+F;QAC9G,kBAAkB;QAClB,WAAW,EAAE,mDAAmD;;QAEhE,qBAAqB;QACrB,wCAAwC;QACxC,aAAa;IACjB;IACA,yBAAyB,gCAAgC;QACrD,aAAa;QACb,oBAAoB;QACpB,uBAAuB;IAC3B;IACA;QACI,WAAW;IACf;IACA,wBAAwB,8DAA8D;QAClF,kCAAkC;QAClC,uBAAuB;QACvB,sCAAsC;QACtC,mCAAmC;IACvC;IACA;QACI;YACI,iDAAiD;QACrD;QACA;YACI,8CAA8C;QAClD;IACJ;IACA,yBAAyB,+DAA+D;QACpF,mCAAmC;QACnC,uBAAuB;QACvB,sCAAsC;QACtC,6BAA6B;IACjC;IACA;QACI;YACI,8CAA8C;QAClD;QACA;YACI,iDAAiD;QACrD;IACJ;;IAEA;QACI,mCAAmC;QACnC,sBAAsB;QACtB,sCAAsC;IAC1C;IACA;QACI;YACI;QACJ;QACA;YACI,qBAAqB;QACzB;IACJ;AACJ",sourcesContent:["/* body - The entire body for the application. */\nbody{\n    padding: 0;\n    margin: 0;\n}\n\n*{\n    box-sizing: border-box;\n}\n\n/***************************************************************************************************************************************************************************/\n/***************************************************************************************************************************************************************************/\n/* Mobile and Desktop Miniturization */\n\n/* Media-0 - For mobile viewports */\n@media only screen and (max-width: 1000px)\n{\n    /* |Main Content| */\n    #content{\n        border: 1px solid red;\n        padding: 5px; \n    }\n\n    /* |Main Menu Content| */\n    .main-menu-content{\n        display: flex;\n        flex-direction: column;\n        align-items: center; \n        gap: 10px;\n\n        border: 1px solid purple;\n    }\n\n    /* |Shuffle Cards Content| */\n    .shuffle-cards-content{\n        display: flex;\n        flex-direction: column;\n        gap: 10px;\n\n        border: 1px solid orange;\n        padding: 5px;\n        margin-top: 20px; \n    }\n\n    .display-cards-section{ /* Display cards container */\n        display: flex; \n        justify-content: center; \n        gap: 5px; \n\n        border: 1px solid blue;\n    }\n    .display-cards-section > div{\n        display: flex;\n        justify-content: center;\n        align-items: center;\n\n        border: 1px solid black;\n        width: 65px;\n        height: 65px;\n        font-size: 10px;\n        text-align: center;\n    }\n    .shuffle-card-animation{ /* Shuffle Card Animation for the Display cards container. */\n        animation-name: shuffleCardAnimation;\n        animation-duration: 1s;\n        animation-timing-function: ease-in-out;\n    }\n    @keyframes shuffleCardAnimation{\n        from {\n            transform: scale(1);\n        }\n        to {\n            transform: scale(1.2); \n        }\n    }\n\n    .card-info-window{ /* The main card info window for the each card being displayed in the 'Display Card Section'. */\n        position: relative;\n        top: -120px; /* This will change based on the final page size. */\n\n        border: 1px solid red; \n        background-color: rgba(255, 0, 0, 0.432);\n        padding: 10px; \n    }\n    .card-info-window > div{ /* Close Window Button Section */\n        display: flex;\n        justify-content: end; \n        border: 1px solid green;\n    }\n    .card-info-window > div > img[src]{\n        width: 50px;\n    }\n    .open-card-info-window{ /* Will open the card info window with a keyframe animation. */ \n        animation-name: openCardInfoWindow;\n        animation-duration: .5s;\n        animation-timing-function: ease-in-out;\n        /* animation-fill-mode: forwards; */\n    }\n    @keyframes openCardInfoWindow{\n        from{\n            transform: perspective(800px) translateZ(-4000px);\n        }\n        to{\n            transform: perspective(800px) translateZ(25px); \n        }\n    }\n    .close-card-info-window{ /* Will close the card info window with a keyframe animation. */\n        animation-name: closeCardInfoWindow;\n        animation-duration: .5s;\n        animation-timing-function: ease-in-out;\n        animation-fill-mode: forwards;\n    }\n    @keyframes closeCardInfoWindow{\n        from{\n            transform: perspective(800px) translateZ(25px); \n        }\n        to{\n            transform: perspective(800px) translateZ(-4000px); \n        }\n    }\n\n    .shuffle-limit-reached{\n        animation-name: shuffleLimitReached;\n        animation-duration: 1s;\n        animation-timing-function: ease-in-out;\n    }\n    @keyframes shuffleLimitReached{\n        from{ \n            transform: scale(1)\n        }\n        to{\n            transform: scale(1.1); \n        }\n    }\n} "],sourceRoot:""}]);const s=r},314:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,a,i){"string"==typeof n&&(n=[[null,n,void 0]]);var r={};if(o)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(r[c]=!0)}for(var d=0;d<n.length;d++){var l=[].concat(n[d]);o&&r[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),a&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=a):l[4]="".concat(a)),e.push(l))}},e}},354:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(a," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},540:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},659:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,a&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}}},e={};function t(o){var a=e[o];if(void 0!==a)return a.exports;var i=e[o]={id:o,exports:{}};return n[o](i,i.exports,t),i.exports}function o(){}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&"SCRIPT"===e.currentScript.tagName.toUpperCase()&&(n=e.currentScript.src),!n)){var o=e.getElementsByTagName("script");if(o.length)for(var a=o.length-1;a>-1&&(!n||!/^http(s?):/.test(n));)n=o[a--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/^blob:/,"").replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0;let a=[],i=[{name:"Tobo The Fighter",cate:"supra",attk:45,def:12,esse:100},{name:"The One From System",cate:"supra",attk:44,def:14,esse:100},{name:"Spunky With The Funky Draco",cate:"supra",attk:39,def:17,esse:100},{name:"Allybelle",cate:"fere",attk:27,def:15,esse:100},{name:"The Experiment",cate:"fere",attk:24,def:13,esse:100},{name:"The Trendsetter Rotao",cate:"fere",attk:25,def:18,esse:100},{name:"Dan The Prol",cate:"bonum",attk:19,def:22,esse:100},{name:"Mac The Rat",cate:"bonum",attk:16,def:33,esse:100},{name:"A Karen",cate:"bonum",attk:15,def:26,esse:100},{name:"The Office Worker Ken",cate:"bonum",attk:16,def:25,esse:100}];const r={numberOfShuffles:0,shuffleLimitReached:!1},s=t.p+"5b9eb662f103822a4a50.svg";function c(n){const e=document.querySelector(".shuffle-cards-content");if(0===n)d(),l(),u(),m();else if(1===n)e.replaceChildren(),d(),l(),u(),m();else if(2===n){const n=document.querySelector(".shuffle-cards-content > button:nth-child(2)"),t=document.querySelector(".shuffle-cards-content > button:nth-child(3)");e.removeChild(n),e.removeChild(t),u(),m()}}function d(){const n=document.querySelector(".shuffle-cards-content"),e=document.createElement("div");e.classList.add("display-cards-section");for(let n=0;n<4;n++){const n=document.createElement("div");e.appendChild(n)}n.appendChild(e)}function l(){const n=document.querySelectorAll(".display-cards-section > div");0===a.length?n.forEach((n=>{n.textContent="No Card"})):n.forEach(((n,e)=>{n.textContent=`${a[e].name}`,n.addEventListener("click",f)}))}function f(n){const e=document.querySelector(".shuffle-cards-content");console.log(n.target);const t=document.createElement("div");t.classList.add("card-info-window"),t.classList.add("open-card-info-window");const o=document.createElement("div"),a=document.createElement("img");a.src=s,o.appendChild(a),a.addEventListener("click",A),t.appendChild(o),e.appendChild(t)}function A(){const n=document.querySelector(".shuffle-cards-content"),e=document.querySelector(".card-info-window");e.classList.remove("open-card-info-window"),e.classList.add("close-card-info-window"),setTimeout((()=>{n.removeChild(e)}),500)}function u(){const n=document.querySelector(".shuffle-cards-content"),e=document.createElement("button");3===r.numberOfShuffles?(console.log("Shuffle limit reached"),r.shuffleLimitReached=!0,e.removeEventListener("click",p),e.classList.add("shuffle-limit-reached"),e.innerHTML=`Shuffle (${r.numberOfShuffles}) <span>Limit Reached</span>`,e.addEventListener("click",(()=>{c(2)}))):(e.addEventListener("click",p),e.textContent=`Shuffle (${r.numberOfShuffles})`),n.appendChild(e)}function m(){const n=document.querySelector(".shuffle-cards-content"),e=document.createElement("button");e.textContent="Start",n.appendChild(e)}function p(n){a=function(){let n=[],e=[],t=[],o=[];var a;i.forEach((o=>{"supra"===o.cate?n.push(o):"fere"===o.cate?e.push(o):"bonum"===o.cate&&t.push(o)})),o.push(n[(a=n.length,Math.floor(Math.random()*a))]),o.push(e[function(n){return Math.floor(Math.random()*n)}(e.length)]);const r=function(n){let e=!1,t=[];const o=Math.floor(Math.random()*n);for(;!e;){const a=Math.floor(Math.random()*n);o!==a&&(t.push(o),t.push(a),e=!0)}return t}(t.length);return o.push(t[r[0]]),o.push(t[r[1]]),o}(),console.log(a),r.numberOfShuffles++,console.log("Shuffles: ",r.numberOfShuffles),console.log("\n"),document.querySelectorAll(".shuffle-cards-content > button").forEach((n=>{n.disabled=!0})),document.querySelectorAll(".display-cards-section > div").forEach(((n,e)=>{switch(e){case 0:n.classList.add("shuffle-card-animation"),setTimeout((()=>{n.classList.remove("shuffle-card-animation")}),1e3);break;case 1:setTimeout((()=>{n.classList.add("shuffle-card-animation")}),1e3),setTimeout((()=>{n.classList.remove("shuffle-card-animation")}),2e3);break;case 2:setTimeout((()=>{n.classList.add("shuffle-card-animation")}),2e3),setTimeout((()=>{n.classList.remove("shuffle-card-animation")}),3e3);break;case 3:setTimeout((()=>{n.classList.add("shuffle-card-animation")}),3e3),setTimeout((()=>{n.classList.remove("shuffle-card-animation")}),4e3);break;default:return}})),setTimeout((()=>{c(1)}),4500)}var C=t(72),h=t.n(C),y=t(825),v=t.n(y),B=t(659),g=t.n(B),b=t(56),x=t.n(b),w=t(540),I=t.n(w),Q=t(113),S=t.n(Q),E=t(159),k={};k.styleTagTransform=S(),k.setAttributes=x(),k.insert=g().bind(null,"head"),k.domAPI=v(),k.insertStyleElement=I(),h()(E.A,k),E.A&&E.A.locals&&E.A.locals,console.log("Application will initiate"),function(){const n=document.getElementById("content"),e=document.createElement("div");e.classList.add("main-menu-content"),n.appendChild(e),function(){const n=document.querySelector(".main-menu-content"),e=document.createElement("h1");e.textContent="STRIVE",n.appendChild(e)}(),function(){const n=document.querySelector(".main-menu-content"),e=document.createElement("button");e.textContent="Start Game",e.addEventListener("click",o);const t=document.createElement("button");t.textContent="Settings";const a=document.createElement("button");a.textContent="SoSu Studio",n.appendChild(e),n.appendChild(t),n.appendChild(a)}()}(),function(){const n=document.getElementById("content"),e=document.createElement("div");e.classList.add("shuffle-cards-content"),n.appendChild(e)}(),c(0)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,