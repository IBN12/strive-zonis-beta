(()=>{"use strict";var n={56:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},72:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var i={},r=[],c=0;c<n.length;c++){var s=n[c],d=o.base?s[0]+o.base:s[0],l=i[d]||0,A="".concat(d," ").concat(l);i[d]=l+1;var u=t(A),f={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==u)e[u].references++,e[u].updater(f);else{var p=a(f,o);o.byIndex=c,e.splice(c,0,{identifier:A,updater:p,references:1})}r.push(A)}return r}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var i=o(n=n||[],a=a||{});return function(n){n=n||[];for(var r=0;r<i.length;r++){var c=t(i[r]);e[c].references--}for(var s=o(n,a),d=0;d<i.length;d++){var l=t(i[d]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}i=s}}},113:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},159:(n,e,t)=>{t.d(e,{A:()=>c});var o=t(354),a=t.n(o),i=t(314),r=t.n(i)()(a());r.push([n.id,"/* body - The entire body for the application. */\nbody{\n    padding: 0;\n    margin: 0;\n}\n\n*{\n    box-sizing: border-box;\n}\n\n.no-click{\n    pointer-events: none;  \n}\n/***************************************************************************************************************************************************************************/\n/***************************************************************************************************************************************************************************/\n/* Mobile and Desktop Miniturization */\n\n/* Media-0 - For mobile viewports */\n@media only screen and (max-width: 1000px)\n{\n    /* |Main Content| */\n    #content{\n        border: 1px solid red;\n        padding: 5px; \n    }\n\n    /* |Main Menu Content| */\n    .main-menu-content{\n        display: flex;\n        flex-direction: column;\n        align-items: center; \n        gap: 10px;\n\n        border: 1px solid purple;\n    }\n\n    /* |Shuffle Cards Content| */\n    .shuffle-cards-content{\n        display: flex;\n        flex-direction: column;\n        gap: 10px;\n\n        border: 1px solid orange;\n        padding: 5px;\n        margin-top: 20px; \n    }\n\n    .display-cards-section{ /* Display cards container */\n        display: flex; \n        justify-content: center; \n        gap: 5px; \n\n        border: 1px solid blue;\n    }\n    .display-cards-section > div{\n        display: flex;\n        justify-content: center;\n        align-items: center;\n\n        border: 1px solid black;\n        width: 65px;\n        height: 65px;\n        font-size: 10px;\n        text-align: center;\n    }\n    .shuffle-card-animation{ /* Shuffle Card Animation for the Display cards container. */\n        animation-name: shuffleCardAnimation;\n        animation-duration: 1s;\n        animation-timing-function: ease-in-out;\n    }\n    @keyframes shuffleCardAnimation{\n        from {\n            transform: scale(1);\n        }\n        to {\n            transform: scale(1.2); \n        }\n    }\n\n    .card-info-window{ /* The main card info window for the each card being displayed in the 'Display Card Section'. */\n        position: relative;\n        top: -120px; /* This will change based on the final page size. */\n\n        border: 1px solid red; \n        background-color: rgba(255, 0, 0, 0.432);\n        padding: 10px; \n    }\n    .card-info-window > div{ /* Close Window Button Section */\n        display: flex;\n        justify-content: end; \n        border: 1px solid green;\n    }\n    .card-info-window > div > img[src]{\n        width: 50px;\n    }\n    .open-card-info-window{ /* Will open the card info window with a keyframe animation. */ \n        animation-name: openCardInfoWindow;\n        animation-duration: .5s;\n        animation-timing-function: ease-in-out;\n        /* animation-fill-mode: forwards; */\n    }\n    @keyframes openCardInfoWindow{\n        from{\n            transform: perspective(800px) translateZ(-4000px);\n        }\n        to{\n            transform: perspective(800px) translateZ(25px); \n        }\n    }\n    .close-card-info-window{ /* Will close the card info window with a keyframe animation. */\n        animation-name: closeCardInfoWindow;\n        animation-duration: .5s;\n        animation-timing-function: ease-in-out;\n        animation-fill-mode: forwards;\n    }\n    @keyframes closeCardInfoWindow{\n        from{\n            transform: perspective(800px) translateZ(25px); \n        }\n        to{\n            transform: perspective(800px) translateZ(-4000px); \n        }\n    }\n\n    .shuffle-limit-reached{\n        animation-name: shuffleLimitReached;\n        animation-duration: 1s;\n        animation-timing-function: ease-in-out;\n        border: 1px solid red;\n    }\n    @keyframes shuffleLimitReached{\n        from{ \n            transform: scale(1)\n        }\n        to{\n            transform: scale(1.1); \n        }\n    }\n    .shuffle-limit-reached > span{\n        color: red; \n    }\n\n    /* |Battle Levels Content| */ \n    .battle-levels-content{\n        display: flex;\n        flex-direction: column;\n        gap: 20px; \n        border: 1px solid green; \n        margin-top: 20px; \n    }\n\n    .battle-level-section{ /* Battle Level Section */\n        text-align: center; \n        border: 1px solid blue; \n    }\n    .battle-level-section > h4{\n        margin: 0; \n    }\n\n    .battle-arena-section{ /* Battle Arena Section */ \n        display: flex; \n        justify-content: space-between;\n\n        border: 1px solid purple;\n        padding: 3px; \n    }\n    .battle-arena-section > section{ /* User card & Comp Card in the Battle Arena Section. */ \n        display: flex;\n        align-items: center; \n\n        text-align: center; \n        border: 1px solid black; \n        width: 80px; /* The width and height will change once the card art is implemented. */ \n        height: 80px; \n    }\n\n    .battle-card-deck-section{ /* Battle Card Deck Section */\n        display: flex;\n        justify-content: space-between;\n\n        border: 1px solid chocolate;\n        padding: 3px;\n    }\n    .battle-card-deck-section > section{ /* User Card Deck & Comp Card Deck */\n        display: flex;\n        justify-content: center;\n        gap: 10px; \n\n        padding: 3px;\n        border: 1px solid lightseagreen;\n    }\n    .battle-card-deck-section > section > div{\n        font-size: 10px; \n        border: 1px solid black; \n    }\n\n\n} ","",{version:3,sources:["webpack://./src/styles/styles.css"],names:[],mappings:"AAAA,gDAAgD;AAChD;IACI,UAAU;IACV,SAAS;AACb;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,oBAAoB;AACxB;AACA,4KAA4K;AAC5K,4KAA4K;AAC5K,sCAAsC;;AAEtC,mCAAmC;AACnC;;IAEI,mBAAmB;IACnB;QACI,qBAAqB;QACrB,YAAY;IAChB;;IAEA,wBAAwB;IACxB;QACI,aAAa;QACb,sBAAsB;QACtB,mBAAmB;QACnB,SAAS;;QAET,wBAAwB;IAC5B;;IAEA,4BAA4B;IAC5B;QACI,aAAa;QACb,sBAAsB;QACtB,SAAS;;QAET,wBAAwB;QACxB,YAAY;QACZ,gBAAgB;IACpB;;IAEA,wBAAwB,4BAA4B;QAChD,aAAa;QACb,uBAAuB;QACvB,QAAQ;;QAER,sBAAsB;IAC1B;IACA;QACI,aAAa;QACb,uBAAuB;QACvB,mBAAmB;;QAEnB,uBAAuB;QACvB,WAAW;QACX,YAAY;QACZ,eAAe;QACf,kBAAkB;IACtB;IACA,yBAAyB,4DAA4D;QACjF,oCAAoC;QACpC,sBAAsB;QACtB,sCAAsC;IAC1C;IACA;QACI;YACI,mBAAmB;QACvB;QACA;YACI,qBAAqB;QACzB;IACJ;;IAEA,mBAAmB,+FAA+F;QAC9G,kBAAkB;QAClB,WAAW,EAAE,mDAAmD;;QAEhE,qBAAqB;QACrB,wCAAwC;QACxC,aAAa;IACjB;IACA,yBAAyB,gCAAgC;QACrD,aAAa;QACb,oBAAoB;QACpB,uBAAuB;IAC3B;IACA;QACI,WAAW;IACf;IACA,wBAAwB,8DAA8D;QAClF,kCAAkC;QAClC,uBAAuB;QACvB,sCAAsC;QACtC,mCAAmC;IACvC;IACA;QACI;YACI,iDAAiD;QACrD;QACA;YACI,8CAA8C;QAClD;IACJ;IACA,yBAAyB,+DAA+D;QACpF,mCAAmC;QACnC,uBAAuB;QACvB,sCAAsC;QACtC,6BAA6B;IACjC;IACA;QACI;YACI,8CAA8C;QAClD;QACA;YACI,iDAAiD;QACrD;IACJ;;IAEA;QACI,mCAAmC;QACnC,sBAAsB;QACtB,sCAAsC;QACtC,qBAAqB;IACzB;IACA;QACI;YACI;QACJ;QACA;YACI,qBAAqB;QACzB;IACJ;IACA;QACI,UAAU;IACd;;IAEA,4BAA4B;IAC5B;QACI,aAAa;QACb,sBAAsB;QACtB,SAAS;QACT,uBAAuB;QACvB,gBAAgB;IACpB;;IAEA,uBAAuB,yBAAyB;QAC5C,kBAAkB;QAClB,sBAAsB;IAC1B;IACA;QACI,SAAS;IACb;;IAEA,uBAAuB,yBAAyB;QAC5C,aAAa;QACb,8BAA8B;;QAE9B,wBAAwB;QACxB,YAAY;IAChB;IACA,iCAAiC,uDAAuD;QACpF,aAAa;QACb,mBAAmB;;QAEnB,kBAAkB;QAClB,uBAAuB;QACvB,WAAW,EAAE,uEAAuE;QACpF,YAAY;IAChB;;IAEA,2BAA2B,6BAA6B;QACpD,aAAa;QACb,8BAA8B;;QAE9B,2BAA2B;QAC3B,YAAY;IAChB;IACA,qCAAqC,oCAAoC;QACrE,aAAa;QACb,uBAAuB;QACvB,SAAS;;QAET,YAAY;QACZ,+BAA+B;IACnC;IACA;QACI,eAAe;QACf,uBAAuB;IAC3B;;;AAGJ",sourcesContent:["/* body - The entire body for the application. */\nbody{\n    padding: 0;\n    margin: 0;\n}\n\n*{\n    box-sizing: border-box;\n}\n\n.no-click{\n    pointer-events: none;  \n}\n/***************************************************************************************************************************************************************************/\n/***************************************************************************************************************************************************************************/\n/* Mobile and Desktop Miniturization */\n\n/* Media-0 - For mobile viewports */\n@media only screen and (max-width: 1000px)\n{\n    /* |Main Content| */\n    #content{\n        border: 1px solid red;\n        padding: 5px; \n    }\n\n    /* |Main Menu Content| */\n    .main-menu-content{\n        display: flex;\n        flex-direction: column;\n        align-items: center; \n        gap: 10px;\n\n        border: 1px solid purple;\n    }\n\n    /* |Shuffle Cards Content| */\n    .shuffle-cards-content{\n        display: flex;\n        flex-direction: column;\n        gap: 10px;\n\n        border: 1px solid orange;\n        padding: 5px;\n        margin-top: 20px; \n    }\n\n    .display-cards-section{ /* Display cards container */\n        display: flex; \n        justify-content: center; \n        gap: 5px; \n\n        border: 1px solid blue;\n    }\n    .display-cards-section > div{\n        display: flex;\n        justify-content: center;\n        align-items: center;\n\n        border: 1px solid black;\n        width: 65px;\n        height: 65px;\n        font-size: 10px;\n        text-align: center;\n    }\n    .shuffle-card-animation{ /* Shuffle Card Animation for the Display cards container. */\n        animation-name: shuffleCardAnimation;\n        animation-duration: 1s;\n        animation-timing-function: ease-in-out;\n    }\n    @keyframes shuffleCardAnimation{\n        from {\n            transform: scale(1);\n        }\n        to {\n            transform: scale(1.2); \n        }\n    }\n\n    .card-info-window{ /* The main card info window for the each card being displayed in the 'Display Card Section'. */\n        position: relative;\n        top: -120px; /* This will change based on the final page size. */\n\n        border: 1px solid red; \n        background-color: rgba(255, 0, 0, 0.432);\n        padding: 10px; \n    }\n    .card-info-window > div{ /* Close Window Button Section */\n        display: flex;\n        justify-content: end; \n        border: 1px solid green;\n    }\n    .card-info-window > div > img[src]{\n        width: 50px;\n    }\n    .open-card-info-window{ /* Will open the card info window with a keyframe animation. */ \n        animation-name: openCardInfoWindow;\n        animation-duration: .5s;\n        animation-timing-function: ease-in-out;\n        /* animation-fill-mode: forwards; */\n    }\n    @keyframes openCardInfoWindow{\n        from{\n            transform: perspective(800px) translateZ(-4000px);\n        }\n        to{\n            transform: perspective(800px) translateZ(25px); \n        }\n    }\n    .close-card-info-window{ /* Will close the card info window with a keyframe animation. */\n        animation-name: closeCardInfoWindow;\n        animation-duration: .5s;\n        animation-timing-function: ease-in-out;\n        animation-fill-mode: forwards;\n    }\n    @keyframes closeCardInfoWindow{\n        from{\n            transform: perspective(800px) translateZ(25px); \n        }\n        to{\n            transform: perspective(800px) translateZ(-4000px); \n        }\n    }\n\n    .shuffle-limit-reached{\n        animation-name: shuffleLimitReached;\n        animation-duration: 1s;\n        animation-timing-function: ease-in-out;\n        border: 1px solid red;\n    }\n    @keyframes shuffleLimitReached{\n        from{ \n            transform: scale(1)\n        }\n        to{\n            transform: scale(1.1); \n        }\n    }\n    .shuffle-limit-reached > span{\n        color: red; \n    }\n\n    /* |Battle Levels Content| */ \n    .battle-levels-content{\n        display: flex;\n        flex-direction: column;\n        gap: 20px; \n        border: 1px solid green; \n        margin-top: 20px; \n    }\n\n    .battle-level-section{ /* Battle Level Section */\n        text-align: center; \n        border: 1px solid blue; \n    }\n    .battle-level-section > h4{\n        margin: 0; \n    }\n\n    .battle-arena-section{ /* Battle Arena Section */ \n        display: flex; \n        justify-content: space-between;\n\n        border: 1px solid purple;\n        padding: 3px; \n    }\n    .battle-arena-section > section{ /* User card & Comp Card in the Battle Arena Section. */ \n        display: flex;\n        align-items: center; \n\n        text-align: center; \n        border: 1px solid black; \n        width: 80px; /* The width and height will change once the card art is implemented. */ \n        height: 80px; \n    }\n\n    .battle-card-deck-section{ /* Battle Card Deck Section */\n        display: flex;\n        justify-content: space-between;\n\n        border: 1px solid chocolate;\n        padding: 3px;\n    }\n    .battle-card-deck-section > section{ /* User Card Deck & Comp Card Deck */\n        display: flex;\n        justify-content: center;\n        gap: 10px; \n\n        padding: 3px;\n        border: 1px solid lightseagreen;\n    }\n    .battle-card-deck-section > section > div{\n        font-size: 10px; \n        border: 1px solid black; \n    }\n\n\n} "],sourceRoot:""}]);const c=r},314:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,a,i){"string"==typeof n&&(n=[[null,n,void 0]]);var r={};if(o)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(r[s]=!0)}for(var d=0;d<n.length;d++){var l=[].concat(n[d]);o&&r[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),a&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=a):l[4]="".concat(a)),e.push(l))}},e}},354:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(a," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},540:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},659:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,a&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}}},e={};function t(o){var a=e[o];if(void 0!==a)return a.exports;var i=e[o]={id:o,exports:{}};return n[o](i,i.exports,t),i.exports}function o(){}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&"SCRIPT"===e.currentScript.tagName.toUpperCase()&&(n=e.currentScript.src),!n)){var o=e.getElementsByTagName("script");if(o.length)for(var a=o.length-1;a>-1&&(!n||!/^http(s?):/.test(n));)n=o[a--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/^blob:/,"").replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0;let a=[],i=[{name:"Tobo The Fighter",shortName:"Tobo",cate:"supra",attk:45,def:12,esse:100},{name:"The One From System",shortName:"Jace",cate:"supra",attk:44,def:14,esse:100},{name:"Spunky With The Funky Draco",shortName:"Spunky",cate:"supra",attk:39,def:17,esse:100},{name:"Allybelle",shortName:"Ally",cate:"fere",attk:27,def:15,esse:100},{name:"The Experiment",shortName:"Mason",cate:"fere",attk:24,def:13,esse:100},{name:"The Trendsetter Rotao",shortName:"Rotao",cate:"fere",attk:25,def:18,esse:100},{name:"Dan The Prol",shortName:"Dan",cate:"bonum",attk:19,def:22,esse:100},{name:"Mac The Rat",shortName:"Mac",cate:"bonum",attk:16,def:33,esse:100},{name:"A Karen",shortName:"Karen",cate:"bonum",attk:15,def:26,esse:100},{name:"The Office Worker Ken",shortName:"Ken",cate:"bonum",attk:16,def:25,esse:100}];const r={numberOfShuffles:0,shuffleLimitReached:!1,battleCard:null,switchedCards:!1};function c(n,e){if("Shuffle Cards Content"===n){const n=document.querySelectorAll(".shuffle-cards-content > div > div"),t=document.querySelectorAll(".shuffle-cards-content > button");"open card info window"===e?(n.forEach((n=>{n.classList.add("no-click")})),t.forEach((n=>{n.disabled=!0}))):"close card info window"===e?(n.forEach((n=>{n.classList.remove("no-click")})),t.forEach((n=>{n.disabled=!1}))):"shuffle cards"===e&&n.forEach((n=>{n.classList.add("no-click")}))}}const s=t.p+"5b9eb662f103822a4a50.svg";function d(n){const e=document.querySelector(".battle-levels-content"),t=document.querySelector(".battle-arena-section"),o=document.querySelector(".battle-card-deck-section");0===n?(function(){const n=document.querySelector(".battle-levels-content"),e=document.createElement("section");e.classList.add("battle-level-section");const t=document.createElement("h4");t.textContent="level 1: Unknown Birth",e.appendChild(t),n.appendChild(e)}(),l(),A()):1===n&&(e.removeChild(t),e.removeChild(o),l(),A())}function l(){const n=document.querySelector(".battle-levels-content"),e=document.createElement("section");e.classList.add("battle-arena-section");const t=document.createElement("section");r.switchedCards?t.textContent=r.battleCard:t.textContent=a[0].name;const o=document.createElement("section");e.appendChild(t),e.appendChild(o),n.appendChild(e)}function A(){const n=document.querySelector(".battle-levels-content"),e=document.createElement("section");e.classList.add("battle-card-deck-section");const t=document.querySelector(".battle-arena-section > section:nth-child(1)"),o=document.createElement("section");for(let n=0;n<a.length;n++)if(a[n].name!==t.textContent){const e=document.createElement("div");e.textContent=a[n].shortName,e.addEventListener("click",u),o.appendChild(e)}document.createElement("section"),e.appendChild(o),n.appendChild(e)}function u(n){r.switchedCards=!0,a.forEach((e=>{e.shortName===n.target.textContent&&(r.battleCard=e.name)})),d(1)}function f(n){const e=document.querySelector(".shuffle-cards-content");if(0===n)p(),m(),B(),b();else if(1===n)e.replaceChildren(),p(),m(),B(),b();else if(2===n){const n=document.querySelector(".shuffle-cards-content > button:nth-child(2)"),t=document.querySelector(".shuffle-cards-content > button:nth-child(3)");e.removeChild(n),e.removeChild(t),B(),b()}}function p(){const n=document.querySelector(".shuffle-cards-content"),e=document.createElement("div");e.classList.add("display-cards-section");for(let n=0;n<4;n++){const n=document.createElement("div");e.appendChild(n)}n.appendChild(e)}function m(){const n=document.querySelectorAll(".display-cards-section > div");0===a.length?n.forEach((n=>{n.textContent="No Card"})):n.forEach(((n,e)=>{n.textContent=`${a[e].name}`,n.addEventListener("click",C)}))}function C(n){const e=document.querySelector(".shuffle-cards-content");console.log(n.target);const t=document.createElement("div");t.classList.add("card-info-window"),t.classList.add("open-card-info-window");const o=document.createElement("div"),a=document.createElement("img");a.src=s,o.appendChild(a),a.addEventListener("click",h),c("Shuffle Cards Content","open card info window"),t.appendChild(o),e.appendChild(t)}function h(){const n=document.querySelector(".shuffle-cards-content"),e=document.querySelector(".card-info-window");e.classList.remove("open-card-info-window"),e.classList.add("close-card-info-window"),setTimeout((()=>{n.removeChild(e)}),500),setTimeout((()=>{c("Shuffle Cards Content","close card info window")}),700)}function B(){const n=document.querySelector(".shuffle-cards-content"),e=document.createElement("button");3===r.numberOfShuffles?(console.log("Shuffle limit reached"),r.shuffleLimitReached=!0,e.removeEventListener("click",y),e.classList.add("shuffle-limit-reached"),e.innerHTML=`Shuffle (${r.numberOfShuffles}) <span>Limit Reached</span>`,e.addEventListener("click",(()=>{f(2)}))):(e.addEventListener("click",y),e.textContent=`Shuffle (${r.numberOfShuffles})`),n.appendChild(e)}function b(){const n=document.querySelector(".shuffle-cards-content"),e=document.createElement("button");e.textContent="Start",0===a.length&&(e.disabled=!0),e.addEventListener("click",x),n.appendChild(e)}function x(){d(0)}function y(n){a=function(){let n=[],e=[],t=[],o=[];var a;i.forEach((o=>{"supra"===o.cate?n.push(o):"fere"===o.cate?e.push(o):"bonum"===o.cate&&t.push(o)})),o.push(n[(a=n.length,Math.floor(Math.random()*a))]),o.push(e[function(n){return Math.floor(Math.random()*n)}(e.length)]);const r=function(n){let e=!1,t=[];const o=Math.floor(Math.random()*n);for(;!e;){const a=Math.floor(Math.random()*n);o!==a&&(t.push(o),t.push(a),e=!0)}return t}(t.length);return o.push(t[r[0]]),o.push(t[r[1]]),o}(),console.log(a),r.numberOfShuffles++,console.log("Shuffles: ",r.numberOfShuffles),console.log("\n"),c("Shuffle Cards Content","shuffle cards"),document.querySelectorAll(".shuffle-cards-content > button").forEach((n=>{n.disabled=!0})),document.querySelectorAll(".display-cards-section > div").forEach(((n,e)=>{switch(e){case 0:n.classList.add("shuffle-card-animation"),setTimeout((()=>{n.classList.remove("shuffle-card-animation")}),1e3);break;case 1:setTimeout((()=>{n.classList.add("shuffle-card-animation")}),1e3),setTimeout((()=>{n.classList.remove("shuffle-card-animation")}),2e3);break;case 2:setTimeout((()=>{n.classList.add("shuffle-card-animation")}),2e3),setTimeout((()=>{n.classList.remove("shuffle-card-animation")}),3e3);break;case 3:setTimeout((()=>{n.classList.add("shuffle-card-animation")}),3e3),setTimeout((()=>{n.classList.remove("shuffle-card-animation")}),4e3);break;default:return}})),setTimeout((()=>{f(1)}),4500)}var g=t(72),v=t.n(g),w=t(825),I=t.n(w),Q=t(659),S=t.n(Q),E=t(56),k=t.n(E),T=t(540),L=t.n(T),D=t(113),q=t.n(D),M=t(159),j={};j.styleTagTransform=q(),j.setAttributes=k(),j.insert=S().bind(null,"head"),j.domAPI=I(),j.insertStyleElement=L(),v()(M.A,j),M.A&&M.A.locals&&M.A.locals,console.log("Application will initiate"),function(){const n=document.getElementById("content"),e=document.createElement("div");e.classList.add("main-menu-content"),n.appendChild(e),function(){const n=document.querySelector(".main-menu-content"),e=document.createElement("h1");e.textContent="STRIVE",n.appendChild(e)}(),function(){const n=document.querySelector(".main-menu-content"),e=document.createElement("button");e.textContent="Start Game",e.addEventListener("click",o);const t=document.createElement("button");t.textContent="Settings";const a=document.createElement("button");a.textContent="SoSu Studio",n.appendChild(e),n.appendChild(t),n.appendChild(a)}()}(),function(){const n=document.getElementById("content"),e=document.createElement("div");e.classList.add("shuffle-cards-content"),n.appendChild(e)}(),function(){const n=document.getElementById("content"),e=document.createElement("div");e.classList.add("battle-levels-content"),n.appendChild(e)}(),f(0)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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U0FBU2tDLGNBQWMsc0JBR3pDb0csRUFBY3RJLFNBQVMwQixjQUFjLFVBQzNDNEcsRUFBWWxCLFlBQWMsYUFDMUJrQixFQUFZVixpQkFBaUIsUUFBU3hFLEdBR3RDLE1BQU1tSCxFQUFpQnZLLFNBQVMwQixjQUFjLFVBQzlDNkksRUFBZW5ELFlBQWMsV0FHN0IsTUFBTW9ELEVBQW1CeEssU0FBUzBCLGNBQWMsVUFDaEQ4SSxFQUFpQnBELFlBQWMsY0FFL0JnRCxFQUFnQnJLLFlBQVl1SSxHQUM1QjhCLEVBQWdCckssWUFBWXdLLEdBQzVCSCxFQUFnQnJLLFlBQVl5SyxFQUNoQyxDQWpDSUMsRUFDSixDQWhCSUMsR0F3REosV0FDSSxNQUFNbkssRUFBVVAsU0FBU21LLGVBQWUsV0FFbENwQyxFQUFzQi9ILFNBQVMwQixjQUFjLE9BQ25EcUcsRUFBb0J0QixVQUFVQyxJQUFJLHlCQUVsQ25HLEVBQVFSLFlBQVlnSSxFQUN4QixDQTlESTRDLEdBaUVKLFdBQ0ksTUFBTXBLLEVBQVVQLFNBQVNtSyxlQUFlLFdBRWxDcEQsRUFBc0IvRyxTQUFTMEIsY0FBYyxPQUNuRHFGLEVBQW9CTixVQUFVQyxJQUFJLHlCQUVsQ25HLEVBQVFSLFlBQVlnSCxFQUN4QixDQXZFSTZELEdlWUo5QyxFQUFvQixFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3RyaXZlLXpvbmlzLWJldGEvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanMiLCJ3ZWJwYWNrOi8vc3RyaXZlLXpvbmlzLWJldGEvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMiLCJ3ZWJwYWNrOi8vc3RyaXZlLXpvbmlzLWJldGEvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qcyIsIndlYnBhY2s6Ly9zdHJpdmUtem9uaXMtYmV0YS8uL3NyYy9zdHlsZXMvc3R5bGVzLmNzcyIsIndlYnBhY2s6Ly9zdHJpdmUtem9uaXMtYmV0YS8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanMiLCJ3ZWJwYWNrOi8vc3RyaXZlLXpvbmlzLWJldGEvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qcyIsIndlYnBhY2s6Ly9zdHJpdmUtem9uaXMtYmV0YS8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcyIsIndlYnBhY2s6Ly9zdHJpdmUtem9uaXMtYmV0YS8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanMiLCJ3ZWJwYWNrOi8vc3RyaXZlLXpvbmlzLWJldGEvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qcyIsIndlYnBhY2s6Ly9zdHJpdmUtem9uaXMtYmV0YS93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly9zdHJpdmUtem9uaXMtYmV0YS8uL3NyYy9ET01Db250ZW50L0RPTUNvbnRlbnQuanMiLCJ3ZWJwYWNrOi8vc3RyaXZlLXpvbmlzLWJldGEvd2VicGFjay9ydW50aW1lL2NvbXBhdCBnZXQgZGVmYXVsdCBleHBvcnQiLCJ3ZWJwYWNrOi8vc3RyaXZlLXpvbmlzLWJldGEvd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL3N0cml2ZS16b25pcy1iZXRhL3dlYnBhY2svcnVudGltZS9nbG9iYWwiLCJ3ZWJwYWNrOi8vc3RyaXZlLXpvbmlzLWJldGEvd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly9zdHJpdmUtem9uaXMtYmV0YS93ZWJwYWNrL3J1bnRpbWUvcHVibGljUGF0aCIsIndlYnBhY2s6Ly9zdHJpdmUtem9uaXMtYmV0YS93ZWJwYWNrL3J1bnRpbWUvbm9uY2UiLCJ3ZWJwYWNrOi8vc3RyaXZlLXpvbmlzLWJldGEvLi9zcmMvR2FtZVByb2cvVXNlckNhcmRzLmpzIiwid2VicGFjazovL3N0cml2ZS16b25pcy1iZXRhLy4vc3JjL0dhbWVQcm9nL0luaXRpYXRvckNhcmRzLmpzIiwid2VicGFjazovL3N0cml2ZS16b25pcy1iZXRhLy4vc3JjL0dhbWVQcm9nL0dhbWVUb29scy5qcyIsIndlYnBhY2s6Ly9zdHJpdmUtem9uaXMtYmV0YS8uL3NyYy9HYW1lUHJvZy9Nb2RpZnlDb250ZW50VG9vbHMuanMiLCJ3ZWJwYWNrOi8vc3RyaXZlLXpvbmlzLWJldGEvLi9zcmMvR2FtZUNvbnRlbnQvQmF0dGxlTGV2ZWxzQ29udGVudC5qcyIsIndlYnBhY2s6Ly9zdHJpdmUtem9uaXMtYmV0YS8uL3NyYy9HYW1lQ29udGVudC9TaHVmZmxlQ2FyZHNDb250ZW50LmpzIiwid2VicGFjazovL3N0cml2ZS16b25pcy1iZXRhLy4vc3JjL0dhbWVQcm9nL1NodWZmbGVHYXRlLmpzIiwid2VicGFjazovL3N0cml2ZS16b25pcy1iZXRhLy4vc3JjL3N0eWxlcy9zdHlsZXMuY3NzP2U0NWIiLCJ3ZWJwYWNrOi8vc3RyaXZlLXpvbmlzLWJldGEvLi9zcmMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzKHN0eWxlRWxlbWVudCkge1xuICB2YXIgbm9uY2UgPSB0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gIT09IFwidW5kZWZpbmVkXCIgPyBfX3dlYnBhY2tfbm9uY2VfXyA6IG51bGw7XG4gIGlmIChub25jZSkge1xuICAgIHN0eWxlRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJub25jZVwiLCBub25jZSk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzOyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRE9NLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRE9NW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXhCeUlkZW50aWZpZXIgPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM10sXG4gICAgICBzdXBwb3J0czogaXRlbVs0XSxcbiAgICAgIGxheWVyOiBpdGVtWzVdXG4gICAgfTtcbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuICByZXR1cm4gaWRlbnRpZmllcnM7XG59XG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuICB2YXIgdXBkYXRlciA9IGZ1bmN0aW9uIHVwZGF0ZXIobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCAmJiBuZXdPYmouc3VwcG9ydHMgPT09IG9iai5zdXBwb3J0cyAmJiBuZXdPYmoubGF5ZXIgPT09IG9iai5sYXllcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBhcGkudXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZW1vdmUoKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiB1cGRhdGVyO1xufVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuICAgICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCkge1xuICBpZiAoc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZUVsZW1lbnQuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuICB9IGVsc2Uge1xuICAgIHdoaWxlIChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGVFbGVtZW50LnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKTtcbiAgICB9XG4gICAgc3R5bGVFbGVtZW50LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcykpO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IHN0eWxlVGFnVHJhbnNmb3JtOyIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIGAvKiBib2R5IC0gVGhlIGVudGlyZSBib2R5IGZvciB0aGUgYXBwbGljYXRpb24uICovXG5ib2R5e1xuICAgIHBhZGRpbmc6IDA7XG4gICAgbWFyZ2luOiAwO1xufVxuXG4qe1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbi5uby1jbGlja3tcbiAgICBwb2ludGVyLWV2ZW50czogbm9uZTsgIFxufVxuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4vKiBNb2JpbGUgYW5kIERlc2t0b3AgTWluaXR1cml6YXRpb24gKi9cblxuLyogTWVkaWEtMCAtIEZvciBtb2JpbGUgdmlld3BvcnRzICovXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDEwMDBweClcbntcbiAgICAvKiB8TWFpbiBDb250ZW50fCAqL1xuICAgICNjb250ZW50e1xuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCByZWQ7XG4gICAgICAgIHBhZGRpbmc6IDVweDsgXG4gICAgfVxuXG4gICAgLyogfE1haW4gTWVudSBDb250ZW50fCAqL1xuICAgIC5tYWluLW1lbnUtY29udGVudHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjsgXG4gICAgICAgIGdhcDogMTBweDtcblxuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCBwdXJwbGU7XG4gICAgfVxuXG4gICAgLyogfFNodWZmbGUgQ2FyZHMgQ29udGVudHwgKi9cbiAgICAuc2h1ZmZsZS1jYXJkcy1jb250ZW50e1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICBnYXA6IDEwcHg7XG5cbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgb3JhbmdlO1xuICAgICAgICBwYWRkaW5nOiA1cHg7XG4gICAgICAgIG1hcmdpbi10b3A6IDIwcHg7IFxuICAgIH1cblxuICAgIC5kaXNwbGF5LWNhcmRzLXNlY3Rpb257IC8qIERpc3BsYXkgY2FyZHMgY29udGFpbmVyICovXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7IFxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgXG4gICAgICAgIGdhcDogNXB4OyBcblxuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCBibHVlO1xuICAgIH1cbiAgICAuZGlzcGxheS1jYXJkcy1zZWN0aW9uID4gZGl2e1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcblxuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcbiAgICAgICAgd2lkdGg6IDY1cHg7XG4gICAgICAgIGhlaWdodDogNjVweDtcbiAgICAgICAgZm9udC1zaXplOiAxMHB4O1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgfVxuICAgIC5zaHVmZmxlLWNhcmQtYW5pbWF0aW9ueyAvKiBTaHVmZmxlIENhcmQgQW5pbWF0aW9uIGZvciB0aGUgRGlzcGxheSBjYXJkcyBjb250YWluZXIuICovXG4gICAgICAgIGFuaW1hdGlvbi1uYW1lOiBzaHVmZmxlQ2FyZEFuaW1hdGlvbjtcbiAgICAgICAgYW5pbWF0aW9uLWR1cmF0aW9uOiAxcztcbiAgICAgICAgYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZS1pbi1vdXQ7XG4gICAgfVxuICAgIEBrZXlmcmFtZXMgc2h1ZmZsZUNhcmRBbmltYXRpb257XG4gICAgICAgIGZyb20ge1xuICAgICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxKTtcbiAgICAgICAgfVxuICAgICAgICB0byB7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMik7IFxuICAgICAgICB9XG4gICAgfVxuXG4gICAgLmNhcmQtaW5mby13aW5kb3d7IC8qIFRoZSBtYWluIGNhcmQgaW5mbyB3aW5kb3cgZm9yIHRoZSBlYWNoIGNhcmQgYmVpbmcgZGlzcGxheWVkIGluIHRoZSAnRGlzcGxheSBDYXJkIFNlY3Rpb24nLiAqL1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIHRvcDogLTEyMHB4OyAvKiBUaGlzIHdpbGwgY2hhbmdlIGJhc2VkIG9uIHRoZSBmaW5hbCBwYWdlIHNpemUuICovXG5cbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgcmVkOyBcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDAsIDAsIDAuNDMyKTtcbiAgICAgICAgcGFkZGluZzogMTBweDsgXG4gICAgfVxuICAgIC5jYXJkLWluZm8td2luZG93ID4gZGl2eyAvKiBDbG9zZSBXaW5kb3cgQnV0dG9uIFNlY3Rpb24gKi9cbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBlbmQ7IFxuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCBncmVlbjtcbiAgICB9XG4gICAgLmNhcmQtaW5mby13aW5kb3cgPiBkaXYgPiBpbWdbc3JjXXtcbiAgICAgICAgd2lkdGg6IDUwcHg7XG4gICAgfVxuICAgIC5vcGVuLWNhcmQtaW5mby13aW5kb3d7IC8qIFdpbGwgb3BlbiB0aGUgY2FyZCBpbmZvIHdpbmRvdyB3aXRoIGEga2V5ZnJhbWUgYW5pbWF0aW9uLiAqLyBcbiAgICAgICAgYW5pbWF0aW9uLW5hbWU6IG9wZW5DYXJkSW5mb1dpbmRvdztcbiAgICAgICAgYW5pbWF0aW9uLWR1cmF0aW9uOiAuNXM7XG4gICAgICAgIGFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246IGVhc2UtaW4tb3V0O1xuICAgICAgICAvKiBhbmltYXRpb24tZmlsbC1tb2RlOiBmb3J3YXJkczsgKi9cbiAgICB9XG4gICAgQGtleWZyYW1lcyBvcGVuQ2FyZEluZm9XaW5kb3d7XG4gICAgICAgIGZyb217XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHBlcnNwZWN0aXZlKDgwMHB4KSB0cmFuc2xhdGVaKC00MDAwcHgpO1xuICAgICAgICB9XG4gICAgICAgIHRve1xuICAgICAgICAgICAgdHJhbnNmb3JtOiBwZXJzcGVjdGl2ZSg4MDBweCkgdHJhbnNsYXRlWigyNXB4KTsgXG4gICAgICAgIH1cbiAgICB9XG4gICAgLmNsb3NlLWNhcmQtaW5mby13aW5kb3d7IC8qIFdpbGwgY2xvc2UgdGhlIGNhcmQgaW5mbyB3aW5kb3cgd2l0aCBhIGtleWZyYW1lIGFuaW1hdGlvbi4gKi9cbiAgICAgICAgYW5pbWF0aW9uLW5hbWU6IGNsb3NlQ2FyZEluZm9XaW5kb3c7XG4gICAgICAgIGFuaW1hdGlvbi1kdXJhdGlvbjogLjVzO1xuICAgICAgICBhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlLWluLW91dDtcbiAgICAgICAgYW5pbWF0aW9uLWZpbGwtbW9kZTogZm9yd2FyZHM7XG4gICAgfVxuICAgIEBrZXlmcmFtZXMgY2xvc2VDYXJkSW5mb1dpbmRvd3tcbiAgICAgICAgZnJvbXtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogcGVyc3BlY3RpdmUoODAwcHgpIHRyYW5zbGF0ZVooMjVweCk7IFxuICAgICAgICB9XG4gICAgICAgIHRve1xuICAgICAgICAgICAgdHJhbnNmb3JtOiBwZXJzcGVjdGl2ZSg4MDBweCkgdHJhbnNsYXRlWigtNDAwMHB4KTsgXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAuc2h1ZmZsZS1saW1pdC1yZWFjaGVke1xuICAgICAgICBhbmltYXRpb24tbmFtZTogc2h1ZmZsZUxpbWl0UmVhY2hlZDtcbiAgICAgICAgYW5pbWF0aW9uLWR1cmF0aW9uOiAxcztcbiAgICAgICAgYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZS1pbi1vdXQ7XG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIHJlZDtcbiAgICB9XG4gICAgQGtleWZyYW1lcyBzaHVmZmxlTGltaXRSZWFjaGVke1xuICAgICAgICBmcm9teyBcbiAgICAgICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMSlcbiAgICAgICAgfVxuICAgICAgICB0b3tcbiAgICAgICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMS4xKTsgXG4gICAgICAgIH1cbiAgICB9XG4gICAgLnNodWZmbGUtbGltaXQtcmVhY2hlZCA+IHNwYW57XG4gICAgICAgIGNvbG9yOiByZWQ7IFxuICAgIH1cblxuICAgIC8qIHxCYXR0bGUgTGV2ZWxzIENvbnRlbnR8ICovIFxuICAgIC5iYXR0bGUtbGV2ZWxzLWNvbnRlbnR7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgIGdhcDogMjBweDsgXG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIGdyZWVuOyBcbiAgICAgICAgbWFyZ2luLXRvcDogMjBweDsgXG4gICAgfVxuXG4gICAgLmJhdHRsZS1sZXZlbC1zZWN0aW9ueyAvKiBCYXR0bGUgTGV2ZWwgU2VjdGlvbiAqL1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IFxuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCBibHVlOyBcbiAgICB9XG4gICAgLmJhdHRsZS1sZXZlbC1zZWN0aW9uID4gaDR7XG4gICAgICAgIG1hcmdpbjogMDsgXG4gICAgfVxuXG4gICAgLmJhdHRsZS1hcmVuYS1zZWN0aW9ueyAvKiBCYXR0bGUgQXJlbmEgU2VjdGlvbiAqLyBcbiAgICAgICAgZGlzcGxheTogZmxleDsgXG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcblxuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCBwdXJwbGU7XG4gICAgICAgIHBhZGRpbmc6IDNweDsgXG4gICAgfVxuICAgIC5iYXR0bGUtYXJlbmEtc2VjdGlvbiA+IHNlY3Rpb257IC8qIFVzZXIgY2FyZCAmIENvbXAgQ2FyZCBpbiB0aGUgQmF0dGxlIEFyZW5hIFNlY3Rpb24uICovIFxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyOyBcblxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IFxuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCBibGFjazsgXG4gICAgICAgIHdpZHRoOiA4MHB4OyAvKiBUaGUgd2lkdGggYW5kIGhlaWdodCB3aWxsIGNoYW5nZSBvbmNlIHRoZSBjYXJkIGFydCBpcyBpbXBsZW1lbnRlZC4gKi8gXG4gICAgICAgIGhlaWdodDogODBweDsgXG4gICAgfVxuXG4gICAgLmJhdHRsZS1jYXJkLWRlY2stc2VjdGlvbnsgLyogQmF0dGxlIENhcmQgRGVjayBTZWN0aW9uICovXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcblxuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCBjaG9jb2xhdGU7XG4gICAgICAgIHBhZGRpbmc6IDNweDtcbiAgICB9XG4gICAgLmJhdHRsZS1jYXJkLWRlY2stc2VjdGlvbiA+IHNlY3Rpb257IC8qIFVzZXIgQ2FyZCBEZWNrICYgQ29tcCBDYXJkIERlY2sgKi9cbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgIGdhcDogMTBweDsgXG5cbiAgICAgICAgcGFkZGluZzogM3B4O1xuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCBsaWdodHNlYWdyZWVuO1xuICAgIH1cbiAgICAuYmF0dGxlLWNhcmQtZGVjay1zZWN0aW9uID4gc2VjdGlvbiA+IGRpdntcbiAgICAgICAgZm9udC1zaXplOiAxMHB4OyBcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7IFxuICAgIH1cblxuXG59IGAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3N0eWxlcy9zdHlsZXMuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdz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b250ZW50XCI6W1wiLyogYm9keSAtIFRoZSBlbnRpcmUgYm9keSBmb3IgdGhlIGFwcGxpY2F0aW9uLiAqL1xcbmJvZHl7XFxuICAgIHBhZGRpbmc6IDA7XFxuICAgIG1hcmdpbjogMDtcXG59XFxuXFxuKntcXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcXG59XFxuXFxuLm5vLWNsaWNre1xcbiAgICBwb2ludGVyLWV2ZW50czogbm9uZTsgIFxcbn1cXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xcbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXFxuLyogTW9iaWxlIGFuZCBEZXNrdG9wIE1pbml0dXJpemF0aW9uICovXFxuXFxuLyogTWVkaWEtMCAtIEZvciBtb2JpbGUgdmlld3BvcnRzICovXFxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMDAwcHgpXFxue1xcbiAgICAvKiB8TWFpbiBDb250ZW50fCAqL1xcbiAgICAjY29udGVudHtcXG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIHJlZDtcXG4gICAgICAgIHBhZGRpbmc6IDVweDsgXFxuICAgIH1cXG5cXG4gICAgLyogfE1haW4gTWVudSBDb250ZW50fCAqL1xcbiAgICAubWFpbi1tZW51LWNvbnRlbnR7XFxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7IFxcbiAgICAgICAgZ2FwOiAxMHB4O1xcblxcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgcHVycGxlO1xcbiAgICB9XFxuXFxuICAgIC8qIHxTaHVmZmxlIENhcmRzIENvbnRlbnR8ICovXFxuICAgIC5zaHVmZmxlLWNhcmRzLWNvbnRlbnR7XFxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgICAgIGdhcDogMTBweDtcXG5cXG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIG9yYW5nZTtcXG4gICAgICAgIHBhZGRpbmc6IDVweDtcXG4gICAgICAgIG1hcmdpbi10b3A6IDIwcHg7IFxcbiAgICB9XFxuXFxuICAgIC5kaXNwbGF5LWNhcmRzLXNlY3Rpb257IC8qIERpc3BsYXkgY2FyZHMgY29udGFpbmVyICovXFxuICAgICAgICBkaXNwbGF5OiBmbGV4OyBcXG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOyBcXG4gICAgICAgIGdhcDogNXB4OyBcXG5cXG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIGJsdWU7XFxuICAgIH1cXG4gICAgLmRpc3BsYXktY2FyZHMtc2VjdGlvbiA+IGRpdntcXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuXFxuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcXG4gICAgICAgIHdpZHRoOiA2NXB4O1xcbiAgICAgICAgaGVpZ2h0OiA2NXB4O1xcbiAgICAgICAgZm9udC1zaXplOiAxMHB4O1xcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgICB9XFxuICAgIC5zaHVmZmxlLWNhcmQtYW5pbWF0aW9ueyAvKiBTaHVmZmxlIENhcmQgQW5pbWF0aW9uIGZvciB0aGUgRGlzcGxheSBjYXJkcyBjb250YWluZXIuICovXFxuICAgICAgICBhbmltYXRpb24tbmFtZTogc2h1ZmZsZUNhcmRBbmltYXRpb247XFxuICAgICAgICBhbmltYXRpb24tZHVyYXRpb246IDFzO1xcbiAgICAgICAgYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZS1pbi1vdXQ7XFxuICAgIH1cXG4gICAgQGtleWZyYW1lcyBzaHVmZmxlQ2FyZEFuaW1hdGlvbntcXG4gICAgICAgIGZyb20ge1xcbiAgICAgICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMSk7XFxuICAgICAgICB9XFxuICAgICAgICB0byB7XFxuICAgICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxLjIpOyBcXG4gICAgICAgIH1cXG4gICAgfVxcblxcbiAgICAuY2FyZC1pbmZvLXdpbmRvd3sgLyogVGhlIG1haW4gY2FyZCBpbmZvIHdpbmRvdyBmb3IgdGhlIGVhY2ggY2FyZCBiZWluZyBkaXNwbGF5ZWQgaW4gdGhlICdEaXNwbGF5IENhcmQgU2VjdGlvbicuICovXFxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICAgICAgICB0b3A6IC0xMjBweDsgLyogVGhpcyB3aWxsIGNoYW5nZSBiYXNlZCBvbiB0aGUgZmluYWwgcGFnZSBzaXplLiAqL1xcblxcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgcmVkOyBcXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAwLCAwLCAwLjQzMik7XFxuICAgICAgICBwYWRkaW5nOiAxMHB4OyBcXG4gICAgfVxcbiAgICAuY2FyZC1pbmZvLXdpbmRvdyA+IGRpdnsgLyogQ2xvc2UgV2luZG93IEJ1dHRvbiBTZWN0aW9uICovXFxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBlbmQ7IFxcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgZ3JlZW47XFxuICAgIH1cXG4gICAgLmNhcmQtaW5mby13aW5kb3cgPiBkaXYgPiBpbWdbc3JjXXtcXG4gICAgICAgIHdpZHRoOiA1MHB4O1xcbiAgICB9XFxuICAgIC5vcGVuLWNhcmQtaW5mby13aW5kb3d7IC8qIFdpbGwgb3BlbiB0aGUgY2FyZCBpbmZvIHdpbmRvdyB3aXRoIGEga2V5ZnJhbWUgYW5pbWF0aW9uLiAqLyBcXG4gICAgICAgIGFuaW1hdGlvbi1uYW1lOiBvcGVuQ2FyZEluZm9XaW5kb3c7XFxuICAgICAgICBhbmltYXRpb24tZHVyYXRpb246IC41cztcXG4gICAgICAgIGFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246IGVhc2UtaW4tb3V0O1xcbiAgICAgICAgLyogYW5pbWF0aW9uLWZpbGwtbW9kZTogZm9yd2FyZHM7ICovXFxuICAgIH1cXG4gICAgQGtleWZyYW1lcyBvcGVuQ2FyZEluZm9XaW5kb3d7XFxuICAgICAgICBmcm9te1xcbiAgICAgICAgICAgIHRyYW5zZm9ybTogcGVyc3BlY3RpdmUoODAwcHgpIHRyYW5zbGF0ZVooLTQwMDBweCk7XFxuICAgICAgICB9XFxuICAgICAgICB0b3tcXG4gICAgICAgICAgICB0cmFuc2Zvcm06IHBlcnNwZWN0aXZlKDgwMHB4KSB0cmFuc2xhdGVaKDI1cHgpOyBcXG4gICAgICAgIH1cXG4gICAgfVxcbiAgICAuY2xvc2UtY2FyZC1pbmZvLXdpbmRvd3sgLyogV2lsbCBjbG9zZSB0aGUgY2FyZCBpbmZvIHdpbmRvdyB3aXRoIGEga2V5ZnJhbWUgYW5pbWF0aW9uLiAqL1xcbiAgICAgICAgYW5pbWF0aW9uLW5hbWU6IGNsb3NlQ2FyZEluZm9XaW5kb3c7XFxuICAgICAgICBhbmltYXRpb24tZHVyYXRpb246IC41cztcXG4gICAgICAgIGFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246IGVhc2UtaW4tb3V0O1xcbiAgICAgICAgYW5pbWF0aW9uLWZpbGwtbW9kZTogZm9yd2FyZHM7XFxuICAgIH1cXG4gICAgQGtleWZyYW1lcyBjbG9zZUNhcmRJbmZvV2luZG93e1xcbiAgICAgICAgZnJvbXtcXG4gICAgICAgICAgICB0cmFuc2Zvcm06IHBlcnNwZWN0aXZlKDgwMHB4KSB0cmFuc2xhdGVaKDI1cHgpOyBcXG4gICAgICAgIH1cXG4gICAgICAgIHRve1xcbiAgICAgICAgICAgIHRyYW5zZm9ybTogcGVyc3BlY3RpdmUoODAwcHgpIHRyYW5zbGF0ZVooLTQwMDBweCk7IFxcbiAgICAgICAgfVxcbiAgICB9XFxuXFxuICAgIC5zaHVmZmxlLWxpbWl0LXJlYWNoZWR7XFxuICAgICAgICBhbmltYXRpb24tbmFtZTogc2h1ZmZsZUxpbWl0UmVhY2hlZDtcXG4gICAgICAgIGFuaW1hdGlvbi1kdXJhdGlvbjogMXM7XFxuICAgICAgICBhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlLWluLW91dDtcXG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIHJlZDtcXG4gICAgfVxcbiAgICBAa2V5ZnJhbWVzIHNodWZmbGVMaW1pdFJlYWNoZWR7XFxuICAgICAgICBmcm9teyBcXG4gICAgICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDEpXFxuICAgICAgICB9XFxuICAgICAgICB0b3tcXG4gICAgICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMSk7IFxcbiAgICAgICAgfVxcbiAgICB9XFxuICAgIC5zaHVmZmxlLWxpbWl0LXJlYWNoZWQgPiBzcGFue1xcbiAgICAgICAgY29sb3I6IHJlZDsgXFxuICAgIH1cXG5cXG4gICAgLyogfEJhdHRsZSBMZXZlbHMgQ29udGVudHwgKi8gXFxuICAgIC5iYXR0bGUtbGV2ZWxzLWNvbnRlbnR7XFxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgICAgIGdhcDogMjBweDsgXFxuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCBncmVlbjsgXFxuICAgICAgICBtYXJnaW4tdG9wOiAyMHB4OyBcXG4gICAgfVxcblxcbiAgICAuYmF0dGxlLWxldmVsLXNlY3Rpb257IC8qIEJhdHRsZSBMZXZlbCBTZWN0aW9uICovXFxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IFxcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgYmx1ZTsgXFxuICAgIH1cXG4gICAgLmJhdHRsZS1sZXZlbC1zZWN0aW9uID4gaDR7XFxuICAgICAgICBtYXJnaW46IDA7IFxcbiAgICB9XFxuXFxuICAgIC5iYXR0bGUtYXJlbmEtc2VjdGlvbnsgLyogQmF0dGxlIEFyZW5hIFNlY3Rpb24gKi8gXFxuICAgICAgICBkaXNwbGF5OiBmbGV4OyBcXG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXG5cXG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIHB1cnBsZTtcXG4gICAgICAgIHBhZGRpbmc6IDNweDsgXFxuICAgIH1cXG4gICAgLmJhdHRsZS1hcmVuYS1zZWN0aW9uID4gc2VjdGlvbnsgLyogVXNlciBjYXJkICYgQ29tcCBDYXJkIGluIHRoZSBCYXR0bGUgQXJlbmEgU2VjdGlvbi4gKi8gXFxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjsgXFxuXFxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IFxcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7IFxcbiAgICAgICAgd2lkdGg6IDgwcHg7IC8qIFRoZSB3aWR0aCBhbmQgaGVpZ2h0IHdpbGwgY2hhbmdlIG9uY2UgdGhlIGNhcmQgYXJ0IGlzIGltcGxlbWVudGVkLiAqLyBcXG4gICAgICAgIGhlaWdodDogODBweDsgXFxuICAgIH1cXG5cXG4gICAgLmJhdHRsZS1jYXJkLWRlY2stc2VjdGlvbnsgLyogQmF0dGxlIENhcmQgRGVjayBTZWN0aW9uICovXFxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcblxcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgY2hvY29sYXRlO1xcbiAgICAgICAgcGFkZGluZzogM3B4O1xcbiAgICB9XFxuICAgIC5iYXR0bGUtY2FyZC1kZWNrLXNlY3Rpb24gPiBzZWN0aW9ueyAvKiBVc2VyIENhcmQgRGVjayAmIENvbXAgQ2FyZCBEZWNrICovXFxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgICAgICBnYXA6IDEwcHg7IFxcblxcbiAgICAgICAgcGFkZGluZzogM3B4O1xcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgbGlnaHRzZWFncmVlbjtcXG4gICAgfVxcbiAgICAuYmF0dGxlLWNhcmQtZGVjay1zZWN0aW9uID4gc2VjdGlvbiA+IGRpdntcXG4gICAgICAgIGZvbnQtc2l6ZTogMTBweDsgXFxuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCBibGFjazsgXFxuICAgIH1cXG5cXG5cXG59IFwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcpIHtcbiAgdmFyIGxpc3QgPSBbXTtcblxuICAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gXCJcIjtcbiAgICAgIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2YgaXRlbVs1XSAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGNvbnRlbnQgKz0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKTtcbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbihcIlwiKTtcbiAgfTtcblxuICAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICBsaXN0LmkgPSBmdW5jdGlvbiBpKG1vZHVsZXMsIG1lZGlhLCBkZWR1cGUsIHN1cHBvcnRzLCBsYXllcikge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgdW5kZWZpbmVkXV07XG4gICAgfVxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCB0aGlzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgIHZhciBpZCA9IHRoaXNba11bMF07XG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIGZvciAodmFyIF9rID0gMDsgX2sgPCBtb2R1bGVzLmxlbmd0aDsgX2srKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfa10pO1xuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgICAgaWYgKHR5cGVvZiBsYXllciAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICBpZiAodHlwZW9mIGl0ZW1bNV0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChtZWRpYSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoc3VwcG9ydHMpIHtcbiAgICAgICAgaWYgKCFpdGVtWzRdKSB7XG4gICAgICAgICAgaXRlbVs0XSA9IFwiXCIuY29uY2F0KHN1cHBvcnRzKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNF0gPSBzdXBwb3J0cztcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIGxpc3Q7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdGVtKSB7XG4gIHZhciBjb250ZW50ID0gaXRlbVsxXTtcbiAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuICBpZiAoIWNzc01hcHBpbmcpIHtcbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuICBpZiAodHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShjc3NNYXBwaW5nKSkpKTtcbiAgICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gICAgdmFyIHNvdXJjZU1hcHBpbmcgPSBcIi8qIyBcIi5jb25jYXQoZGF0YSwgXCIgKi9cIik7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKFwiXFxuXCIpO1xuICB9XG4gIHJldHVybiBbY29udGVudF0uam9pbihcIlxcblwiKTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpIHtcbiAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG4gIG9wdGlvbnMuc2V0QXR0cmlidXRlcyhlbGVtZW50LCBvcHRpb25zLmF0dHJpYnV0ZXMpO1xuICBvcHRpb25zLmluc2VydChlbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xuICByZXR1cm4gZWxlbWVudDtcbn1cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0U3R5bGVFbGVtZW50OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgbWVtbyA9IHt9O1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGdldFRhcmdldCh0YXJnZXQpIHtcbiAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7XG5cbiAgICAvLyBTcGVjaWFsIGNhc2UgdG8gcmV0dXJuIGhlYWQgb2YgaWZyYW1lIGluc3RlYWQgb2YgaWZyYW1lIGl0c2VsZlxuICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG4gICAgbWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG4gIH1cbiAgcmV0dXJuIG1lbW9bdGFyZ2V0XTtcbn1cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRCeVNlbGVjdG9yKGluc2VydCwgc3R5bGUpIHtcbiAgdmFyIHRhcmdldCA9IGdldFRhcmdldChpbnNlcnQpO1xuICBpZiAoIXRhcmdldCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gIH1cbiAgdGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcbn1cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0QnlTZWxlY3RvcjsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaikge1xuICB2YXIgY3NzID0gXCJcIjtcbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KG9iai5zdXBwb3J0cywgXCIpIHtcIik7XG4gIH1cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpO1xuICB9XG4gIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2Ygb2JqLmxheWVyICE9PSBcInVuZGVmaW5lZFwiO1xuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwiQGxheWVyXCIuY29uY2F0KG9iai5sYXllci5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KG9iai5sYXllcikgOiBcIlwiLCBcIiB7XCIpO1xuICB9XG4gIGNzcyArPSBvYmouY3NzO1xuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICB2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcbiAgaWYgKHNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIuY29uY2F0KGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSksIFwiICovXCIpO1xuICB9XG5cbiAgLy8gRm9yIG9sZCBJRVxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG4gIG9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG59XG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGVFbGVtZW50LnBhcmVudE5vZGUgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgc3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KTtcbn1cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBkb21BUEkob3B0aW9ucykge1xuICBpZiAodHlwZW9mIGRvY3VtZW50ID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKCkge30sXG4gICAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHt9XG4gICAgfTtcbiAgfVxuICB2YXIgc3R5bGVFbGVtZW50ID0gb3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG4gIHJldHVybiB7XG4gICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUob2JqKSB7XG4gICAgICBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaik7XG4gICAgfSxcbiAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpO1xuICAgIH1cbiAgfTtcbn1cbm1vZHVsZS5leHBvcnRzID0gZG9tQVBJOyIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0aWQ6IG1vZHVsZUlkLFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0obW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4iLCIvLyBJbml0aWF0ZUFwcGxpY2F0aW9uKCk6IFdpbGwgaW5pdGlhdGUgdGhlIGVudGlyZSBhcHBsaWNhdGlvbi4gXG5leHBvcnQgZnVuY3Rpb24gSW5pdGlhdGVBcHBsaWNhdGlvbigpe1xuICAgIGNvbnNvbGUubG9nKFwiQXBwbGljYXRpb24gd2lsbCBpbml0aWF0ZVwiKTsgXG5cbiAgICBNYWluTWVudURPTSgpO1xuICAgIFNodWZmbGVDYXJkc0RPTSgpOyBcbiAgICBCYXR0bGVMZXZlbHNET00oKTsgXG59XG5cbi8vIE1haW5NZW51Q29udGVudCgpOiBUaGUgbWFpbiBtZW51IGNvbnRlbnQuIFxuZnVuY3Rpb24gTWFpbk1lbnVET00oKXtcbiAgICBjb25zdCBjb250ZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NvbnRlbnQnKTtcblxuICAgIGNvbnN0IG1haW5NZW51Q29udGVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpOyBcbiAgICBtYWluTWVudUNvbnRlbnQuY2xhc3NMaXN0LmFkZCgnbWFpbi1tZW51LWNvbnRlbnQnKTsgXG5cbiAgICBjb250ZW50LmFwcGVuZENoaWxkKG1haW5NZW51Q29udGVudCk7IFxuXG4gICAgQXBwVGl0bGUoKTtcbiAgICBNZW51QnV0dG9ucygpOyBcbn1cblxuLy8gQXBwVGl0bGUoKTogVGhlIEFwcGxpY2F0aW9uIHRpdGxlLlxuZnVuY3Rpb24gQXBwVGl0bGUoKXtcbiAgICBjb25zdCBtYWluTWVudUNvbnRlbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubWFpbi1tZW51LWNvbnRlbnQnKTtcblxuICAgIGNvbnN0IGFwcFRpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaDEnKTtcbiAgICBhcHBUaXRsZS50ZXh0Q29udGVudCA9IFwiU1RSSVZFXCI7XG5cbiAgICBtYWluTWVudUNvbnRlbnQuYXBwZW5kQ2hpbGQoYXBwVGl0bGUpOyBcbn1cblxuLy8gTWVudUJ1dHRvbnMoKTogQWxsIG1lbnUgYnV0dG9ucyBmb3IgdGhlIG1haW4gbWVudS5cbmZ1bmN0aW9uIE1lbnVCdXR0b25zKCl7XG4gICAgY29uc3QgbWFpbk1lbnVDb250ZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm1haW4tbWVudS1jb250ZW50Jyk7IFxuXG4gICAgLy8gU3RhcnQgR2FtZTpcbiAgICBjb25zdCBzdGFydEJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICAgIHN0YXJ0QnV0dG9uLnRleHRDb250ZW50ID0gJ1N0YXJ0IEdhbWUnO1xuICAgIHN0YXJ0QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgU3RhcnRHYW1lKTtcblxuICAgIC8vIFNldHRpbmdzOlxuICAgIGNvbnN0IHNldHRpbmdzQnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XG4gICAgc2V0dGluZ3NCdXR0b24udGV4dENvbnRlbnQgPSAnU2V0dGluZ3MnO1xuXG4gICAgLy8gU29TdSBTdHVkaW8gUG9ydC9NYWluIFBhZ2U6IFxuICAgIGNvbnN0IHNvc3VTdHVkaW9CdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgICBzb3N1U3R1ZGlvQnV0dG9uLnRleHRDb250ZW50ID0gJ1NvU3UgU3R1ZGlvJztcblxuICAgIG1haW5NZW51Q29udGVudC5hcHBlbmRDaGlsZChzdGFydEJ1dHRvbik7XG4gICAgbWFpbk1lbnVDb250ZW50LmFwcGVuZENoaWxkKHNldHRpbmdzQnV0dG9uKTtcbiAgICBtYWluTWVudUNvbnRlbnQuYXBwZW5kQ2hpbGQoc29zdVN0dWRpb0J1dHRvbik7IFxufVxuXG4vLyBTdGFydEdhbWUoKTogV2lsbCBzdGFydCBhIG5ldyBnYW1lLiBcbmZ1bmN0aW9uIFN0YXJ0R2FtZSgpe1xuICAgIC8vIFNodWZmbGVDYXJkc0NvbnRlbnQoMCk7IFxufVxuXG4vLyBTaHVmZmxlQ2FyZHNDb250ZW50KCk6IFRoZSBzaHVmZmxlIGNhcmRzIGNvbnRlbnQuXG5mdW5jdGlvbiBTaHVmZmxlQ2FyZHNET00oKXtcbiAgICBjb25zdCBjb250ZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NvbnRlbnQnKTtcblxuICAgIGNvbnN0IHNodWZmbGVDYXJkc0NvbnRlbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBzaHVmZmxlQ2FyZHNDb250ZW50LmNsYXNzTGlzdC5hZGQoJ3NodWZmbGUtY2FyZHMtY29udGVudCcpOyBcblxuICAgIGNvbnRlbnQuYXBwZW5kQ2hpbGQoc2h1ZmZsZUNhcmRzQ29udGVudCk7IFxufVxuXG4vL0JhdHRsZUxldmVsc0RPTSgpOiBCYXR0bGUgbGV2ZWwgY29udGVudC5cbmZ1bmN0aW9uIEJhdHRsZUxldmVsc0RPTSgpe1xuICAgIGNvbnN0IGNvbnRlbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY29udGVudCcpO1xuXG4gICAgY29uc3QgYmF0dGxlTGV2ZWxzQ29udGVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpOyBcbiAgICBiYXR0bGVMZXZlbHNDb250ZW50LmNsYXNzTGlzdC5hZGQoJ2JhdHRsZS1sZXZlbHMtY29udGVudCcpOyBcblxuICAgIGNvbnRlbnQuYXBwZW5kQ2hpbGQoYmF0dGxlTGV2ZWxzQ29udGVudCk7ICBcbn0iLCIvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5uID0gKG1vZHVsZSkgPT4ge1xuXHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cblx0XHQoKSA9PiAobW9kdWxlWydkZWZhdWx0J10pIDpcblx0XHQoKSA9PiAobW9kdWxlKTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgeyBhOiBnZXR0ZXIgfSk7XG5cdHJldHVybiBnZXR0ZXI7XG59OyIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18uZyA9IChmdW5jdGlvbigpIHtcblx0aWYgKHR5cGVvZiBnbG9iYWxUaGlzID09PSAnb2JqZWN0JykgcmV0dXJuIGdsb2JhbFRoaXM7XG5cdHRyeSB7XG5cdFx0cmV0dXJuIHRoaXMgfHwgbmV3IEZ1bmN0aW9uKCdyZXR1cm4gdGhpcycpKCk7XG5cdH0gY2F0Y2ggKGUpIHtcblx0XHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ29iamVjdCcpIHJldHVybiB3aW5kb3c7XG5cdH1cbn0pKCk7IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSIsInZhciBzY3JpcHRVcmw7XG5pZiAoX193ZWJwYWNrX3JlcXVpcmVfXy5nLmltcG9ydFNjcmlwdHMpIHNjcmlwdFVybCA9IF9fd2VicGFja19yZXF1aXJlX18uZy5sb2NhdGlvbiArIFwiXCI7XG52YXIgZG9jdW1lbnQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmcuZG9jdW1lbnQ7XG5pZiAoIXNjcmlwdFVybCAmJiBkb2N1bWVudCkge1xuXHRpZiAoZG9jdW1lbnQuY3VycmVudFNjcmlwdCAmJiBkb2N1bWVudC5jdXJyZW50U2NyaXB0LnRhZ05hbWUudG9VcHBlckNhc2UoKSA9PT0gJ1NDUklQVCcpXG5cdFx0c2NyaXB0VXJsID0gZG9jdW1lbnQuY3VycmVudFNjcmlwdC5zcmM7XG5cdGlmICghc2NyaXB0VXJsKSB7XG5cdFx0dmFyIHNjcmlwdHMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcInNjcmlwdFwiKTtcblx0XHRpZihzY3JpcHRzLmxlbmd0aCkge1xuXHRcdFx0dmFyIGkgPSBzY3JpcHRzLmxlbmd0aCAtIDE7XG5cdFx0XHR3aGlsZSAoaSA+IC0xICYmICghc2NyaXB0VXJsIHx8ICEvXmh0dHAocz8pOi8udGVzdChzY3JpcHRVcmwpKSkgc2NyaXB0VXJsID0gc2NyaXB0c1tpLS1dLnNyYztcblx0XHR9XG5cdH1cbn1cbi8vIFdoZW4gc3VwcG9ydGluZyBicm93c2VycyB3aGVyZSBhbiBhdXRvbWF0aWMgcHVibGljUGF0aCBpcyBub3Qgc3VwcG9ydGVkIHlvdSBtdXN0IHNwZWNpZnkgYW4gb3V0cHV0LnB1YmxpY1BhdGggbWFudWFsbHkgdmlhIGNvbmZpZ3VyYXRpb25cbi8vIG9yIHBhc3MgYW4gZW1wdHkgc3RyaW5nIChcIlwiKSBhbmQgc2V0IHRoZSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyB2YXJpYWJsZSBmcm9tIHlvdXIgY29kZSB0byB1c2UgeW91ciBvd24gbG9naWMuXG5pZiAoIXNjcmlwdFVybCkgdGhyb3cgbmV3IEVycm9yKFwiQXV0b21hdGljIHB1YmxpY1BhdGggaXMgbm90IHN1cHBvcnRlZCBpbiB0aGlzIGJyb3dzZXJcIik7XG5zY3JpcHRVcmwgPSBzY3JpcHRVcmwucmVwbGFjZSgvXmJsb2I6LywgXCJcIikucmVwbGFjZSgvIy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcPy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcL1teXFwvXSskLywgXCIvXCIpO1xuX193ZWJwYWNrX3JlcXVpcmVfXy5wID0gc2NyaXB0VXJsOyIsIl9fd2VicGFja19yZXF1aXJlX18ubmMgPSB1bmRlZmluZWQ7IiwiZXhwb3J0IGxldCB1c2VyQ2FyZHMgPSBbXTsiLCJleHBvcnQgbGV0IGluaXRpYXRvckNhcmRzID0gW1xuICAgIHtcbiAgICAgICAgbmFtZTogXCJUb2JvIFRoZSBGaWdodGVyXCIsXG4gICAgICAgIHNob3J0TmFtZTogXCJUb2JvXCIsXG4gICAgICAgIGNhdGU6IFwic3VwcmFcIiwgXG4gICAgICAgIGF0dGs6IDQ1LFxuICAgICAgICBkZWY6IDEyLFxuICAgICAgICBlc3NlOiAxMDAsXG4gICAgfSxcblxuICAgIHtcbiAgICAgICAgbmFtZTogXCJUaGUgT25lIEZyb20gU3lzdGVtXCIsIFxuICAgICAgICBzaG9ydE5hbWU6IFwiSmFjZVwiLCBcbiAgICAgICAgY2F0ZTogXCJzdXByYVwiLFxuICAgICAgICBhdHRrOiA0NCxcbiAgICAgICAgZGVmOiAxNCxcbiAgICAgICAgZXNzZTogMTAwLFxuICAgIH0sXG5cbiAgICB7XG4gICAgICAgIG5hbWU6IFwiU3B1bmt5IFdpdGggVGhlIEZ1bmt5IERyYWNvXCIsXG4gICAgICAgIHNob3J0TmFtZTogXCJTcHVua3lcIixcbiAgICAgICAgY2F0ZTogXCJzdXByYVwiLFxuICAgICAgICBhdHRrOiAzOSxcbiAgICAgICAgZGVmOiAxNyxcbiAgICAgICAgZXNzZTogMTAwLFxuICAgIH0sXG5cbiAgICB7XG4gICAgICAgIG5hbWU6IFwiQWxseWJlbGxlXCIsXG4gICAgICAgIHNob3J0TmFtZTogXCJBbGx5XCIsXG4gICAgICAgIGNhdGU6IFwiZmVyZVwiLFxuICAgICAgICBhdHRrOiAyNyxcbiAgICAgICAgZGVmOiAxNSxcbiAgICAgICAgZXNzZTogMTAwLCBcbiAgICB9LFxuXG4gICAge1xuICAgICAgICBuYW1lOiBcIlRoZSBFeHBlcmltZW50XCIsXG4gICAgICAgIHNob3J0TmFtZTogXCJNYXNvblwiLCBcbiAgICAgICAgY2F0ZTogXCJmZXJlXCIsXG4gICAgICAgIGF0dGs6IDI0LFxuICAgICAgICBkZWY6IDEzLFxuICAgICAgICBlc3NlOiAxMDAsXG4gICAgfSxcblxuICAgIHtcbiAgICAgICAgbmFtZTogXCJUaGUgVHJlbmRzZXR0ZXIgUm90YW9cIixcbiAgICAgICAgc2hvcnROYW1lOiBcIlJvdGFvXCIsXG4gICAgICAgIGNhdGU6IFwiZmVyZVwiLFxuICAgICAgICBhdHRrOiAyNSxcbiAgICAgICAgZGVmOiAxOCxcbiAgICAgICAgZXNzZTogMTAwLFxuICAgIH0sXG4gICAgXG4gICAge1xuICAgICAgICBuYW1lOiBcIkRhbiBUaGUgUHJvbFwiLFxuICAgICAgICBzaG9ydE5hbWU6IFwiRGFuXCIsXG4gICAgICAgIGNhdGU6IFwiYm9udW1cIixcbiAgICAgICAgYXR0azogMTksXG4gICAgICAgIGRlZjogMjIsXG4gICAgICAgIGVzc2U6IDEwMCxcbiAgICB9LFxuICAgIFxuICAgIHtcbiAgICAgICAgbmFtZTogXCJNYWMgVGhlIFJhdFwiLFxuICAgICAgICBzaG9ydE5hbWU6IFwiTWFjXCIsIFxuICAgICAgICBjYXRlOiBcImJvbnVtXCIsXG4gICAgICAgIGF0dGs6IDE2LFxuICAgICAgICBkZWY6IDMzLCBcbiAgICAgICAgZXNzZTogMTAwLFxuICAgIH0sXG5cbiAgICB7XG4gICAgICAgIG5hbWU6IFwiQSBLYXJlblwiLFxuICAgICAgICBzaG9ydE5hbWU6IFwiS2FyZW5cIixcbiAgICAgICAgY2F0ZTogXCJib251bVwiLFxuICAgICAgICBhdHRrOiAxNSxcbiAgICAgICAgZGVmOiAyNixcbiAgICAgICAgZXNzZTogMTAwLFxuICAgIH0sXG5cbiAgICB7XG4gICAgICAgIG5hbWU6IFwiVGhlIE9mZmljZSBXb3JrZXIgS2VuXCIsXG4gICAgICAgIHNob3J0TmFtZTogXCJLZW5cIiwgXG4gICAgICAgIGNhdGU6IFwiYm9udW1cIiwgXG4gICAgICAgIGF0dGs6IDE2LFxuICAgICAgICBkZWY6IDI1LFxuICAgICAgICBlc3NlOiAxMDAsIFxuICAgIH1cbl0iLCIvLyBHYW1lVG9vbHMgT2JqZWN0OiBUaGUgZ2FtZSB0b29scyB3aWxsIGNvbnRyb2wgYWxsIHRoZSBcbmV4cG9ydCBjb25zdCBnYW1lVG9vbHMgPSB7XG4gICAgbnVtYmVyT2ZTaHVmZmxlczogMCxcbiAgICBzaHVmZmxlTGltaXRSZWFjaGVkOiBmYWxzZSwgXG4gICAgYmF0dGxlQ2FyZDogbnVsbCxcbiAgICBzd2l0Y2hlZENhcmRzOiBmYWxzZSxcbn0iLCIvLyBNb2RpZnlDb250ZW50VG9vbHMoKTogV2lsbCBtb2RpZnkgY29udGVudCB0b29scyBkdXJpbmcgYXBwbGljYXRpb24gYWN0aXR2aXRlcyBhbmQgZXZlbnRzLlxuZXhwb3J0IGZ1bmN0aW9uIE1vZGlmeUNvbnRlbnRUb29scyhjb250ZW50LCByZWFzb24pe1xuXG4gICAgLy8gU2h1ZmZsZSBDYXJkcyBDb250ZW50OiBcbiAgICBpZiAoY29udGVudCA9PT0gJ1NodWZmbGUgQ2FyZHMgQ29udGVudCcpXG4gICAge1xuICAgICAgICBjb25zdCBzaHVmZmxlQ2FyZHNEaXNwbGF5ZWQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuc2h1ZmZsZS1jYXJkcy1jb250ZW50ID4gZGl2ID4gZGl2Jyk7IFxuICAgICAgICBjb25zdCBzaHVmZmxlQ2FyZHNDb250ZW50QnV0dG9ucyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5zaHVmZmxlLWNhcmRzLWNvbnRlbnQgPiBidXR0b24nKTsgXG4gICAgICAgIGlmIChyZWFzb24gPT09ICdvcGVuIGNhcmQgaW5mbyB3aW5kb3cnKVxuICAgICAgICB7XG4gICAgICAgICAgICBzaHVmZmxlQ2FyZHNEaXNwbGF5ZWQuZm9yRWFjaCgoY2FyZCkgPT4ge1xuICAgICAgICAgICAgICAgIGNhcmQuY2xhc3NMaXN0LmFkZCgnbm8tY2xpY2snKTsgXG4gICAgICAgICAgICB9KTsgXG5cbiAgICAgICAgICAgIHNodWZmbGVDYXJkc0NvbnRlbnRCdXR0b25zLmZvckVhY2goKGJ1dHRvbikgPT4ge1xuICAgICAgICAgICAgICAgIGJ1dHRvbi5kaXNhYmxlZCA9IHRydWU7IFxuICAgICAgICAgICAgfSk7IFxuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHJlYXNvbiA9PT0gJ2Nsb3NlIGNhcmQgaW5mbyB3aW5kb3cnKVxuICAgICAgICB7XG4gICAgICAgICAgICBzaHVmZmxlQ2FyZHNEaXNwbGF5ZWQuZm9yRWFjaCgoY2FyZCkgPT4ge1xuICAgICAgICAgICAgICAgIGNhcmQuY2xhc3NMaXN0LnJlbW92ZSgnbm8tY2xpY2snKTtcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICBzaHVmZmxlQ2FyZHNDb250ZW50QnV0dG9ucy5mb3JFYWNoKChidXR0b24pID0+IHtcbiAgICAgICAgICAgICAgICBidXR0b24uZGlzYWJsZWQgPSBmYWxzZTtcbiAgICAgICAgICAgIH0pOyBcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChyZWFzb24gPT09ICdzaHVmZmxlIGNhcmRzJylcbiAgICAgICAge1xuICAgICAgICAgICAgc2h1ZmZsZUNhcmRzRGlzcGxheWVkLmZvckVhY2goKGNhcmQpID0+IHtcbiAgICAgICAgICAgICAgICBjYXJkLmNsYXNzTGlzdC5hZGQoJ25vLWNsaWNrJyk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH1cbn0iLCJpbXBvcnQgeyBnYW1lVG9vbHMgfSBmcm9tIFwiLi4vR2FtZVByb2cvR2FtZVRvb2xzXCI7XG5pbXBvcnQgeyB1c2VyQ2FyZHMgfSBmcm9tIFwiLi4vR2FtZVByb2cvVXNlckNhcmRzXCI7XG5cbi8vIEJhdHRsZUxldmVsc0NvbnRlbnQoKTogVGhlIGJhdHRsZSBsZXZlbCBjb250ZW50LlxuZXhwb3J0IGZ1bmN0aW9uIEJhdHRsZUxldmVsc0NvbnRlbnQoY29udHJvbHMpe1xuICAgIC8qKiB8Q29udHJvbHMgR3VpZGV8XG4gICAgICogMCA9PiBUaGUgaW5pdGlhbCBzdGFydCBmb3IgYWxsIGNvbnRlbnQgZGVjbGFyYXRpb24gaW4gdGhlIEJhdHRsZUxldmVsc0NvbnRlbnQoKSBmdW5jdGlvbi5cbiAgICAgKiBcbiAgICAgKiAxID0+IFRoZSAnQmF0dGxlQXJlbmFTZWN0aW9uKCknIGFuZCAnQmF0dGxlQ2FyZERlY2tTZWN0aW9uKCknIHdpbGwgYmUgcmVzZXQgYWZ0ZXIgdGhlIHBsYXllclxuICAgICAqIHN3aXRjaGVzIGNhcmRzIGluIHRoZSAnQmF0dGxlQ2FyZERlY2tTZWN0aW9uKCknIGZ1bmN0aW9uLiBcbiAgICAgKi9cbiAgICBjb25zdCBiYXR0bGVMZXZlbHNDb250ZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmJhdHRsZS1sZXZlbHMtY29udGVudCcpOyBcbiAgICAvLyBjb25zdCBiYXR0bGVMZXZlbFNlY3Rpb24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYmF0dGxlLWxldmVsLXNlY3Rpb24nKTtcbiAgICBjb25zdCBiYXR0bGVBcmVuYVNlY3Rpb24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYmF0dGxlLWFyZW5hLXNlY3Rpb24nKTsgXG4gICAgY29uc3QgYmF0dGxlQ2FyZERlY2tTZWN0aW9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmJhdHRsZS1jYXJkLWRlY2stc2VjdGlvbicpO1xuICAgIFxuICAgIGlmIChjb250cm9scyA9PT0gMClcbiAgICB7XG4gICAgICAgIEJhdHRsZUxldmVsU2VjdGlvbigpO1xuICAgICAgICBCYXR0bGVBcmVuYVNlY3Rpb24oKTtcbiAgICAgICAgQmF0dGxlQ2FyZERlY2tTZWN0aW9uKCk7IFxuICAgIH1cbiAgICBlbHNlIGlmIChjb250cm9scyA9PT0gMSlcbiAgICB7XG4gICAgICAgIGJhdHRsZUxldmVsc0NvbnRlbnQucmVtb3ZlQ2hpbGQoYmF0dGxlQXJlbmFTZWN0aW9uKTtcbiAgICAgICAgYmF0dGxlTGV2ZWxzQ29udGVudC5yZW1vdmVDaGlsZChiYXR0bGVDYXJkRGVja1NlY3Rpb24pOyBcbiAgICAgICAgQmF0dGxlQXJlbmFTZWN0aW9uKCk7XG4gICAgICAgIEJhdHRsZUNhcmREZWNrU2VjdGlvbigpOyBcbiAgICB9XG59XG5cbi8vIEJhdHRsZUxldmVsU2VjdGlvbigpOiBXaWxsIGRpc3BsYXkgdGhlIGxldmVscyB0aGF0IHRoZSB1c2VyIGlzIG9uLiAgXG5mdW5jdGlvbiBCYXR0bGVMZXZlbFNlY3Rpb24oKXtcbiAgICBjb25zdCBiYXR0bGVMZXZlbHNDb250ZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmJhdHRsZS1sZXZlbHMtY29udGVudCcpOyBcblxuICAgIGNvbnN0IGJhdHRsZUxldmVsU2VjdGlvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NlY3Rpb24nKTsgXG4gICAgYmF0dGxlTGV2ZWxTZWN0aW9uLmNsYXNzTGlzdC5hZGQoJ2JhdHRsZS1sZXZlbC1zZWN0aW9uJyk7XG5cbiAgICAvLyBXaWxsIGRpc3BsYXkgZWFjaCBsZXZlbCB0aGUgdXNlciBpcyBvbi4gXG4gICAgY29uc3QgYmF0dGxlTGV2ZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdoNCcpO1xuICAgIGJhdHRsZUxldmVsLnRleHRDb250ZW50ID0gXCJsZXZlbCAxOiBVbmtub3duIEJpcnRoXCI7IFxuXG4gICAgYmF0dGxlTGV2ZWxTZWN0aW9uLmFwcGVuZENoaWxkKGJhdHRsZUxldmVsKTsgXG4gICAgYmF0dGxlTGV2ZWxzQ29udGVudC5hcHBlbmRDaGlsZChiYXR0bGVMZXZlbFNlY3Rpb24pOyBcbn1cblxuLy8gQmF0dGxlU2VjdGlvbigpOiBBbGwgYmF0dGxlcyB3aWxsIG9jY3VyIGhlcmUgYWdhaW5zdCB0aGUgY29tcHV0ZXIuXG5mdW5jdGlvbiBCYXR0bGVBcmVuYVNlY3Rpb24oKXtcbiAgICBjb25zdCBiYXR0bGVMZXZlbHNDb250ZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmJhdHRsZS1sZXZlbHMtY29udGVudCcpO1xuXG4gICAgY29uc3QgYmF0dGxlQXJlbmFTZWN0aW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2VjdGlvbicpOyBcbiAgICBiYXR0bGVBcmVuYVNlY3Rpb24uY2xhc3NMaXN0LmFkZCgnYmF0dGxlLWFyZW5hLXNlY3Rpb24nKTsgXG5cbiAgICBjb25zdCB1c2VyQ2FyZCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NlY3Rpb24nKTtcbiAgICBpZiAoZ2FtZVRvb2xzLnN3aXRjaGVkQ2FyZHMpXG4gICAge1xuICAgICAgICB1c2VyQ2FyZC50ZXh0Q29udGVudCA9IGdhbWVUb29scy5iYXR0bGVDYXJkOyBcbiAgICB9XG4gICAgZWxzZSBcbiAgICB7XG4gICAgICAgIHVzZXJDYXJkLnRleHRDb250ZW50ID0gdXNlckNhcmRzWzBdLm5hbWU7IC8vIERlZmF1bHQgY2FyZCBmb3IgdGhlIGJhdHRsZSBhcmVuYSBiZWZvcmUgc3dpdGNoaW5nIGNhcmRzLiAgXG4gICAgfVxuXG4gICAgY29uc3QgY29tcENhcmQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzZWN0aW9uJyk7IFxuXG4gICAgYmF0dGxlQXJlbmFTZWN0aW9uLmFwcGVuZENoaWxkKHVzZXJDYXJkKTtcbiAgICBiYXR0bGVBcmVuYVNlY3Rpb24uYXBwZW5kQ2hpbGQoY29tcENhcmQpOyBcbiAgICBiYXR0bGVMZXZlbHNDb250ZW50LmFwcGVuZENoaWxkKGJhdHRsZUFyZW5hU2VjdGlvbik7IFxufVxuXG4vLyBCYXR0bGVDYXJkRGVja1NlY3Rpb24oKTogVGhlIHVzZXIgY2FuIHN3aXRjaCB0aGVyZSBjYXJkcyBoZXJlIGJ5IGNsaWNraW5nIG9uIHRoZSBjYXJkIGljb25zIGluIHRoZSBkZWNrLiBcbmZ1bmN0aW9uIEJhdHRsZUNhcmREZWNrU2VjdGlvbigpe1xuICAgIGNvbnN0IGJhdHRsZUxldmVsc0NvbnRlbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYmF0dGxlLWxldmVscy1jb250ZW50Jyk7IFxuXG4gICAgY29uc3QgYmF0dGxlQ2FyZERlY2tTZWN0aW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2VjdGlvbicpO1xuICAgIGJhdHRsZUNhcmREZWNrU2VjdGlvbi5jbGFzc0xpc3QuYWRkKCdiYXR0bGUtY2FyZC1kZWNrLXNlY3Rpb24nKTsgXG5cbiAgICBjb25zdCBwbGF5ZXJCYXR0bGVDYXJkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmJhdHRsZS1hcmVuYS1zZWN0aW9uID4gc2VjdGlvbjpudGgtY2hpbGQoMSknKTtcblxuICAgIC8vIFVzZXIgQ2FyZCBEZWNrLS0tXG4gICAgY29uc3QgdXNlckNhcmREZWNrID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2VjdGlvbicpO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdXNlckNhcmRzLmxlbmd0aDsgaSsrKVxuICAgIHtcbiAgICAgICAgaWYgKHVzZXJDYXJkc1tpXS5uYW1lICE9PSBwbGF5ZXJCYXR0bGVDYXJkLnRleHRDb250ZW50KVxuICAgICAgICB7XG4gICAgICAgICAgICBjb25zdCBjYXJkID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7IFxuICAgICAgICAgICAgY2FyZC50ZXh0Q29udGVudCA9IHVzZXJDYXJkc1tpXS5zaG9ydE5hbWU7IFxuXG4gICAgICAgICAgICBjYXJkLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgU3dpdGNoQ2FyZHMpO1xuXG4gICAgICAgICAgICB1c2VyQ2FyZERlY2suYXBwZW5kQ2hpbGQoY2FyZCk7IFxuICAgICAgICB9XG4gICAgfVxuXG4gICAgLy8gQ29tcCBDYXJkIERlY2stLS0gXG4gICAgY29uc3QgY29tcENhcmREZWNrID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2VjdGlvbicpOyBcbiAgICBcbiAgICBiYXR0bGVDYXJkRGVja1NlY3Rpb24uYXBwZW5kQ2hpbGQodXNlckNhcmREZWNrKTsgXG4gICAgYmF0dGxlTGV2ZWxzQ29udGVudC5hcHBlbmRDaGlsZChiYXR0bGVDYXJkRGVja1NlY3Rpb24pOyBcbn1cblxuLy8gU3dpdGNoQ2FyZHMoKTogVGhlIGJhdHRsZSBhcmVuYSBjYXJkcyB3aWxsIGJlIGNoYW5nZWQgb3V0LiBcbmZ1bmN0aW9uIFN3aXRjaENhcmRzKGUpe1xuICAgIGdhbWVUb29scy5zd2l0Y2hlZENhcmRzID0gdHJ1ZTsgXG5cbiAgICB1c2VyQ2FyZHMuZm9yRWFjaCgoY2FyZCkgPT4ge1xuICAgICAgICBpZiAoY2FyZC5zaG9ydE5hbWUgPT09IGUudGFyZ2V0LnRleHRDb250ZW50KVxuICAgICAgICB7XG4gICAgICAgICAgICBnYW1lVG9vbHMuYmF0dGxlQ2FyZCA9IGNhcmQubmFtZTsgXG4gICAgICAgIH1cbiAgICB9KTtcblxuICAgIC8vIFdHTzogV2lsbCByZXNldCBzb21lIGZ1bmN0aW9ucyBpbiB0aGUgJ0JhdHRsZSBMZXZlbHMgQ29udGVudCcgYWZ0ZXIgdGhlIHBsYXllciBzd2l0Y2hlcyBjYXJkcy5cbiAgICAvLyBOb3RlOiBUaGlzIHdpbGwgbmVlZCB0byBiZSBpbXBsZW1lbnRlZCBmb3IgdGhlIGNvbXB1dGVyIGFsc28uIFxuICAgIEJhdHRsZUxldmVsc0NvbnRlbnQoMSk7IFxufSIsImltcG9ydCB7IHVzZXJDYXJkcyB9IGZyb20gXCIuLi9HYW1lUHJvZy9Vc2VyQ2FyZHNcIjtcbmltcG9ydCB7IFNodWZmbGVHYXRlIH0gZnJvbSBcIi4uL0dhbWVQcm9nL1NodWZmbGVHYXRlXCI7XG5pbXBvcnQgeyBnYW1lVG9vbHMgfSBmcm9tIFwiLi4vR2FtZVByb2cvR2FtZVRvb2xzXCI7XG5pbXBvcnQgeyBNb2RpZnlDb250ZW50VG9vbHMgfSBmcm9tIFwiLi4vR2FtZVByb2cvTW9kaWZ5Q29udGVudFRvb2xzXCI7XG5cbmltcG9ydCBjbG9zZUJ1dHRvbiBmcm9tIFwiLi4vSW1hZ2VzL0dhbWVUb29scy93aW5kb3ctY2xvc2Uuc3ZnXCI7IFxuXG5pbXBvcnQgeyBCYXR0bGVMZXZlbHNDb250ZW50IH0gZnJvbSBcIi4vQmF0dGxlTGV2ZWxzQ29udGVudFwiO1xuXG4vLyBTaHVmZmxlQ2FyZHNDb250ZW50KCk6IFRoZSBzaHVmZmxlIGNhcmRzIGNvbnRlbnQuXG5leHBvcnQgZnVuY3Rpb24gU2h1ZmZsZUNhcmRzQ29udGVudChjb250cm9scyl7XG4gICAgLyoqIHxDb250cm9scyBHdWlkZXxcbiAgICAgKiAwID0+IFRoZSBpbml0aWFsIHN0YXJ0IGZvciBhbGwgY29udGVudCBkZWNsYXJhdGlvbiBpbiB0aGUgc2h1ZmZsZUNhcmRzQ29udGVudCgpIGZ1bmN0aW9uLiBcbiAgICAgKiBcbiAgICAgKiAxID0+IFdpbGwgcmVzZXQgYWxsIHRoZSBjb250ZW50IGRlY2xhcmF0aW9uIGluIHRoZSBzaHVmZmxlQ2FyZHNDb250ZW50KCkgZnVuY3Rpb24gXG4gICAgICogYWZ0ZXIgdGhlIHVzZXIgY2xpY2tzIHRoZSBzaHVmZmxlIGJ1dHRvbi4gVGhpcyB3aWxsIHNodWZmbGUgdGhlIGluaXRpYXRvciBjYXJkIGRlY2tcbiAgICAgKiBhbmQgY3JlYXRlIGEgbmV3IGRlY2sgb2YgNCBpbml0aWF0b3IgY2FyZHMgZm9yIHRoZSB1c2VyIHRoYXQgd2lsbCBhbHNvIGJlIGRpc3BsYXllZFxuICAgICAqIGluIHRoZSBEaXNwbGF5Q2FyZHNTZWN0aW9uKCkgZnVuY3Rpb24uIFxuICAgICAqIFxuICAgICAqIDIgPT4gV2lsbCByZXNldCB0aGUgU2h1ZmZsZUJ1dHRvbigpIGFuZCBTdGFydEJ1dHRvbigpIGZ1bmN0aW9ucyB3aGVuIHRoZSBwbGF5ZXIgcmVhY2hlcyB0aGVcbiAgICAgKiBzaHVmZmxlIGxpbWl0IGFuZCBjb250aW51ZXMgdG8gY2xpY2sgdGhlICdTaHVmZmxlIEJ1dHRvbicuIFxuICAgICAqL1xuICAgIGNvbnN0IHNodWZmbGVDYXJkc0NvbnRlbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc2h1ZmZsZS1jYXJkcy1jb250ZW50Jyk7XG4gICAgXG4gICAgaWYgKGNvbnRyb2xzID09PSAwKVxuICAgIHtcbiAgICAgICAgRGlzcGxheUNhcmRzU2VjdGlvbigpOyBcbiAgICAgICAgRGlzcGxheUNhcmRzKCk7XG4gICAgICAgIFNodWZmbGVCdXR0b24oKTsgXG4gICAgICAgIFN0YXJ0QnV0dG9uKCk7IFxuICAgIH1cbiAgICBlbHNlIGlmIChjb250cm9scyA9PT0gMSlcbiAgICB7XG4gICAgICAgIHNodWZmbGVDYXJkc0NvbnRlbnQucmVwbGFjZUNoaWxkcmVuKCk7XG4gICAgICAgIERpc3BsYXlDYXJkc1NlY3Rpb24oKTtcbiAgICAgICAgRGlzcGxheUNhcmRzKCk7XG4gICAgICAgIFNodWZmbGVCdXR0b24oKTsgXG4gICAgICAgIFN0YXJ0QnV0dG9uKCk7ICBcbiAgICB9XG4gICAgZWxzZSBpZiAoY29udHJvbHMgPT09IDIpXG4gICAge1xuICAgICAgICBjb25zdCBzaHVmZmxlQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnNodWZmbGUtY2FyZHMtY29udGVudCA+IGJ1dHRvbjpudGgtY2hpbGQoMiknKTtcbiAgICAgICAgY29uc3Qgc3RhcnRCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc2h1ZmZsZS1jYXJkcy1jb250ZW50ID4gYnV0dG9uOm50aC1jaGlsZCgzKScpO1xuXG4gICAgICAgIHNodWZmbGVDYXJkc0NvbnRlbnQucmVtb3ZlQ2hpbGQoc2h1ZmZsZUJ1dHRvbik7XG4gICAgICAgIHNodWZmbGVDYXJkc0NvbnRlbnQucmVtb3ZlQ2hpbGQoc3RhcnRCdXR0b24pOyBcblxuICAgICAgICBTaHVmZmxlQnV0dG9uKCk7XG4gICAgICAgIFN0YXJ0QnV0dG9uKCk7IFxuICAgIH1cbn1cblxuLy8gRGlzcGxheUNhcmRzU2VjdGlvbigpOiBDcmVhdGVzIGEgZGlzcGxheSBjYXJkIHNlY3Rpb24uXG5mdW5jdGlvbiBEaXNwbGF5Q2FyZHNTZWN0aW9uKCl7XG4gICAgY29uc3Qgc2h1ZmZsZUNhcmRzQ29udGVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zaHVmZmxlLWNhcmRzLWNvbnRlbnQnKTsgXG5cbiAgICBjb25zdCBkaXNwbGF5Q2FyZHNTZWN0aW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgZGlzcGxheUNhcmRzU2VjdGlvbi5jbGFzc0xpc3QuYWRkKCdkaXNwbGF5LWNhcmRzLXNlY3Rpb24nKTsgXG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IDQ7IGkrKyl7XG4gICAgICAgIGNvbnN0IGNhcmQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgZGlzcGxheUNhcmRzU2VjdGlvbi5hcHBlbmRDaGlsZChjYXJkKTsgXG4gICAgfVxuXG4gICAgc2h1ZmZsZUNhcmRzQ29udGVudC5hcHBlbmRDaGlsZChkaXNwbGF5Q2FyZHNTZWN0aW9uKTtcbn1cblxuLy8gRGlzcGxheUNhcmRzKCk6IFdpbGwgZGlzcGxheSBhbGwgdGhlIHNodWZmbGVkIGluaXRpYXRvciBjYXJkcy4gXG5mdW5jdGlvbiBEaXNwbGF5Q2FyZHMoKXtcbiAgICBjb25zdCBkaXNwbGF5ZWRDYXJkcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5kaXNwbGF5LWNhcmRzLXNlY3Rpb24gPiBkaXYnKTsgXG5cbiAgICBpZiAodXNlckNhcmRzLmxlbmd0aCA9PT0gMClcbiAgICB7XG4gICAgICAgIGRpc3BsYXllZENhcmRzLmZvckVhY2goKGNhcmQpID0+IHtcbiAgICAgICAgICAgIGNhcmQudGV4dENvbnRlbnQgPSBcIk5vIENhcmRcIjsgXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBlbHNlXG4gICAge1xuICAgICAgICBkaXNwbGF5ZWRDYXJkcy5mb3JFYWNoKChjYXJkLCBpbmRleCkgPT4ge1xuICAgICAgICAgICAgY2FyZC50ZXh0Q29udGVudCA9IGAke3VzZXJDYXJkc1tpbmRleF0ubmFtZX1gO1xuICAgICAgICAgICAgY2FyZC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIE9wZW5DYXJkSW5mb1dpbmRvdyk7IFxuICAgICAgICB9KTtcbiAgICB9XG59XG5cbi8vIE9wZW5DYXJkSW5mb1dpbmRvdygpOiBXaWxsIG9wZW4gYSB3aW5kb3cgZm9yIHRoZSB1c2VyIGZyb20gdGhlICdkaXNwbGF5IGNhcmQgc2VjdGlvbicgdGhhdCB3aWxsIHNob3djYXNlIHRoZSBpbml0aWF0b3IgY2FyZHMgaW5mby5cbmZ1bmN0aW9uIE9wZW5DYXJkSW5mb1dpbmRvdyhlKXtcbiAgICBjb25zdCBzaHVmZmxlQ2FyZHNDb250ZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnNodWZmbGUtY2FyZHMtY29udGVudCcpOyBcblxuICAgIGNvbnNvbGUubG9nKGUudGFyZ2V0KTsgLy8gVGVzdGluZyBcbiAgICBjb25zdCBjYXJkSW5mb1dpbmRvdyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpOyBcbiAgICBjYXJkSW5mb1dpbmRvdy5jbGFzc0xpc3QuYWRkKCdjYXJkLWluZm8td2luZG93Jyk7IFxuICAgIGNhcmRJbmZvV2luZG93LmNsYXNzTGlzdC5hZGQoJ29wZW4tY2FyZC1pbmZvLXdpbmRvdycpOyBcbiAgICBcbiAgICAvLyBDbG9zZSBXaW5kb3cgQnV0dG9uIFNlY3Rpb246XG4gICAgY29uc3QgY2xvc2VXaW5kb3dCdXR0b25TZWN0aW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7IFxuICAgIGNvbnN0IGNsb3NlV2luZG93QnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW1nJyk7IFxuICAgIGNsb3NlV2luZG93QnV0dG9uLnNyYyA9IGNsb3NlQnV0dG9uO1xuICAgIGNsb3NlV2luZG93QnV0dG9uU2VjdGlvbi5hcHBlbmRDaGlsZChjbG9zZVdpbmRvd0J1dHRvbik7XG4gICAgY2xvc2VXaW5kb3dCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBDbG9zZUNhcmRJbmZvV2luZG93KTsgXG5cbiAgICBNb2RpZnlDb250ZW50VG9vbHMoJ1NodWZmbGUgQ2FyZHMgQ29udGVudCcsICdvcGVuIGNhcmQgaW5mbyB3aW5kb3cnKTsgXG5cbiAgICBjYXJkSW5mb1dpbmRvdy5hcHBlbmRDaGlsZChjbG9zZVdpbmRvd0J1dHRvblNlY3Rpb24pO1xuICAgIHNodWZmbGVDYXJkc0NvbnRlbnQuYXBwZW5kQ2hpbGQoY2FyZEluZm9XaW5kb3cpOyBcbn0gXG5cbi8vIENsb3NlQ2FyZEluZm9XaW5kb3coKTogV2lsbCBjbG9zZSB0aGUgZGlzcGxheSB3aW5kb3cgZm9yIGVhY2ggY2FyZCBpbiB0aGUgJ2Rpc3BsYXkgY2FyZCBzZWN0aW9uJy5cbmZ1bmN0aW9uIENsb3NlQ2FyZEluZm9XaW5kb3coKXtcbiAgICBjb25zdCBzaHVmZmxlQ2FyZHNDb250ZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnNodWZmbGUtY2FyZHMtY29udGVudCcpOyBcblxuICAgIGNvbnN0IGNhcmRJbmZvV2luZG93ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNhcmQtaW5mby13aW5kb3cnKTtcbiAgICBjYXJkSW5mb1dpbmRvdy5jbGFzc0xpc3QucmVtb3ZlKCdvcGVuLWNhcmQtaW5mby13aW5kb3cnKTsgXG4gICAgY2FyZEluZm9XaW5kb3cuY2xhc3NMaXN0LmFkZCgnY2xvc2UtY2FyZC1pbmZvLXdpbmRvdycpO1xuXG4gICAgLy8gV0dPOiBXYWl0IGEgaGFsZiBzZWNvbmQgZm9yIHRoZSBhbmltYXRpb24gdG8gZW5kIGJlZm9yZSByZW1vdmluZyAnY2FyZCBpbmZvIHdpbmRvdycuIFxuICAgIHNldFRpbWVvdXQoKCkgPT4ge3NodWZmbGVDYXJkc0NvbnRlbnQucmVtb3ZlQ2hpbGQoY2FyZEluZm9XaW5kb3cpO30sIDUwMCk7XG5cbiAgICAvLyBXR086IFdhaXQgdG8gcmVtb3ZlIHRoZSAnbm8tY2xpY2sgY2xhc3MnIHdoZW4gdGhlIHBsYXllciBjbG9zZXMgdGhlIHdpbmRvdyB0byBhdm9pZCByYXBpZC1jbGlja3MuIFxuICAgIHNldFRpbWVvdXQoKCkgPT4ge01vZGlmeUNvbnRlbnRUb29scygnU2h1ZmZsZSBDYXJkcyBDb250ZW50JywgJ2Nsb3NlIGNhcmQgaW5mbyB3aW5kb3cnKTt9LCA3MDApOyBcbn1cblxuLy8gU2h1ZmZsZUJ1dHRvbigpOiBXaWxsIHNodWZmbGUgY2FyZHMgaW4gdGhlIGNhcmQgZGVjay4gIFxuZnVuY3Rpb24gU2h1ZmZsZUJ1dHRvbigpe1xuICAgIGNvbnN0IHNodWZmbGVDYXJkc0NvbnRlbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc2h1ZmZsZS1jYXJkcy1jb250ZW50Jyk7IFxuICAgIFxuICAgIGNvbnN0IHNodWZmbGVCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcblxuICAgIC8vIFdpbGwgcmVhY2ggc2h1ZmZsZSBsaW1pdCBhZnRlciAzIGluaXRpYWwgc2h1ZmZsZXMuICBcbiAgICBpZiAoZ2FtZVRvb2xzLm51bWJlck9mU2h1ZmZsZXMgPT09IDMpXG4gICAge1xuICAgICAgICBjb25zb2xlLmxvZygnU2h1ZmZsZSBsaW1pdCByZWFjaGVkJyk7IC8vIFRlc3RpbmcgXG4gICAgICAgIGdhbWVUb29scy5zaHVmZmxlTGltaXRSZWFjaGVkID0gdHJ1ZTsgLy8gTm90IHV0aWxpemVkIFxuICAgICAgICBzaHVmZmxlQnV0dG9uLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgU2h1ZmZsZUNhcmRzKTsgXG4gICAgICAgIHNodWZmbGVCdXR0b24uY2xhc3NMaXN0LmFkZCgnc2h1ZmZsZS1saW1pdC1yZWFjaGVkJyk7XG4gICAgICAgIHNodWZmbGVCdXR0b24uaW5uZXJIVE1MID0gYFNodWZmbGUgKCR7Z2FtZVRvb2xzLm51bWJlck9mU2h1ZmZsZXN9KSA8c3Bhbj5MaW1pdCBSZWFjaGVkPC9zcGFuPmA7IFxuXG4gICAgICAgIC8vIFdHTzogV2lsbCByZXNldCB0aGUgJ1NodWZmbGVCdXR0b24oKScgYW5kICdTdGFydEJ1dHRvbigpJyBmdW5jdGlvbnMgd2hlbiB0aGUgc2h1ZmZsZSBsaW1pdCBpcyByZWFjaGVkXG4gICAgICAgIC8vIGFuZCBjb250aW51ZXMgdG8gY2xpY2sgdGhlICdTaHVmZmxlIEJ1dHRvbicuICBcbiAgICAgICAgc2h1ZmZsZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgICAgICAgIFNodWZmbGVDYXJkc0NvbnRlbnQoMik7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBlbHNlXG4gICAge1xuICAgICAgICBzaHVmZmxlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgU2h1ZmZsZUNhcmRzKTsgXG4gICAgICAgIHNodWZmbGVCdXR0b24udGV4dENvbnRlbnQgPSBgU2h1ZmZsZSAoJHtnYW1lVG9vbHMubnVtYmVyT2ZTaHVmZmxlc30pYDtcbiAgICB9XG5cbiAgICBzaHVmZmxlQ2FyZHNDb250ZW50LmFwcGVuZENoaWxkKHNodWZmbGVCdXR0b24pOyBcbn1cblxuLy8gU3RhcnRCdXR0b24oKTogV2lsbCBzdGFydCB0aGUgZ2FtZSBhbmQgc2VuZCB0aGUgdXNlciB0byB0aGUgYmF0dGxlIGFyZW5hLiBcbmZ1bmN0aW9uIFN0YXJ0QnV0dG9uKCl7XG4gICAgY29uc3Qgc2h1ZmZsZUNhcmRzQ29udGVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zaHVmZmxlLWNhcmRzLWNvbnRlbnQnKTsgXG5cbiAgICBjb25zdCBzdGFydEJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpOyBcbiAgICBzdGFydEJ1dHRvbi50ZXh0Q29udGVudCA9ICdTdGFydCc7XG5cbiAgICBpZiAodXNlckNhcmRzLmxlbmd0aCA9PT0gMClcbiAgICB7XG4gICAgICAgIHN0YXJ0QnV0dG9uLmRpc2FibGVkID0gdHJ1ZTsgIFxuICAgIH1cblxuICAgIHN0YXJ0QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgU3RhcnRHYW1lKTsgXG5cbiAgICBzaHVmZmxlQ2FyZHNDb250ZW50LmFwcGVuZENoaWxkKHN0YXJ0QnV0dG9uKTsgXG59XG5cbi8vIFN0YXJ0R2FtZSgpOiBXaWxsIGJlZ2luIHRoZSBnYW1lLlxuZnVuY3Rpb24gU3RhcnRHYW1lKCl7XG4gICAgQmF0dGxlTGV2ZWxzQ29udGVudCgwKTsgXG59XG5cbi8vIFNodWZmbGVDYXJkcygpOiBXaWxsIHNodWZmbGUgdGhlIGNhcmRzIGNvbnNpc3RlbnRseS4gXG5mdW5jdGlvbiBTaHVmZmxlQ2FyZHMoZSl7XG4gICAgdXNlckNhcmRzID0gU2h1ZmZsZUdhdGUoKTsgXG5cbiAgICBjb25zb2xlLmxvZyh1c2VyQ2FyZHMpOyAvLyBUZXN0aW5nIFxuXG4gICAgZ2FtZVRvb2xzLm51bWJlck9mU2h1ZmZsZXMrKzsgXG4gICAgY29uc29sZS5sb2coJ1NodWZmbGVzOiAnLCBnYW1lVG9vbHMubnVtYmVyT2ZTaHVmZmxlcyk7IC8vIFRlc3RpbmcgXG4gICAgY29uc29sZS5sb2coJ1xcbicpOyAvLyBUZXN0aW5nIFxuXG4gICAgLy8gV0dPOiBEaXNjb250aW51ZSBjbGlja2luZyBvbiB0aGUgZWFjaCBjYXJkIGluIHRoZSAnZGlzcGxheSBjYXJkcycgc2VjdGlvbi5cbiAgICBNb2RpZnlDb250ZW50VG9vbHMoJ1NodWZmbGUgQ2FyZHMgQ29udGVudCcsICdzaHVmZmxlIGNhcmRzJyk7IFxuXG4gICAgLy8gRGlzYWJsZSBhbGwgdGhlIGJ1dHRvbnMgdG8gYXZvaWQgcmFwaWQgdXNlciBjbGlja3MuIFxuICAgIGNvbnN0IHNodWZmbGVCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuc2h1ZmZsZS1jYXJkcy1jb250ZW50ID4gYnV0dG9uJyk7XG4gICAgc2h1ZmZsZUJ1dHRvbi5mb3JFYWNoKChidXR0b24pID0+IHtcbiAgICAgICAgYnV0dG9uLmRpc2FibGVkID0gdHJ1ZTtcbiAgICB9KTsgXG5cbiAgICBjb25zdCBkaXNwbGF5ZWRDYXJkcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5kaXNwbGF5LWNhcmRzLXNlY3Rpb24gPiBkaXYnKTsgXG5cbiAgICBkaXNwbGF5ZWRDYXJkcy5mb3JFYWNoKChjYXJkLCBpbmRleCkgPT4ge1xuICAgICAgICBzd2l0Y2goaW5kZXgpXG4gICAgICAgIHtcbiAgICAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgICAgICBjYXJkLmNsYXNzTGlzdC5hZGQoJ3NodWZmbGUtY2FyZC1hbmltYXRpb24nKTtcbiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtjYXJkLmNsYXNzTGlzdC5yZW1vdmUoJ3NodWZmbGUtY2FyZC1hbmltYXRpb24nKX0sIDEwMDApO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAxOiBcbiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtjYXJkLmNsYXNzTGlzdC5hZGQoJ3NodWZmbGUtY2FyZC1hbmltYXRpb24nKX0sIDEwMDApO1xuICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge2NhcmQuY2xhc3NMaXN0LnJlbW92ZSgnc2h1ZmZsZS1jYXJkLWFuaW1hdGlvbicpfSwgIDIwMDApOyBcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgMjogXG4gICAgICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7Y2FyZC5jbGFzc0xpc3QuYWRkKCdzaHVmZmxlLWNhcmQtYW5pbWF0aW9uJyl9LCAyMDAwKTsgXG4gICAgICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7Y2FyZC5jbGFzc0xpc3QucmVtb3ZlKCdzaHVmZmxlLWNhcmQtYW5pbWF0aW9uJyl9LCAzMDAwKTsgXG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIDM6IFxuICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge2NhcmQuY2xhc3NMaXN0LmFkZCgnc2h1ZmZsZS1jYXJkLWFuaW1hdGlvbicpfSwgMzAwMCk7XG4gICAgICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7Y2FyZC5jbGFzc0xpc3QucmVtb3ZlKCdzaHVmZmxlLWNhcmQtYW5pbWF0aW9uJyl9LCA0MDAwKTsgXG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgIH0pO1xuXG4gICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIFNodWZmbGVDYXJkc0NvbnRlbnQoMSk7ICAgXG4gICAgfSwgNDUwMCk7XG59IiwiaW1wb3J0IHsgaW5pdGlhdG9yQ2FyZHMgfSBmcm9tIFwiLi9Jbml0aWF0b3JDYXJkc1wiO1xuXG4vLyBTaHVmZmxlR2F0ZSgpOiBXaWxsIHNodWZmbGUgYWxsIHRoZSBpbml0aWF0b3IgY2FyZHMuIFxuZXhwb3J0IGZ1bmN0aW9uIFNodWZmbGVHYXRlKCl7XG4gICAgbGV0IHN1cHJhQ2FyZHMgPSBbXTtcbiAgICBsZXQgZmVyZUNhcmRzID0gW107XG4gICAgbGV0IGJvbnVtQ2FyZHMgPSBbXTtcbiAgICBsZXQgc2h1ZmZsZWRVc2VyRGVjayA9IFtdO1xuXG4gICAgaW5pdGlhdG9yQ2FyZHMuZm9yRWFjaCgoY2FyZCkgPT4ge1xuICAgICAgICBpZiAoY2FyZC5jYXRlID09PSBcInN1cHJhXCIpXG4gICAgICAgIHtcbiAgICAgICAgICAgIHN1cHJhQ2FyZHMucHVzaChjYXJkKTsgXG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoY2FyZC5jYXRlID09PSBcImZlcmVcIilcbiAgICAgICAge1xuICAgICAgICAgICAgZmVyZUNhcmRzLnB1c2goY2FyZCk7IFxuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGNhcmQuY2F0ZSA9PT0gXCJib251bVwiKVxuICAgICAgICB7XG4gICAgICAgICAgICBib251bUNhcmRzLnB1c2goY2FyZCk7IFxuICAgICAgICB9XG4gICAgfSk7XG5cbiAgICBzaHVmZmxlZFVzZXJEZWNrLnB1c2goc3VwcmFDYXJkc1tTaHVmZmxlU3VwcmFDYXJkcyhzdXByYUNhcmRzLmxlbmd0aCldKTsgXG4gICAgc2h1ZmZsZWRVc2VyRGVjay5wdXNoKGZlcmVDYXJkc1tTaHVmZmxlRmVyZUNhcmRzKGZlcmVDYXJkcy5sZW5ndGgpXSk7XG4gICAgY29uc3Qgc2h1ZmZsZWRJbmRleCA9IFNodWZmbGVCb251bUNhcmRzKGJvbnVtQ2FyZHMubGVuZ3RoKTtcbiAgICBzaHVmZmxlZFVzZXJEZWNrLnB1c2goYm9udW1DYXJkc1tzaHVmZmxlZEluZGV4WzBdXSk7XG4gICAgc2h1ZmZsZWRVc2VyRGVjay5wdXNoKGJvbnVtQ2FyZHNbc2h1ZmZsZWRJbmRleFsxXV0pO1xuICAgIFxuICAgIHJldHVybiBzaHVmZmxlZFVzZXJEZWNrOyBcbn1cblxuLy8gU2h1ZmZsZVN1cHJhQ2FyZHMoKTogV2lsbCBzaHVmZmxlIHRoZSBzdXByYSBjYXJkcy5cbmZ1bmN0aW9uIFNodWZmbGVTdXByYUNhcmRzKGxlbmd0aCl7XG4gICAgY29uc3QgcmFuZG9tTnVtID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogbGVuZ3RoKTsgXG4gICAgcmV0dXJuIHJhbmRvbU51bTsgIFxufVxuXG4vLyBTaHVmZmxlRmVyZUNhcmRzKCk6IFdpbGwgc2h1ZmZsZSB0aGUgZmVyZSBjYXJkcy5cbmZ1bmN0aW9uIFNodWZmbGVGZXJlQ2FyZHMobGVuZ3RoKXtcbiAgICBjb25zdCByYW5kb21OdW0gPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBsZW5ndGgpO1xuICAgIHJldHVybiByYW5kb21OdW07XG59XG5cbi8vIFNodWZmbGVCb251bUNhcmRzKCk6IFdpbGwgc2h1ZmZsZSB0aGUgYm9udW0gY2FyZHMuXG5mdW5jdGlvbiBTaHVmZmxlQm9udW1DYXJkcyhsZW5ndGgpe1xuICAgIGxldCBtYXRjaCA9IGZhbHNlO1xuICAgIGxldCBzaHVmZmxlZEluZGV4ID0gW107XG4gICAgY29uc3QgcmFuZG9tTnVtID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogbGVuZ3RoKTtcblxuICAgIHdoaWxlICghbWF0Y2gpXG4gICAge1xuICAgICAgICBjb25zdCBuZXh0UmFuZG9tTnVtID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogbGVuZ3RoKTtcblxuICAgICAgICBpZiAocmFuZG9tTnVtICE9PSBuZXh0UmFuZG9tTnVtKVxuICAgICAgICB7XG4gICAgICAgICAgICBzaHVmZmxlZEluZGV4LnB1c2gocmFuZG9tTnVtKTtcbiAgICAgICAgICAgIHNodWZmbGVkSW5kZXgucHVzaChuZXh0UmFuZG9tTnVtKTtcbiAgICAgICAgICAgIG1hdGNoID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBzaHVmZmxlZEluZGV4O1xufSIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZXMuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5vcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGVzLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsImltcG9ydCB7IEluaXRpYXRlQXBwbGljYXRpb24gfSBmcm9tIFwiLi9ET01Db250ZW50L0RPTUNvbnRlbnRcIjtcbmltcG9ydCB7IFNodWZmbGVDYXJkc0NvbnRlbnQgfSBmcm9tIFwiLi9HYW1lQ29udGVudC9TaHVmZmxlQ2FyZHNDb250ZW50XCI7XG5cbmltcG9ydCAnLi9zdHlsZXMvc3R5bGVzLmNzcyc7XG5cbkluaXRpYXRlQXBwbGljYXRpb24oKTsgXG5cbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gUmV2aWV3IENlbnRlcjpcbi8vIFRoaXMgc2VjdGlvbiB3aWxsIHVzZWQgYXMgYSByZXZpZXcgZm9yIEhUTUwsIENTUywgYW5kIEphdmFTY3JpcHQgcHJvcGVydGllcyBhbmQgZnVuY3Rpb25zLiBcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gVGVzdGluZyBDZW50ZXI6IFxuLy8gQWxsIG9mIHRoZXNlIGZ1bmN0aW9ucyBhcmUgaW4gdGhpcyBmaWxlIGZvciB0ZXN0aW5nIHB1cnBvc2VzIGFuZCB3aWxsIGJlIHJlbW92ZWQgb25jZSB0ZXN0aW5nIGlzIG92ZXIuIFxuU2h1ZmZsZUNhcmRzQ29udGVudCgwKTsgLy8gVGVzdGluZyB0aGUgc2h1ZmZsZSBDYXJkcyBDb250ZW50IFxuXG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInN0eWxlRWxlbWVudCIsIm5vbmNlIiwic2V0QXR0cmlidXRlIiwic3R5bGVzSW5ET00iLCJnZXRJbmRleEJ5SWRlbnRpZmllciIsImlkZW50aWZpZXIiLCJyZXN1bHQiLCJpIiwibGVuZ3RoIiwibW9kdWxlc1RvRG9tIiwibGlzdCIsIm9wdGlvbnMiLCJpZENvdW50TWFwIiwiaWRlbnRpZmllcnMiLCJpdGVtIiwiaWQiLCJiYXNlIiwiY291bnQiLCJjb25jYXQiLCJpbmRleEJ5SWRlbnRpZmllciIsIm9iaiIsImNzcyIsIm1lZGlhIiwic291cmNlTWFwIiwic3VwcG9ydHMiLCJsYXllciIsInJlZmVyZW5jZXMiLCJ1cGRhdGVyIiwiYWRkRWxlbWVudFN0eWxlIiwiYnlJbmRleCIsInNwbGljZSIsInB1c2giLCJhcGkiLCJkb21BUEkiLCJ1cGRhdGUiLCJuZXdPYmoiLCJyZW1vdmUiLCJsYXN0SWRlbnRpZmllcnMiLCJuZXdMaXN0IiwiaW5kZXgiLCJuZXdMYXN0SWRlbnRpZmllcnMiLCJfaSIsIl9pbmRleCIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwiZmlyc3RDaGlsZCIsInJlbW92ZUNoaWxkIiwiYXBwZW5kQ2hpbGQiLCJkb2N1bWVudCIsImNyZWF0ZVRleHROb2RlIiwiX19fQ1NTX0xPQURFUl9FWFBPUlRfX18iLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwidG9TdHJpbmciLCJ0aGlzIiwibWFwIiwiY29udGVudCIsIm5lZWRMYXllciIsImpvaW4iLCJtb2R1bGVzIiwiZGVkdXBlIiwidW5kZWZpbmVkIiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImsiLCJfayIsImNzc01hcHBpbmciLCJidG9hIiwiYmFzZTY0IiwidW5lc2NhcGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJKU09OIiwic3RyaW5naWZ5IiwiZGF0YSIsInNvdXJjZU1hcHBpbmciLCJlbGVtZW50IiwiY3JlYXRlRWxlbWVudCIsInNldEF0dHJpYnV0ZXMiLCJhdHRyaWJ1dGVzIiwiaW5zZXJ0IiwibWVtbyIsInN0eWxlIiwidGFyZ2V0Iiwic3R5bGVUYXJnZXQiLCJxdWVyeVNlbGVjdG9yIiwid2luZG93IiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50RG9jdW1lbnQiLCJoZWFkIiwiZSIsImdldFRhcmdldCIsIkVycm9yIiwiaW5zZXJ0U3R5bGVFbGVtZW50Iiwic3R5bGVUYWdUcmFuc2Zvcm0iLCJhcHBseSIsInBhcmVudE5vZGUiLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwiU3RhcnRHYW1lIiwibiIsImdldHRlciIsIl9fZXNNb2R1bGUiLCJkIiwiYSIsImRlZmluaXRpb24iLCJrZXkiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiZyIsImdsb2JhbFRoaXMiLCJGdW5jdGlvbiIsInByb3AiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJzY3JpcHRVcmwiLCJpbXBvcnRTY3JpcHRzIiwibG9jYXRpb24iLCJjdXJyZW50U2NyaXB0IiwidGFnTmFtZSIsInRvVXBwZXJDYXNlIiwic3JjIiwic2NyaXB0cyIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwidGVzdCIsInJlcGxhY2UiLCJwIiwibmMiLCJ1c2VyQ2FyZHMiLCJpbml0aWF0b3JDYXJkcyIsIm5hbWUiLCJzaG9ydE5hbWUiLCJjYXRlIiwiYXR0ayIsImRlZiIsImVzc2UiLCJnYW1lVG9vbHMiLCJudW1iZXJPZlNodWZmbGVzIiwic2h1ZmZsZUxpbWl0UmVhY2hlZCIsImJhdHRsZUNhcmQiLCJzd2l0Y2hlZENhcmRzIiwiTW9kaWZ5Q29udGVudFRvb2xzIiwicmVhc29uIiwic2h1ZmZsZUNhcmRzRGlzcGxheWVkIiwicXVlcnlTZWxlY3RvckFsbCIsInNodWZmbGVDYXJkc0NvbnRlbnRCdXR0b25zIiwiZm9yRWFjaCIsImNhcmQiLCJjbGFzc0xpc3QiLCJhZGQiLCJidXR0b24iLCJkaXNhYmxlZCIsIkJhdHRsZUxldmVsc0NvbnRlbnQiLCJjb250cm9scyIsImJhdHRsZUxldmVsc0NvbnRlbnQiLCJiYXR0bGVBcmVuYVNlY3Rpb24iLCJiYXR0bGVDYXJkRGVja1NlY3Rpb24iLCJiYXR0bGVMZXZlbFNlY3Rpb24iLCJiYXR0bGVMZXZlbCIsInRleHRDb250ZW50IiwiQmF0dGxlTGV2ZWxTZWN0aW9uIiwiQmF0dGxlQXJlbmFTZWN0aW9uIiwiQmF0dGxlQ2FyZERlY2tTZWN0aW9uIiwidXNlckNhcmQiLCJjb21wQ2FyZCIsInBsYXllckJhdHRsZUNhcmQiLCJ1c2VyQ2FyZERlY2siLCJhZGRFdmVudExpc3RlbmVyIiwiU3dpdGNoQ2FyZHMiLCJTaHVmZmxlQ2FyZHNDb250ZW50Iiwic2h1ZmZsZUNhcmRzQ29udGVudCIsIkRpc3BsYXlDYXJkc1NlY3Rpb24iLCJEaXNwbGF5Q2FyZHMiLCJTaHVmZmxlQnV0dG9uIiwiU3RhcnRCdXR0b24iLCJyZXBsYWNlQ2hpbGRyZW4iLCJzaHVmZmxlQnV0dG9uIiwic3RhcnRCdXR0b24iLCJkaXNwbGF5Q2FyZHNTZWN0aW9uIiwiZGlzcGxheWVkQ2FyZHMiLCJPcGVuQ2FyZEluZm9XaW5kb3ciLCJjb25zb2xlIiwibG9nIiwiY2FyZEluZm9XaW5kb3ciLCJjbG9zZVdpbmRvd0J1dHRvblNlY3Rpb24iLCJjbG9zZVdpbmRvd0J1dHRvbiIsIkNsb3NlQ2FyZEluZm9XaW5kb3ciLCJzZXRUaW1lb3V0IiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsIlNodWZmbGVDYXJkcyIsImlubmVySFRNTCIsInN1cHJhQ2FyZHMiLCJmZXJlQ2FyZHMiLCJib251bUNhcmRzIiwic2h1ZmZsZWRVc2VyRGVjayIsIk1hdGgiLCJmbG9vciIsInJhbmRvbSIsIlNodWZmbGVGZXJlQ2FyZHMiLCJzaHVmZmxlZEluZGV4IiwibWF0Y2giLCJyYW5kb21OdW0iLCJuZXh0UmFuZG9tTnVtIiwiU2h1ZmZsZUJvbnVtQ2FyZHMiLCJTaHVmZmxlR2F0ZSIsImxvY2FscyIsImdldEVsZW1lbnRCeUlkIiwibWFpbk1lbnVDb250ZW50IiwiYXBwVGl0bGUiLCJBcHBUaXRsZSIsInNldHRpbmdzQnV0dG9uIiwic29zdVN0dWRpb0J1dHRvbiIsIk1lbnVCdXR0b25zIiwiTWFpbk1lbnVET00iLCJTaHVmZmxlQ2FyZHNET00iLCJCYXR0bGVMZXZlbHNET00iXSwic291cmNlUm9vdCI6IiJ9