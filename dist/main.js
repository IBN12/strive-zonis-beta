(()=>{"use strict";var e={56:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},72:e=>{var n=[];function t(e){for(var t=-1,a=0;a<n.length;a++)if(n[a].identifier===e){t=a;break}return t}function a(e,a){for(var i={},r=[],s=0;s<e.length;s++){var c=e[s],d=a.base?c[0]+a.base:c[0],l=i[d]||0,A="".concat(d," ").concat(l);i[d]=l+1;var m=t(A),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==m)n[m].references++,n[m].updater(u);else{var C=o(u,a);a.byIndex=s,n.splice(s,0,{identifier:A,updater:C,references:1})}r.push(A)}return r}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var i=a(e=e||[],o=o||{});return function(e){e=e||[];for(var r=0;r<i.length;r++){var s=t(i[r]);n[s].references--}for(var c=a(e,o),d=0;d<i.length;d++){var l=t(i[d]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}i=c}}},113:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},159:(e,n,t)=>{t.d(n,{A:()=>s});var a=t(354),o=t.n(a),i=t(314),r=t.n(i)()(o());r.push([e.id,"/* root - The main root of the application. */\n:root{\n    --user-card-height: 0;\n    --user-card-width: 0; \n}\n\n/* body - The entire body for the application. */\nbody{\n    padding: 0;\n    margin: 0;\n}\n\n*{\n    box-sizing: border-box;\n}\n\n/* |Home Sector Content| */\n.home-sector-content{\n    border: 1px solid orchid; \n}\n\n.no-click{\n    pointer-events: none;  \n}\n/***************************************************************************************************************************************************************************/\n/***************************************************************************************************************************************************************************/\n/* Mobile and Desktop Miniturization */\n\n/* Media-0 - For mobile viewports */\n@media only screen and (max-width: 1000px)\n{\n    /* |Main Content| */\n    #content{\n        border: 1px solid red;\n        padding: 5px; \n    }\n\n    /* |Main Menu Content| */\n    .main-menu-content{\n        display: flex;\n        flex-direction: column;\n        align-items: center; \n        gap: 10px;\n\n        border: 1px solid purple;\n        margin-top: 20px; /* Temporary during testing */\n    }\n\n    /* |Shuffle Cards Content| */\n    .shuffle-cards-content{\n        display: flex;\n        flex-direction: column;\n        gap: 10px;\n\n        border: 1px solid orange;\n        padding: 5px;\n        margin-top: 20px; \n    }\n\n    .display-cards-section{ /* Display cards container */\n        display: flex; \n        justify-content: center; \n        gap: 5px; \n\n        border: 1px solid blue;\n    }\n    .display-cards-section > div{\n        display: flex;\n        justify-content: center;\n        align-items: center;\n\n        border: 1px solid black;\n        width: 65px;\n        height: 65px;\n        font-size: 10px;\n        text-align: center;\n    }\n    .shuffle-card-animation{ /* Shuffle Card Animation for the Display cards container. */\n        animation-name: shuffleCardAnimation;\n        animation-duration: 1s;\n        animation-timing-function: ease-in-out;\n    }\n    @keyframes shuffleCardAnimation{\n        from {\n            transform: scale(1);\n        }\n        to {\n            transform: scale(1.2); \n        }\n    }\n\n    .card-info-window{ /* The main card info window for the each card being displayed in the 'Display Card Section'. */\n        position: relative;\n        top: -120px; /* This will change based on the final page size. */\n\n        border: 1px solid red; \n        background-color: rgba(255, 0, 0, 0.432);\n        padding: 10px; \n    }\n    .card-info-window > div{ /* Close Window Button Section */\n        display: flex;\n        justify-content: end; \n        border: 1px solid green;\n    }\n    .card-info-window > div > img[src]{\n        width: 50px;\n    }\n    .open-card-info-window{ /* Will open the card info window with a keyframe animation. */ \n        animation-name: openCardInfoWindow;\n        animation-duration: .5s;\n        animation-timing-function: ease-in-out;\n        /* animation-fill-mode: forwards; */\n    }\n    @keyframes openCardInfoWindow{\n        from{\n            transform: perspective(800px) translateZ(-4000px);\n        }\n        to{\n            transform: perspective(800px) translateZ(25px); \n        }\n    }\n    .close-card-info-window{ /* Will close the card info window with a keyframe animation. */\n        animation-name: closeCardInfoWindow;\n        animation-duration: .5s;\n        animation-timing-function: ease-in-out;\n        animation-fill-mode: forwards;\n    }\n    @keyframes closeCardInfoWindow{\n        from{\n            transform: perspective(800px) translateZ(25px); \n        }\n        to{\n            transform: perspective(800px) translateZ(-4000px); \n        }\n    }\n\n    .shuffle-limit-reached{\n        animation-name: shuffleLimitReached;\n        animation-duration: 1s;\n        animation-timing-function: ease-in-out;\n        border: 1px solid red;\n    }\n    @keyframes shuffleLimitReached{\n        from{ \n            transform: scale(1)\n        }\n        to{\n            transform: scale(1.1); \n        }\n    }\n    .shuffle-limit-reached > span{\n        color: red; \n    }\n\n    /* |Battle Levels Content| */ \n    .battle-levels-content{\n        display: flex;\n        flex-direction: column;\n        gap: 20px; \n        border: 1px solid green; \n        margin-top: 20px; \n    }\n\n    .battle-level-section{ /* Battle Level Section */\n        text-align: center; \n        border: 1px solid blue; \n    }\n    .battle-level-section > h4{\n        margin: 0; \n    }\n\n    .battle-singularity-point-section{ /* Battle Sigularity Point Section */\n        display: flex;\n\n        border: 1px solid olive;\n    }\n    .battle-singularity-point-section > section{\n        flex: 1;\n        \n        text-align: center; \n        border: 1px solid black;\n    }\n    .sp-anim{\n        animation-name: singularityAnimation;\n        animation-duration: .7s;\n        animation-timing-function: ease-in-out; \n    }\n    @keyframes singularityAnimation{\n        from{\n            transform: translate(0);\n        }\n        to{\n            transform: perspective(800px) translateZ(50px);   \n            border: 2px solid #facc15;\n        }\n    }\n\n    .battle-arena-section{ /* Battle Arena Section */ \n        display: flex; \n        justify-content: space-between;\n\n        border: 1px solid purple;\n        padding: 3px; \n    }\n    .battle-arena-section > section{ /* User card & Comp Card in the Battle Arena Section. */ \n        display: flex;\n\n        border: 1px solid black; \n        width: 80px; /* The width and height will change once the card art is implemented. */ \n        height: 80px; \n    }\n    .battle-arena-section > section:nth-child(2) > div{ /* Comp Card Battle Damage - Will contain damage animation. */\n        border: 1px solid black;\n        position: absolute;\n        animation-name: compCardDamageAnim;\n        animation-duration: 0.7s; \n        animation-timing-function: ease-in-out;\n        animation-fill-mode: forwards;  \n    }\n    @keyframes compCardDamageAnim{\n        from{\n            transform: translate(0);\n        }\n        to{\n            transform: translate(-100px, -20px); \n        }\n    }\n    .battle-arena-section > section:nth-child(1) > div{ /* User Card Battle Damage - Will contain damage animation. */\n        border: 1px solid black;\n        position: absolute;\n        animation-name: userCardDamageAnim;\n        animation-duration: 0.7s; \n        animation-timing-function: ease-in-out;\n        animation-fill-mode: forwards; \n    }\n    @keyframes userCardDamageAnim{\n        from{\n            transform: translate(0);\n        }\n        to{\n            transform: translate(130px, -20px); \n        }\n    }\n    .death-anim{ /* Battle card death animation for both the user and computer. */\n        animation-name: deathAnim;\n        animation-timing-function: ease-in-out;\n        animation-duration: .8s;\n        background-color: rgba(255, 0, 0, 0.418);\n        border: 1px solid rgba(255, 0, 0, 0.418);\n    }\n    @keyframes deathAnim{\n        0%{\n            transform: perspective(800px) rotateY(0);\n        }\n        10%{\n            transform: perspective(800px) rotateY(10deg);\n        }\n        20%{\n            transform: perspective(800px) rotateY(40deg);\n        }\n        40%{\n            transform: perspective(800px) rotateY(-10deg); \n        }\n        60%{\n            transform: perspective(800px) rotateY(-40deg); \n        }\n        80%{\n            transform: perspective(800px) rotateY(10deg); \n        }\n        100%{\n            transform: perspective(800px) rotateY(40deg); \n        }\n    }\n\n    .battle-card-stats-section{ /* Battle Card Stats Section */\n        display: flex;\n        justify-content: space-between;\n        border: 1px solid cornflowerblue;\n        padding: 3px; \n    }\n    .battle-card-stats-section > section{ /* User Battle Card Stats & Comp Battle Card Stats */\n        display: flex;\n        flex-direction: column;\n        gap: 3px;\n        \n        border: 1px solid black;\n    }\n\n    .battle-card-deck-section{ /* Battle Card Deck Section */\n        display: flex;\n        justify-content: space-between;\n\n        border: 1px solid chocolate;\n        padding: 3px;\n    }\n    .battle-card-deck-section > section{ /* User Card Deck & Comp Card Deck */\n        display: flex;\n        justify-content: center;\n        gap: 10px; \n\n        padding: 3px;\n        border: 1px solid lightseagreen;\n    }\n    .battle-card-deck-section > section > div{ /* Each card in both deck sections */ \n        font-size: 10px; \n        border: 1px solid black; \n    }\n\n    .battle-command-section{ /* Battle Command Section */ \n        display: flex;\n        justify-content: space-around;\n\n        border: 1px solid lightcoral;\n        padding: 3px; \n    }\n    .user-card-attack-anim{ /* Battle Command: User Attack Anim */\n        animation-name: userAttackAnim;\n        animation-duration: 0.5s;\n        animation-timing-function: ease-in-out;\n    }\n    @keyframes userAttackAnim{\n        from{\n            transform: translateX(0);\n        }\n        to{\n            transform: translateX(20px); \n        }\n    }\n    .comp-card-attack-anim{ /* Battle Commmand: Computer Attack Anim */\n        animation-name: compAttackAnim;\n        animation-duration: 0.5s;\n        animation-timing-function: ease-in-out; \n    }\n    @keyframes compAttackAnim{\n        from{\n            transform: translateX(0); \n        }\n        to{\n            transform: translateX(-20px);  \n        }\n    }\n    .user-card-defend-anim{ /* Battle Command: User Defend Attack Anim */\n        position: absolute; \n        background-color: #818df856;\n        border: 1px solid #818df856;\n        width: var(--user-card-width);\n        height: var(--user-card-height); \n    }\n\n} ","",{version:3,sources:["webpack://./src/styles/styles.css"],names:[],mappings:"AAAA,6CAA6C;AAC7C;IACI,qBAAqB;IACrB,oBAAoB;AACxB;;AAEA,gDAAgD;AAChD;IACI,UAAU;IACV,SAAS;AACb;;AAEA;IACI,sBAAsB;AAC1B;;AAEA,0BAA0B;AAC1B;IACI,wBAAwB;AAC5B;;AAEA;IACI,oBAAoB;AACxB;AACA,4KAA4K;AAC5K,4KAA4K;AAC5K,sCAAsC;;AAEtC,mCAAmC;AACnC;;IAEI,mBAAmB;IACnB;QACI,qBAAqB;QACrB,YAAY;IAChB;;IAEA,wBAAwB;IACxB;QACI,aAAa;QACb,sBAAsB;QACtB,mBAAmB;QACnB,SAAS;;QAET,wBAAwB;QACxB,gBAAgB,EAAE,6BAA6B;IACnD;;IAEA,4BAA4B;IAC5B;QACI,aAAa;QACb,sBAAsB;QACtB,SAAS;;QAET,wBAAwB;QACxB,YAAY;QACZ,gBAAgB;IACpB;;IAEA,wBAAwB,4BAA4B;QAChD,aAAa;QACb,uBAAuB;QACvB,QAAQ;;QAER,sBAAsB;IAC1B;IACA;QACI,aAAa;QACb,uBAAuB;QACvB,mBAAmB;;QAEnB,uBAAuB;QACvB,WAAW;QACX,YAAY;QACZ,eAAe;QACf,kBAAkB;IACtB;IACA,yBAAyB,4DAA4D;QACjF,oCAAoC;QACpC,sBAAsB;QACtB,sCAAsC;IAC1C;IACA;QACI;YACI,mBAAmB;QACvB;QACA;YACI,qBAAqB;QACzB;IACJ;;IAEA,mBAAmB,+FAA+F;QAC9G,kBAAkB;QAClB,WAAW,EAAE,mDAAmD;;QAEhE,qBAAqB;QACrB,wCAAwC;QACxC,aAAa;IACjB;IACA,yBAAyB,gCAAgC;QACrD,aAAa;QACb,oBAAoB;QACpB,uBAAuB;IAC3B;IACA;QACI,WAAW;IACf;IACA,wBAAwB,8DAA8D;QAClF,kCAAkC;QAClC,uBAAuB;QACvB,sCAAsC;QACtC,mCAAmC;IACvC;IACA;QACI;YACI,iDAAiD;QACrD;QACA;YACI,8CAA8C;QAClD;IACJ;IACA,yBAAyB,+DAA+D;QACpF,mCAAmC;QACnC,uBAAuB;QACvB,sCAAsC;QACtC,6BAA6B;IACjC;IACA;QACI;YACI,8CAA8C;QAClD;QACA;YACI,iDAAiD;QACrD;IACJ;;IAEA;QACI,mCAAmC;QACnC,sBAAsB;QACtB,sCAAsC;QACtC,qBAAqB;IACzB;IACA;QACI;YACI;QACJ;QACA;YACI,qBAAqB;QACzB;IACJ;IACA;QACI,UAAU;IACd;;IAEA,4BAA4B;IAC5B;QACI,aAAa;QACb,sBAAsB;QACtB,SAAS;QACT,uBAAuB;QACvB,gBAAgB;IACpB;;IAEA,uBAAuB,yBAAyB;QAC5C,kBAAkB;QAClB,sBAAsB;IAC1B;IACA;QACI,SAAS;IACb;;IAEA,mCAAmC,oCAAoC;QACnE,aAAa;;QAEb,uBAAuB;IAC3B;IACA;QACI,OAAO;;QAEP,kBAAkB;QAClB,uBAAuB;IAC3B;IACA;QACI,oCAAoC;QACpC,uBAAuB;QACvB,sCAAsC;IAC1C;IACA;QACI;YACI,uBAAuB;QAC3B;QACA;YACI,8CAA8C;YAC9C,yBAAyB;QAC7B;IACJ;;IAEA,uBAAuB,yBAAyB;QAC5C,aAAa;QACb,8BAA8B;;QAE9B,wBAAwB;QACxB,YAAY;IAChB;IACA,iCAAiC,uDAAuD;QACpF,aAAa;;QAEb,uBAAuB;QACvB,WAAW,EAAE,uEAAuE;QACpF,YAAY;IAChB;IACA,oDAAoD,6DAA6D;QAC7G,uBAAuB;QACvB,kBAAkB;QAClB,kCAAkC;QAClC,wBAAwB;QACxB,sCAAsC;QACtC,6BAA6B;IACjC;IACA;QACI;YACI,uBAAuB;QAC3B;QACA;YACI,mCAAmC;QACvC;IACJ;IACA,oDAAoD,6DAA6D;QAC7G,uBAAuB;QACvB,kBAAkB;QAClB,kCAAkC;QAClC,wBAAwB;QACxB,sCAAsC;QACtC,6BAA6B;IACjC;IACA;QACI;YACI,uBAAuB;QAC3B;QACA;YACI,kCAAkC;QACtC;IACJ;IACA,aAAa,gEAAgE;QACzE,yBAAyB;QACzB,sCAAsC;QACtC,uBAAuB;QACvB,wCAAwC;QACxC,wCAAwC;IAC5C;IACA;QACI;YACI,wCAAwC;QAC5C;QACA;YACI,4CAA4C;QAChD;QACA;YACI,4CAA4C;QAChD;QACA;YACI,6CAA6C;QACjD;QACA;YACI,6CAA6C;QACjD;QACA;YACI,4CAA4C;QAChD;QACA;YACI,4CAA4C;QAChD;IACJ;;IAEA,4BAA4B,8BAA8B;QACtD,aAAa;QACb,8BAA8B;QAC9B,gCAAgC;QAChC,YAAY;IAChB;IACA,sCAAsC,oDAAoD;QACtF,aAAa;QACb,sBAAsB;QACtB,QAAQ;;QAER,uBAAuB;IAC3B;;IAEA,2BAA2B,6BAA6B;QACpD,aAAa;QACb,8BAA8B;;QAE9B,2BAA2B;QAC3B,YAAY;IAChB;IACA,qCAAqC,oCAAoC;QACrE,aAAa;QACb,uBAAuB;QACvB,SAAS;;QAET,YAAY;QACZ,+BAA+B;IACnC;IACA,2CAA2C,oCAAoC;QAC3E,eAAe;QACf,uBAAuB;IAC3B;;IAEA,yBAAyB,2BAA2B;QAChD,aAAa;QACb,6BAA6B;;QAE7B,4BAA4B;QAC5B,YAAY;IAChB;IACA,wBAAwB,qCAAqC;QACzD,8BAA8B;QAC9B,wBAAwB;QACxB,sCAAsC;IAC1C;IACA;QACI;YACI,wBAAwB;QAC5B;QACA;YACI,2BAA2B;QAC/B;IACJ;IACA,wBAAwB,0CAA0C;QAC9D,8BAA8B;QAC9B,wBAAwB;QACxB,sCAAsC;IAC1C;IACA;QACI;YACI,wBAAwB;QAC5B;QACA;YACI,4BAA4B;QAChC;IACJ;IACA,wBAAwB,4CAA4C;QAChE,kBAAkB;QAClB,2BAA2B;QAC3B,2BAA2B;QAC3B,6BAA6B;QAC7B,+BAA+B;IACnC;;AAEJ",sourcesContent:["/* root - The main root of the application. */\n:root{\n    --user-card-height: 0;\n    --user-card-width: 0; \n}\n\n/* body - The entire body for the application. */\nbody{\n    padding: 0;\n    margin: 0;\n}\n\n*{\n    box-sizing: border-box;\n}\n\n/* |Home Sector Content| */\n.home-sector-content{\n    border: 1px solid orchid; \n}\n\n.no-click{\n    pointer-events: none;  \n}\n/***************************************************************************************************************************************************************************/\n/***************************************************************************************************************************************************************************/\n/* Mobile and Desktop Miniturization */\n\n/* Media-0 - For mobile viewports */\n@media only screen and (max-width: 1000px)\n{\n    /* |Main Content| */\n    #content{\n        border: 1px solid red;\n        padding: 5px; \n    }\n\n    /* |Main Menu Content| */\n    .main-menu-content{\n        display: flex;\n        flex-direction: column;\n        align-items: center; \n        gap: 10px;\n\n        border: 1px solid purple;\n        margin-top: 20px; /* Temporary during testing */\n    }\n\n    /* |Shuffle Cards Content| */\n    .shuffle-cards-content{\n        display: flex;\n        flex-direction: column;\n        gap: 10px;\n\n        border: 1px solid orange;\n        padding: 5px;\n        margin-top: 20px; \n    }\n\n    .display-cards-section{ /* Display cards container */\n        display: flex; \n        justify-content: center; \n        gap: 5px; \n\n        border: 1px solid blue;\n    }\n    .display-cards-section > div{\n        display: flex;\n        justify-content: center;\n        align-items: center;\n\n        border: 1px solid black;\n        width: 65px;\n        height: 65px;\n        font-size: 10px;\n        text-align: center;\n    }\n    .shuffle-card-animation{ /* Shuffle Card Animation for the Display cards container. */\n        animation-name: shuffleCardAnimation;\n        animation-duration: 1s;\n        animation-timing-function: ease-in-out;\n    }\n    @keyframes shuffleCardAnimation{\n        from {\n            transform: scale(1);\n        }\n        to {\n            transform: scale(1.2); \n        }\n    }\n\n    .card-info-window{ /* The main card info window for the each card being displayed in the 'Display Card Section'. */\n        position: relative;\n        top: -120px; /* This will change based on the final page size. */\n\n        border: 1px solid red; \n        background-color: rgba(255, 0, 0, 0.432);\n        padding: 10px; \n    }\n    .card-info-window > div{ /* Close Window Button Section */\n        display: flex;\n        justify-content: end; \n        border: 1px solid green;\n    }\n    .card-info-window > div > img[src]{\n        width: 50px;\n    }\n    .open-card-info-window{ /* Will open the card info window with a keyframe animation. */ \n        animation-name: openCardInfoWindow;\n        animation-duration: .5s;\n        animation-timing-function: ease-in-out;\n        /* animation-fill-mode: forwards; */\n    }\n    @keyframes openCardInfoWindow{\n        from{\n            transform: perspective(800px) translateZ(-4000px);\n        }\n        to{\n            transform: perspective(800px) translateZ(25px); \n        }\n    }\n    .close-card-info-window{ /* Will close the card info window with a keyframe animation. */\n        animation-name: closeCardInfoWindow;\n        animation-duration: .5s;\n        animation-timing-function: ease-in-out;\n        animation-fill-mode: forwards;\n    }\n    @keyframes closeCardInfoWindow{\n        from{\n            transform: perspective(800px) translateZ(25px); \n        }\n        to{\n            transform: perspective(800px) translateZ(-4000px); \n        }\n    }\n\n    .shuffle-limit-reached{\n        animation-name: shuffleLimitReached;\n        animation-duration: 1s;\n        animation-timing-function: ease-in-out;\n        border: 1px solid red;\n    }\n    @keyframes shuffleLimitReached{\n        from{ \n            transform: scale(1)\n        }\n        to{\n            transform: scale(1.1); \n        }\n    }\n    .shuffle-limit-reached > span{\n        color: red; \n    }\n\n    /* |Battle Levels Content| */ \n    .battle-levels-content{\n        display: flex;\n        flex-direction: column;\n        gap: 20px; \n        border: 1px solid green; \n        margin-top: 20px; \n    }\n\n    .battle-level-section{ /* Battle Level Section */\n        text-align: center; \n        border: 1px solid blue; \n    }\n    .battle-level-section > h4{\n        margin: 0; \n    }\n\n    .battle-singularity-point-section{ /* Battle Sigularity Point Section */\n        display: flex;\n\n        border: 1px solid olive;\n    }\n    .battle-singularity-point-section > section{\n        flex: 1;\n        \n        text-align: center; \n        border: 1px solid black;\n    }\n    .sp-anim{\n        animation-name: singularityAnimation;\n        animation-duration: .7s;\n        animation-timing-function: ease-in-out; \n    }\n    @keyframes singularityAnimation{\n        from{\n            transform: translate(0);\n        }\n        to{\n            transform: perspective(800px) translateZ(50px);   \n            border: 2px solid #facc15;\n        }\n    }\n\n    .battle-arena-section{ /* Battle Arena Section */ \n        display: flex; \n        justify-content: space-between;\n\n        border: 1px solid purple;\n        padding: 3px; \n    }\n    .battle-arena-section > section{ /* User card & Comp Card in the Battle Arena Section. */ \n        display: flex;\n\n        border: 1px solid black; \n        width: 80px; /* The width and height will change once the card art is implemented. */ \n        height: 80px; \n    }\n    .battle-arena-section > section:nth-child(2) > div{ /* Comp Card Battle Damage - Will contain damage animation. */\n        border: 1px solid black;\n        position: absolute;\n        animation-name: compCardDamageAnim;\n        animation-duration: 0.7s; \n        animation-timing-function: ease-in-out;\n        animation-fill-mode: forwards;  \n    }\n    @keyframes compCardDamageAnim{\n        from{\n            transform: translate(0);\n        }\n        to{\n            transform: translate(-100px, -20px); \n        }\n    }\n    .battle-arena-section > section:nth-child(1) > div{ /* User Card Battle Damage - Will contain damage animation. */\n        border: 1px solid black;\n        position: absolute;\n        animation-name: userCardDamageAnim;\n        animation-duration: 0.7s; \n        animation-timing-function: ease-in-out;\n        animation-fill-mode: forwards; \n    }\n    @keyframes userCardDamageAnim{\n        from{\n            transform: translate(0);\n        }\n        to{\n            transform: translate(130px, -20px); \n        }\n    }\n    .death-anim{ /* Battle card death animation for both the user and computer. */\n        animation-name: deathAnim;\n        animation-timing-function: ease-in-out;\n        animation-duration: .8s;\n        background-color: rgba(255, 0, 0, 0.418);\n        border: 1px solid rgba(255, 0, 0, 0.418);\n    }\n    @keyframes deathAnim{\n        0%{\n            transform: perspective(800px) rotateY(0);\n        }\n        10%{\n            transform: perspective(800px) rotateY(10deg);\n        }\n        20%{\n            transform: perspective(800px) rotateY(40deg);\n        }\n        40%{\n            transform: perspective(800px) rotateY(-10deg); \n        }\n        60%{\n            transform: perspective(800px) rotateY(-40deg); \n        }\n        80%{\n            transform: perspective(800px) rotateY(10deg); \n        }\n        100%{\n            transform: perspective(800px) rotateY(40deg); \n        }\n    }\n\n    .battle-card-stats-section{ /* Battle Card Stats Section */\n        display: flex;\n        justify-content: space-between;\n        border: 1px solid cornflowerblue;\n        padding: 3px; \n    }\n    .battle-card-stats-section > section{ /* User Battle Card Stats & Comp Battle Card Stats */\n        display: flex;\n        flex-direction: column;\n        gap: 3px;\n        \n        border: 1px solid black;\n    }\n\n    .battle-card-deck-section{ /* Battle Card Deck Section */\n        display: flex;\n        justify-content: space-between;\n\n        border: 1px solid chocolate;\n        padding: 3px;\n    }\n    .battle-card-deck-section > section{ /* User Card Deck & Comp Card Deck */\n        display: flex;\n        justify-content: center;\n        gap: 10px; \n\n        padding: 3px;\n        border: 1px solid lightseagreen;\n    }\n    .battle-card-deck-section > section > div{ /* Each card in both deck sections */ \n        font-size: 10px; \n        border: 1px solid black; \n    }\n\n    .battle-command-section{ /* Battle Command Section */ \n        display: flex;\n        justify-content: space-around;\n\n        border: 1px solid lightcoral;\n        padding: 3px; \n    }\n    .user-card-attack-anim{ /* Battle Command: User Attack Anim */\n        animation-name: userAttackAnim;\n        animation-duration: 0.5s;\n        animation-timing-function: ease-in-out;\n    }\n    @keyframes userAttackAnim{\n        from{\n            transform: translateX(0);\n        }\n        to{\n            transform: translateX(20px); \n        }\n    }\n    .comp-card-attack-anim{ /* Battle Commmand: Computer Attack Anim */\n        animation-name: compAttackAnim;\n        animation-duration: 0.5s;\n        animation-timing-function: ease-in-out; \n    }\n    @keyframes compAttackAnim{\n        from{\n            transform: translateX(0); \n        }\n        to{\n            transform: translateX(-20px);  \n        }\n    }\n    .user-card-defend-anim{ /* Battle Command: User Defend Attack Anim */\n        position: absolute; \n        background-color: #818df856;\n        border: 1px solid #818df856;\n        width: var(--user-card-width);\n        height: var(--user-card-height); \n    }\n\n} "],sourceRoot:""}]);const s=r},314:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",a=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),a&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),a&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,a,o,i){"string"==typeof e&&(e=[[null,e,void 0]]);var r={};if(a)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(r[c]=!0)}for(var d=0;d<e.length;d++){var l=[].concat(e[d]);a&&r[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),n.push(l))}},n}},354:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),i="/*# ".concat(o," */");return[n].concat([i]).join("\n")}return[n].join("\n")}},540:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},659:e=>{var n={};e.exports=function(e,t){var a=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}},825:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var a="";t.supports&&(a+="@supports (".concat(t.supports,") {")),t.media&&(a+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(a+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),a+=t.css,o&&(a+="}"),t.media&&(a+="}"),t.supports&&(a+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(a,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}}},n={};function t(a){var o=n[a];if(void 0!==o)return o.exports;var i=n[a]={id:a,exports:{}};return e[a](i,i.exports,t),i.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var a in n)t.o(n,a)&&!t.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:n[a]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&"SCRIPT"===n.currentScript.tagName.toUpperCase()&&(e=n.currentScript.src),!e)){var a=n.getElementsByTagName("script");if(a.length)for(var o=a.length-1;o>-1&&(!e||!/^http(s?):/.test(e));)e=a[o--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/^blob:/,"").replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.nc=void 0;let a=[],o=[{name:"Tobo The Fighter",shortName:"Tobo",cate:"supra",attk:45,def:12,esse:100},{name:"The One From System",shortName:"Jace",cate:"supra",attk:44,def:14,esse:100},{name:"Spunky With The Funky Draco",shortName:"Spunky",cate:"supra",attk:39,def:17,esse:100},{name:"Allybelle",shortName:"Ally",cate:"fere",attk:27,def:15,esse:100},{name:"The Experiment",shortName:"Mason",cate:"fere",attk:24,def:13,esse:100},{name:"The Trendsetter Rotao",shortName:"Rotao",cate:"fere",attk:25,def:18,esse:100},{name:"Dan The Prol",shortName:"Dan",cate:"bonum",attk:19,def:22,esse:100},{name:"Mac The Rat",shortName:"Mac",cate:"bonum",attk:16,def:33,esse:100},{name:"A Karen",shortName:"Karen",cate:"bonum",attk:15,def:26,esse:100},{name:"The Office Worker Ken",shortName:"Ken",cate:"bonum",attk:16,def:25,esse:100}];const i={numberOfShuffles:0,shuffleLimitReached:!1,currentLevel:1,battleCard:null,switchedCards:!1,userTurn:!1,userSingularityPoints:0,userPreviousSingularityPoints:0,battleCardDeathAnimAdded:!1,userAction:null,userAttkDamage:0,compBattleCard:null,compSwitchedCards:!1,compCardDeckCreated:!1,compSingularityPoints:0,compPreviousSingularityPoints:0,compTurn:!1,compCardDeathAnimAdded:!1,compAction:null,compAttkDamage:0};function r(e,n){if("Shuffle Cards Content"===e){const e=document.querySelectorAll(".shuffle-cards-content > div > div"),t=document.querySelectorAll(".shuffle-cards-content > button");"open card info window"===n?(e.forEach((e=>{e.classList.add("no-click")})),t.forEach((e=>{e.disabled=!0}))):"close card info window"===n?(e.forEach((e=>{e.classList.remove("no-click")})),t.forEach((e=>{e.disabled=!1}))):"shuffle cards"===n&&e.forEach((e=>{e.classList.add("no-click")}))}else if("Battle Levels Content"===e){const e=document.querySelectorAll(".battle-command-section > button"),t=document.querySelectorAll(".battle-card-deck-section > section > div");"Attack"===n?(t.forEach((e=>{e.classList.add("no-click")})),e.forEach((e=>{e.disabled=!0}))):"Attack Sequence Done"===n&&(t.forEach((e=>{e.classList.remove("no-click")})),e.forEach((e=>{e.disabled=!1}))),"Defend"===n&&(t.forEach((e=>e.classList.add("no-click"))),e.forEach((e=>e.disabled=!0)))}}const s=t.p+"5b9eb662f103822a4a50.svg",c=[{level:1,levelName:"The Unknown Birth",levelCompleted:!1},{level:2,levelName:"Dear Friend",levelCompleted:!1}],d=[{name:"Renoy Bright",shortName:"Renoy",levelCard:1,cate:"supra",attk:43,def:13,esse:100,defeated:!1},{name:"Chairman Sam",shortName:"Chairman",levelCard:1,cate:"fere",attk:25,def:19,esse:100,defeated:!1},{name:"Guard 1",shortName:"Guard 1",levelCard:1,cate:"bonum",attk:14,def:25,esse:100,defeated:!1},{name:"Guard 2",shortName:"Guard 2",levelCard:1,cate:"bonum",attk:14,def:25,esse:100,defeated:!1},{name:"Tales Venoy",shortName:"Tales",levelCard:2,cate:"supra",attk:0,def:0,esse:100,defeated:!1}];let l=[];function A(e,n,t){let a=null,o=0;if("Defend"===i.userAction&&(0===i.compAttkDamage?t=0:o=i.compAttkDamage),"Attack"===e){switch(t){case 0:a=0;break;case 1/3:a=10-o;break;case.5:a=20-o;break;case 2/3:a=30-o;break;case 3/4:a=40-o;break;case 1:a=50-o;break;default:a=null}"Player"===n?i.userSingularityPoints+=a:i.compSingularityPoints+=a}}function m(e,n,t){console.log(e),t?n.forEach(((e,t)=>{e.defeated&&n.splice(t,1)})):(e.defeated=!0,e.esse=0)}function u(e,n,t,a){const o=[1/3,.5,0,2/3,3/4,1,0];if("Player"===n){if("Attack"===e){const r=Math.floor(Math.random()*o.length);let s=t.attk*o[r];return s=Number(s.toFixed(0)),a.esse-=s,i.userAttkDamage=s,a.esse<=0&&(console.log(`${a.name} has been defeated!`),m(a,l,i.compCardDeathAnimAdded)),A(e,n,o[r]),0===s?"Missed!":0!==s&&1!==s?`${s} Hit!`:`${s} Critical Hit!`}if("Defend"===e)return"Defending"}else if("Computer"===n&&"Attack"===e){i.compAction="Attack";let r=0;const s=Math.floor(Math.random()*o.length);let c=a.attk*o[s];return c=Number(c.toFixed(0)),"Defend"===i.userAction?(i.userAction=null,0!==c?(r=t.def,c-t.def<=0?(t.esse-=0,i.compAttkDamage=0):(t.esse-=c-t.def,i.compAttkDamage=c-t.def,console.log("Computer Attack damage after user defends: ",c-t.def))):(t.esse-=c,i.compAttkDamage=c)):(t.esse-=c,i.compAttkDamage=c),A(e,n,o[s]),0===c?"Missed!":0!==c&&1!==c?0===i.compAttkDamage?"0 Hit!":c-r+" Hit!":c-r+" Critical Hit!"}}function C(e){i.compCardDeckCreated||(d.forEach((e=>{e.levelCard===i.currentLevel&&l.push(e)})),i.compCardDeckCreated=!0);const n=document.querySelector(".battle-levels-content"),t=document.querySelector(".battle-singularity-point-section"),a=document.querySelector(".battle-arena-section"),o=document.querySelector(".battle-card-stats-section"),r=document.querySelector(".battle-card-deck-section"),s=document.querySelector(".battle-command-section");0===e?(function(){const e=document.querySelector(".battle-levels-content"),n=document.createElement("section");n.classList.add("battle-level-section");const t=document.createElement("h4");c.forEach((e=>{e.level===i.currentLevel&&(t.textContent=`Level: ${e.level} - ${e.levelName}`)})),n.appendChild(t),e.appendChild(n)}(),p(),f(),h(),B(),b()):1===e?(n.removeChild(t),n.removeChild(a),n.removeChild(o),n.removeChild(r),n.removeChild(s),p(),f(),h(),B(),b()):2===e?(n.removeChild(t),n.removeChild(a),n.removeChild(o),n.removeChild(r),n.removeChild(s),p(),f(),h(),B(),b(),function(){const e=document.querySelector(".battle-arena-section > section:nth-child(1)");if("Defend"===i.userAction){const n=document.createElement("section");n.classList.add("user-card-defend-anim");let t=e.clientHeight,a=e.clientWidth;document.documentElement.style.setProperty("--user-card-height",`${t}px`),document.documentElement.style.setProperty("--user-card-width",`${a}px`),e.appendChild(n)}}()):3===e&&(n.removeChild(o),n.removeChild(r),n.removeChild(s),h(),B(),b(),C(2),setTimeout((()=>{document.querySelector(".battle-arena-section > section:nth-child(2)").classList.add("death-anim"),i.compCardDeathAnimAdded=!0,m(i.compBattleCard,l,i.compCardDeathAnimAdded),i.compCardDeathAnimAdded=!1}),1600),setTimeout((()=>{C(1)}),2500))}function p(){const e=document.querySelector(".battle-levels-content"),n=document.createElement("section");n.classList.add("battle-singularity-point-section");const t=document.createElement("section");i.userSingularityPoints>0&&i.userTurn?(i.userTurn=!1,i.userSingularityPoints>i.userPreviousSingularityPoints&&t.classList.add("sp-anim"),t.textContent=`${i.userSingularityPoints} SP`,i.userPreviousSingularityPoints=i.userSingularityPoints,console.log("Player SP: ",i.userSingularityPoints),console.log("\n")):(i.userTurn=!1,t.textContent=`${i.userSingularityPoints} SP`);const a=document.createElement("section");i.compSingularityPoints>0&&i.compTurn?(i.compTurn=!1,i.compSingularityPoints>i.compPreviousSingularityPoints&&a.classList.add("sp-anim"),a.textContent=`${i.compSingularityPoints} SP`,i.compPreviousSingularityPoints=i.compSingularityPoints,console.log("Computer SP: ",i.compSingularityPoints),console.log("\n")):(i.compTurn=!1,a.textContent=`${i.compSingularityPoints} SP`),n.appendChild(t),n.appendChild(a),e.appendChild(n)}function f(){const e=document.querySelector(".battle-levels-content"),n=document.createElement("section");n.classList.add("battle-arena-section");const t=document.createElement("section");i.switchedCards?t.textContent=i.battleCard.name:(i.battleCard=a[0],t.textContent=a[0].name);const o=document.createElement("section");i.compSwitchedCards?console.log("The Computer has switched cards"):(i.compBattleCard=l[0],o.textContent=l[0].name),n.appendChild(t),n.appendChild(o),e.appendChild(n)}function h(){const e=document.querySelector(".battle-levels-content"),n=document.createElement("section");n.classList.add("battle-card-stats-section");const t=document.createElement("section");a.forEach((e=>{if(e.name===i.battleCard.name){const n=document.createElement("div");n.textContent=`Cate: ${e.cate}`;const a=document.createElement("div");a.textContent=`Attk: ${e.attk}`;const o=document.createElement("div");o.textContent=`Def: ${e.def}`;const i=document.createElement("div");i.textContent=`Esse: ${e.esse}`,t.appendChild(n),t.appendChild(a),t.appendChild(o),t.appendChild(i)}}));const o=document.createElement("section");l.forEach((e=>{if(e.name===i.compBattleCard.name){const n=document.createElement("div");n.textContent=`Cate: ${e.cate}`;const t=document.createElement("div");t.textContent=`Attk: ${e.attk}`;const a=document.createElement("div");a.textContent=`Def: ${e.def}`;const i=document.createElement("div");i.textContent=`Esse: ${e.esse}`,o.appendChild(n),o.appendChild(t),o.appendChild(a),o.appendChild(i)}})),n.appendChild(t),n.appendChild(o),e.appendChild(n)}function B(){const e=document.querySelector(".battle-levels-content"),n=document.createElement("section");n.classList.add("battle-card-deck-section");const t=document.querySelector(".battle-arena-section > section:nth-child(1)"),o=document.querySelector(".battle-arena-section > section:nth-child(2)"),r=document.createElement("section");for(let e=0;e<a.length;e++)if(a[e].name!==t.textContent){const n=document.createElement("div");n.textContent=a[e].shortName,n.addEventListener("click",g),r.appendChild(n)}const s=document.createElement("section");d.forEach((e=>{if(e.name!==o.textContent&&e.levelCard===i.currentLevel&&!e.defeated){const n=document.createElement("div");n.textContent=e.shortName,s.appendChild(n)}})),n.appendChild(r),n.appendChild(s),e.appendChild(n)}function g(e){i.switchedCards=!0,a.forEach((n=>{n.shortName===e.target.textContent&&(i.battleCard=n)})),C(1)}function b(){const e=document.querySelector(".battle-levels-content"),n=document.createElement("section");n.classList.add("battle-command-section");const t=document.createElement("button");t.textContent="Attack";const a=document.createElement("button");a.textContent="Defend",t.addEventListener("click",x),a.addEventListener("click",x),n.appendChild(t),n.appendChild(a),e.appendChild(n)}function x(e){const n=document.querySelector(".battle-arena-section > section:nth-child(2)"),t=document.querySelector(".battle-arena-section > section:nth-child(1)");if(i.userTurn=!0,console.log("Player Action..."),"Attack"===e.target.textContent){i.userAction=e.target.textContent,r("Battle Levels Content","Attack"),t.classList.add("user-card-attack-anim");const a=u("Attack","Player",i.battleCard,i.compBattleCard),o=document.createElement("div");o.textContent=a,setTimeout((()=>{n.appendChild(o)}),500),i.compBattleCard.defeated?setTimeout((()=>{t.classList.remove("user-card-attack-anim"),n.removeChild(o),C(3),r("Battle Levels Content","Attack")}),1200):(setTimeout((()=>{t.classList.remove("user-card-attack-anim");const e=document.querySelector(".battle-arena-section > section:nth-child(2) > div");n.removeChild(e),C(2),r("Battle Levels Content","Attack")}),1300),setTimeout((()=>{y()}),1900))}if("Defend"===e.target.textContent){i.userAction=e.target.textContent,r("Battle Levels Content","Defend");const n=document.createElement("section");n.classList.add("user-card-defend-anim");let a=t.clientHeight,o=t.clientWidth;document.documentElement.style.setProperty("--user-card-height",`${a}px`),document.documentElement.style.setProperty("--user-card-width",`${o}px`);const s=u("Defend","Player",i.battleCard,i.compBattleCard),c=document.createElement("div");c.textContent=s,t.appendChild(c),t.appendChild(n),setTimeout((()=>{C(2),r("Battle Levels Content","Defend")}),1e3),setTimeout((()=>{y()}),1300)}}function y(){const e=document.querySelector(".battle-arena-section > section:nth-child(2)"),n=document.querySelector(".battle-arena-section > section:nth-child(1)");i.compTurn=!0,console.log("Computer Action..."),"supra"===i.battleCard.cate&&(console.log(`Players battle card name: ${i.battleCard.name}`),console.log(`Players battle card category: ${i.battleCard.cate}`)),"Attack"===i.userAction?(console.log(`Players previous move: ${i.userAction}`),i.userAttkDamage>0?console.log(`Players attack damage: ${i.userAttkDamage}`):0===i.userAttkDamage&&console.log("Players attacks was a miss.")):"Defense"===i.userAction&&console.log(`Player's previous move: ${i.userAction}`),i.userSingularityPoints>0&&console.log(`Players SP: ${i.userSingularityPoints}`);{e.classList.add("comp-card-attack-anim");const t=u("Attack","Computer",i.battleCard,i.compBattleCard),a=document.createElement("div");a.textContent=t,setTimeout((()=>{n.appendChild(a)}),500),setTimeout((()=>{e.classList.remove("comp-card-attack-anim"),n.removeChild(a),C(2),r("Battle Levels Content","Attack")}),1300),setTimeout((()=>{r("Battle Levels Content","Attack Sequence Done")}),1900)}}function v(e){const n=document.querySelector(".shuffle-cards-content");if(0===e)k(),Q(),S(),E();else if(1===e)n.replaceChildren(),k(),Q(),S(),E();else if(2===e){const e=document.querySelector(".shuffle-cards-content > button:nth-child(2)"),t=document.querySelector(".shuffle-cards-content > button:nth-child(3)");n.removeChild(e),n.removeChild(t),S(),E()}}function k(){const e=document.querySelector(".shuffle-cards-content"),n=document.createElement("div");n.classList.add("display-cards-section");for(let e=0;e<4;e++){const e=document.createElement("div");n.appendChild(e)}e.appendChild(n)}function Q(){const e=document.querySelectorAll(".display-cards-section > div");0===a.length?e.forEach((e=>{e.textContent="No Card"})):e.forEach(((e,n)=>{e.textContent=`${a[n].name}`,e.addEventListener("click",w)}))}function w(e){const n=document.querySelector(".shuffle-cards-content");console.log(e.target);const t=document.createElement("div");t.classList.add("card-info-window"),t.classList.add("open-card-info-window");const a=document.createElement("div"),o=document.createElement("img");o.src=s,a.appendChild(o),o.addEventListener("click",I),r("Shuffle Cards Content","open card info window"),t.appendChild(a),n.appendChild(t)}function I(){const e=document.querySelector(".shuffle-cards-content"),n=document.querySelector(".card-info-window");n.classList.remove("open-card-info-window"),n.classList.add("close-card-info-window"),setTimeout((()=>{e.removeChild(n)}),500),setTimeout((()=>{r("Shuffle Cards Content","close card info window")}),700)}function S(){const e=document.querySelector(".shuffle-cards-content"),n=document.createElement("button");3===i.numberOfShuffles?(console.log("Shuffle limit reached"),i.shuffleLimitReached=!0,n.removeEventListener("click",L),n.classList.add("shuffle-limit-reached"),n.innerHTML=`Shuffle (${i.numberOfShuffles}) <span>Limit Reached</span>`,n.addEventListener("click",(()=>{v(2)}))):(n.addEventListener("click",L),n.textContent=`Shuffle (${i.numberOfShuffles})`),e.appendChild(n)}function E(){const e=document.querySelector(".shuffle-cards-content"),n=document.createElement("button");n.textContent="Start",0===a.length&&(n.disabled=!0),n.addEventListener("click",D),e.appendChild(n)}function D(){C(0)}function L(e){a=function(){let e=[],n=[],t=[],a=[];var i;o.forEach((a=>{"supra"===a.cate?e.push(a):"fere"===a.cate?n.push(a):"bonum"===a.cate&&t.push(a)})),a.push(e[(i=e.length,Math.floor(Math.random()*i))]),a.push(n[function(e){return Math.floor(Math.random()*e)}(n.length)]);const r=function(e){let n=!1,t=[];const a=Math.floor(Math.random()*e);for(;!n;){const o=Math.floor(Math.random()*e);a!==o&&(t.push(a),t.push(o),n=!0)}return t}(t.length);return a.push(t[r[0]]),a.push(t[r[1]]),a}(),console.log(a),i.numberOfShuffles++,console.log("Shuffles: ",i.numberOfShuffles),console.log("\n"),r("Shuffle Cards Content","shuffle cards"),document.querySelectorAll(".shuffle-cards-content > button").forEach((e=>{e.disabled=!0})),document.querySelectorAll(".display-cards-section > div").forEach(((e,n)=>{switch(n){case 0:e.classList.add("shuffle-card-animation"),setTimeout((()=>{e.classList.remove("shuffle-card-animation")}),1e3);break;case 1:setTimeout((()=>{e.classList.add("shuffle-card-animation")}),1e3),setTimeout((()=>{e.classList.remove("shuffle-card-animation")}),2e3);break;case 2:setTimeout((()=>{e.classList.add("shuffle-card-animation")}),2e3),setTimeout((()=>{e.classList.remove("shuffle-card-animation")}),3e3);break;case 3:setTimeout((()=>{e.classList.add("shuffle-card-animation")}),3e3),setTimeout((()=>{e.classList.remove("shuffle-card-animation")}),4e3);break;default:return}})),setTimeout((()=>{v(1)}),4500)}var T=t(72),P=t.n(T),Y=t(825),q=t.n(Y),M=t(659),$=t.n(M),j=t(56),N=t.n(j),W=t(540),U=t.n(W),R=t(113),F=t.n(R),z=t(159),J={};J.styleTagTransform=F(),J.setAttributes=N(),J.insert=$().bind(null,"head"),J.domAPI=q(),J.insertStyleElement=U(),P()(z.A,J),z.A&&z.A.locals&&z.A.locals,console.log("Application will initiate"),function(){const e=document.getElementById("content"),n=document.createElement("div");n.classList.add("home-sector-content"),e.appendChild(n)}(),function(){const e=document.getElementById("content"),n=document.createElement("div");n.classList.add("main-menu-content"),e.appendChild(n)}(),function(){const e=document.getElementById("content"),n=document.createElement("div");n.classList.add("shuffle-cards-content"),e.appendChild(n)}(),function(){const e=document.getElementById("content"),n=document.createElement("div");n.classList.add("battle-levels-content"),e.appendChild(n)}(),v(0)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,