(()=>{"use strict";var e={56:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},72:e=>{var n=[];function t(e){for(var t=-1,a=0;a<n.length;a++)if(n[a].identifier===e){t=a;break}return t}function a(e,a){for(var i={},r=[],c=0;c<e.length;c++){var s=e[c],d=a.base?s[0]+a.base:s[0],l=i[d]||0,A="".concat(d," ").concat(l);i[d]=l+1;var u=t(A),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==u)n[u].references++,n[u].updater(p);else{var m=o(p,a);a.byIndex=c,n.splice(c,0,{identifier:A,updater:m,references:1})}r.push(A)}return r}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var i=a(e=e||[],o=o||{});return function(e){e=e||[];for(var r=0;r<i.length;r++){var c=t(i[r]);n[c].references--}for(var s=a(e,o),d=0;d<i.length;d++){var l=t(i[d]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}i=s}}},113:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},159:(e,n,t)=>{t.d(n,{A:()=>c});var a=t(354),o=t.n(a),i=t(314),r=t.n(i)()(o());r.push([e.id,"/* body - The entire body for the application. */\nbody{\n    padding: 0;\n    margin: 0;\n}\n\n*{\n    box-sizing: border-box;\n}\n\n.no-click{\n    pointer-events: none;  \n}\n/***************************************************************************************************************************************************************************/\n/***************************************************************************************************************************************************************************/\n/* Mobile and Desktop Miniturization */\n\n/* Media-0 - For mobile viewports */\n@media only screen and (max-width: 1000px)\n{\n    /* |Main Content| */\n    #content{\n        border: 1px solid red;\n        padding: 5px; \n    }\n\n    /* |Main Menu Content| */\n    .main-menu-content{\n        display: flex;\n        flex-direction: column;\n        align-items: center; \n        gap: 10px;\n\n        border: 1px solid purple;\n    }\n\n    /* |Shuffle Cards Content| */\n    .shuffle-cards-content{\n        display: flex;\n        flex-direction: column;\n        gap: 10px;\n\n        border: 1px solid orange;\n        padding: 5px;\n        margin-top: 20px; \n    }\n\n    .display-cards-section{ /* Display cards container */\n        display: flex; \n        justify-content: center; \n        gap: 5px; \n\n        border: 1px solid blue;\n    }\n    .display-cards-section > div{\n        display: flex;\n        justify-content: center;\n        align-items: center;\n\n        border: 1px solid black;\n        width: 65px;\n        height: 65px;\n        font-size: 10px;\n        text-align: center;\n    }\n    .shuffle-card-animation{ /* Shuffle Card Animation for the Display cards container. */\n        animation-name: shuffleCardAnimation;\n        animation-duration: 1s;\n        animation-timing-function: ease-in-out;\n    }\n    @keyframes shuffleCardAnimation{\n        from {\n            transform: scale(1);\n        }\n        to {\n            transform: scale(1.2); \n        }\n    }\n\n    .card-info-window{ /* The main card info window for the each card being displayed in the 'Display Card Section'. */\n        position: relative;\n        top: -120px; /* This will change based on the final page size. */\n\n        border: 1px solid red; \n        background-color: rgba(255, 0, 0, 0.432);\n        padding: 10px; \n    }\n    .card-info-window > div{ /* Close Window Button Section */\n        display: flex;\n        justify-content: end; \n        border: 1px solid green;\n    }\n    .card-info-window > div > img[src]{\n        width: 50px;\n    }\n    .open-card-info-window{ /* Will open the card info window with a keyframe animation. */ \n        animation-name: openCardInfoWindow;\n        animation-duration: .5s;\n        animation-timing-function: ease-in-out;\n        /* animation-fill-mode: forwards; */\n    }\n    @keyframes openCardInfoWindow{\n        from{\n            transform: perspective(800px) translateZ(-4000px);\n        }\n        to{\n            transform: perspective(800px) translateZ(25px); \n        }\n    }\n    .close-card-info-window{ /* Will close the card info window with a keyframe animation. */\n        animation-name: closeCardInfoWindow;\n        animation-duration: .5s;\n        animation-timing-function: ease-in-out;\n        animation-fill-mode: forwards;\n    }\n    @keyframes closeCardInfoWindow{\n        from{\n            transform: perspective(800px) translateZ(25px); \n        }\n        to{\n            transform: perspective(800px) translateZ(-4000px); \n        }\n    }\n\n    .shuffle-limit-reached{\n        animation-name: shuffleLimitReached;\n        animation-duration: 1s;\n        animation-timing-function: ease-in-out;\n        border: 1px solid red;\n    }\n    @keyframes shuffleLimitReached{\n        from{ \n            transform: scale(1)\n        }\n        to{\n            transform: scale(1.1); \n        }\n    }\n    .shuffle-limit-reached > span{\n        color: red; \n    }\n\n    /* |Battle Levels Content| */ \n    .battle-levels-content{\n        display: flex;\n        flex-direction: column;\n        gap: 20px; \n        border: 1px solid green; \n        margin-top: 20px; \n    }\n\n    .battle-level-section{ /* Battle Level Section */\n        text-align: center; \n        border: 1px solid blue; \n    }\n    .battle-level-section > h4{\n        margin: 0; \n    }\n\n    .battle-arena-section{ /* Battle Arena Section */ \n        display: flex; \n        justify-content: space-between;\n\n        border: 1px solid purple;\n        padding: 3px; \n    }\n    .battle-arena-section > section{ /* User card & Comp Card in the Battle Arena Section. */ \n        display: flex;\n\n        border: 1px solid black; \n        width: 80px; /* The width and height will change once the card art is implemented. */ \n        height: 80px; \n    }\n\n    .battle-card-stats-section{ /* Battle Card Stats Section */\n        display: flex;\n        border: 1px solid cornflowerblue;\n        padding: 3px; \n    }\n    .battle-card-stats-section > section{ /* User Battle Card Stats & Comp Battle Card Stats */\n        display: flex;\n        flex-direction: column;\n        gap: 3px;\n        \n        border: 1px solid black;\n    }\n\n    .battle-card-deck-section{ /* Battle Card Deck Section */\n        display: flex;\n        justify-content: space-between;\n\n        border: 1px solid chocolate;\n        padding: 3px;\n    }\n    .battle-card-deck-section > section{ /* User Card Deck & Comp Card Deck */\n        display: flex;\n        justify-content: center;\n        gap: 10px; \n\n        padding: 3px;\n        border: 1px solid lightseagreen;\n    }\n    .battle-card-deck-section > section > div{ /* Each card in both deck sections */ \n        font-size: 10px; \n        border: 1px solid black; \n    }\n\n    .battle-command-section{ /* Battle Command Section */ \n        border: 1px solid lightcoral;\n        padding: 3px; \n    }\n\n\n\n} ","",{version:3,sources:["webpack://./src/styles/styles.css"],names:[],mappings:"AAAA,gDAAgD;AAChD;IACI,UAAU;IACV,SAAS;AACb;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,oBAAoB;AACxB;AACA,4KAA4K;AAC5K,4KAA4K;AAC5K,sCAAsC;;AAEtC,mCAAmC;AACnC;;IAEI,mBAAmB;IACnB;QACI,qBAAqB;QACrB,YAAY;IAChB;;IAEA,wBAAwB;IACxB;QACI,aAAa;QACb,sBAAsB;QACtB,mBAAmB;QACnB,SAAS;;QAET,wBAAwB;IAC5B;;IAEA,4BAA4B;IAC5B;QACI,aAAa;QACb,sBAAsB;QACtB,SAAS;;QAET,wBAAwB;QACxB,YAAY;QACZ,gBAAgB;IACpB;;IAEA,wBAAwB,4BAA4B;QAChD,aAAa;QACb,uBAAuB;QACvB,QAAQ;;QAER,sBAAsB;IAC1B;IACA;QACI,aAAa;QACb,uBAAuB;QACvB,mBAAmB;;QAEnB,uBAAuB;QACvB,WAAW;QACX,YAAY;QACZ,eAAe;QACf,kBAAkB;IACtB;IACA,yBAAyB,4DAA4D;QACjF,oCAAoC;QACpC,sBAAsB;QACtB,sCAAsC;IAC1C;IACA;QACI;YACI,mBAAmB;QACvB;QACA;YACI,qBAAqB;QACzB;IACJ;;IAEA,mBAAmB,+FAA+F;QAC9G,kBAAkB;QAClB,WAAW,EAAE,mDAAmD;;QAEhE,qBAAqB;QACrB,wCAAwC;QACxC,aAAa;IACjB;IACA,yBAAyB,gCAAgC;QACrD,aAAa;QACb,oBAAoB;QACpB,uBAAuB;IAC3B;IACA;QACI,WAAW;IACf;IACA,wBAAwB,8DAA8D;QAClF,kCAAkC;QAClC,uBAAuB;QACvB,sCAAsC;QACtC,mCAAmC;IACvC;IACA;QACI;YACI,iDAAiD;QACrD;QACA;YACI,8CAA8C;QAClD;IACJ;IACA,yBAAyB,+DAA+D;QACpF,mCAAmC;QACnC,uBAAuB;QACvB,sCAAsC;QACtC,6BAA6B;IACjC;IACA;QACI;YACI,8CAA8C;QAClD;QACA;YACI,iDAAiD;QACrD;IACJ;;IAEA;QACI,mCAAmC;QACnC,sBAAsB;QACtB,sCAAsC;QACtC,qBAAqB;IACzB;IACA;QACI;YACI;QACJ;QACA;YACI,qBAAqB;QACzB;IACJ;IACA;QACI,UAAU;IACd;;IAEA,4BAA4B;IAC5B;QACI,aAAa;QACb,sBAAsB;QACtB,SAAS;QACT,uBAAuB;QACvB,gBAAgB;IACpB;;IAEA,uBAAuB,yBAAyB;QAC5C,kBAAkB;QAClB,sBAAsB;IAC1B;IACA;QACI,SAAS;IACb;;IAEA,uBAAuB,yBAAyB;QAC5C,aAAa;QACb,8BAA8B;;QAE9B,wBAAwB;QACxB,YAAY;IAChB;IACA,iCAAiC,uDAAuD;QACpF,aAAa;;QAEb,uBAAuB;QACvB,WAAW,EAAE,uEAAuE;QACpF,YAAY;IAChB;;IAEA,4BAA4B,8BAA8B;QACtD,aAAa;QACb,gCAAgC;QAChC,YAAY;IAChB;IACA,sCAAsC,oDAAoD;QACtF,aAAa;QACb,sBAAsB;QACtB,QAAQ;;QAER,uBAAuB;IAC3B;;IAEA,2BAA2B,6BAA6B;QACpD,aAAa;QACb,8BAA8B;;QAE9B,2BAA2B;QAC3B,YAAY;IAChB;IACA,qCAAqC,oCAAoC;QACrE,aAAa;QACb,uBAAuB;QACvB,SAAS;;QAET,YAAY;QACZ,+BAA+B;IACnC;IACA,2CAA2C,oCAAoC;QAC3E,eAAe;QACf,uBAAuB;IAC3B;;IAEA,yBAAyB,2BAA2B;QAChD,4BAA4B;QAC5B,YAAY;IAChB;;;;AAIJ",sourcesContent:["/* body - The entire body for the application. */\nbody{\n    padding: 0;\n    margin: 0;\n}\n\n*{\n    box-sizing: border-box;\n}\n\n.no-click{\n    pointer-events: none;  \n}\n/***************************************************************************************************************************************************************************/\n/***************************************************************************************************************************************************************************/\n/* Mobile and Desktop Miniturization */\n\n/* Media-0 - For mobile viewports */\n@media only screen and (max-width: 1000px)\n{\n    /* |Main Content| */\n    #content{\n        border: 1px solid red;\n        padding: 5px; \n    }\n\n    /* |Main Menu Content| */\n    .main-menu-content{\n        display: flex;\n        flex-direction: column;\n        align-items: center; \n        gap: 10px;\n\n        border: 1px solid purple;\n    }\n\n    /* |Shuffle Cards Content| */\n    .shuffle-cards-content{\n        display: flex;\n        flex-direction: column;\n        gap: 10px;\n\n        border: 1px solid orange;\n        padding: 5px;\n        margin-top: 20px; \n    }\n\n    .display-cards-section{ /* Display cards container */\n        display: flex; \n        justify-content: center; \n        gap: 5px; \n\n        border: 1px solid blue;\n    }\n    .display-cards-section > div{\n        display: flex;\n        justify-content: center;\n        align-items: center;\n\n        border: 1px solid black;\n        width: 65px;\n        height: 65px;\n        font-size: 10px;\n        text-align: center;\n    }\n    .shuffle-card-animation{ /* Shuffle Card Animation for the Display cards container. */\n        animation-name: shuffleCardAnimation;\n        animation-duration: 1s;\n        animation-timing-function: ease-in-out;\n    }\n    @keyframes shuffleCardAnimation{\n        from {\n            transform: scale(1);\n        }\n        to {\n            transform: scale(1.2); \n        }\n    }\n\n    .card-info-window{ /* The main card info window for the each card being displayed in the 'Display Card Section'. */\n        position: relative;\n        top: -120px; /* This will change based on the final page size. */\n\n        border: 1px solid red; \n        background-color: rgba(255, 0, 0, 0.432);\n        padding: 10px; \n    }\n    .card-info-window > div{ /* Close Window Button Section */\n        display: flex;\n        justify-content: end; \n        border: 1px solid green;\n    }\n    .card-info-window > div > img[src]{\n        width: 50px;\n    }\n    .open-card-info-window{ /* Will open the card info window with a keyframe animation. */ \n        animation-name: openCardInfoWindow;\n        animation-duration: .5s;\n        animation-timing-function: ease-in-out;\n        /* animation-fill-mode: forwards; */\n    }\n    @keyframes openCardInfoWindow{\n        from{\n            transform: perspective(800px) translateZ(-4000px);\n        }\n        to{\n            transform: perspective(800px) translateZ(25px); \n        }\n    }\n    .close-card-info-window{ /* Will close the card info window with a keyframe animation. */\n        animation-name: closeCardInfoWindow;\n        animation-duration: .5s;\n        animation-timing-function: ease-in-out;\n        animation-fill-mode: forwards;\n    }\n    @keyframes closeCardInfoWindow{\n        from{\n            transform: perspective(800px) translateZ(25px); \n        }\n        to{\n            transform: perspective(800px) translateZ(-4000px); \n        }\n    }\n\n    .shuffle-limit-reached{\n        animation-name: shuffleLimitReached;\n        animation-duration: 1s;\n        animation-timing-function: ease-in-out;\n        border: 1px solid red;\n    }\n    @keyframes shuffleLimitReached{\n        from{ \n            transform: scale(1)\n        }\n        to{\n            transform: scale(1.1); \n        }\n    }\n    .shuffle-limit-reached > span{\n        color: red; \n    }\n\n    /* |Battle Levels Content| */ \n    .battle-levels-content{\n        display: flex;\n        flex-direction: column;\n        gap: 20px; \n        border: 1px solid green; \n        margin-top: 20px; \n    }\n\n    .battle-level-section{ /* Battle Level Section */\n        text-align: center; \n        border: 1px solid blue; \n    }\n    .battle-level-section > h4{\n        margin: 0; \n    }\n\n    .battle-arena-section{ /* Battle Arena Section */ \n        display: flex; \n        justify-content: space-between;\n\n        border: 1px solid purple;\n        padding: 3px; \n    }\n    .battle-arena-section > section{ /* User card & Comp Card in the Battle Arena Section. */ \n        display: flex;\n\n        border: 1px solid black; \n        width: 80px; /* The width and height will change once the card art is implemented. */ \n        height: 80px; \n    }\n\n    .battle-card-stats-section{ /* Battle Card Stats Section */\n        display: flex;\n        border: 1px solid cornflowerblue;\n        padding: 3px; \n    }\n    .battle-card-stats-section > section{ /* User Battle Card Stats & Comp Battle Card Stats */\n        display: flex;\n        flex-direction: column;\n        gap: 3px;\n        \n        border: 1px solid black;\n    }\n\n    .battle-card-deck-section{ /* Battle Card Deck Section */\n        display: flex;\n        justify-content: space-between;\n\n        border: 1px solid chocolate;\n        padding: 3px;\n    }\n    .battle-card-deck-section > section{ /* User Card Deck & Comp Card Deck */\n        display: flex;\n        justify-content: center;\n        gap: 10px; \n\n        padding: 3px;\n        border: 1px solid lightseagreen;\n    }\n    .battle-card-deck-section > section > div{ /* Each card in both deck sections */ \n        font-size: 10px; \n        border: 1px solid black; \n    }\n\n    .battle-command-section{ /* Battle Command Section */ \n        border: 1px solid lightcoral;\n        padding: 3px; \n    }\n\n\n\n} "],sourceRoot:""}]);const c=r},314:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",a=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),a&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),a&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,a,o,i){"string"==typeof e&&(e=[[null,e,void 0]]);var r={};if(a)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(r[s]=!0)}for(var d=0;d<e.length;d++){var l=[].concat(e[d]);a&&r[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),n.push(l))}},n}},354:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),i="/*# ".concat(o," */");return[n].concat([i]).join("\n")}return[n].join("\n")}},540:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},659:e=>{var n={};e.exports=function(e,t){var a=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}},825:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var a="";t.supports&&(a+="@supports (".concat(t.supports,") {")),t.media&&(a+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(a+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),a+=t.css,o&&(a+="}"),t.media&&(a+="}"),t.supports&&(a+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(a,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}}},n={};function t(a){var o=n[a];if(void 0!==o)return o.exports;var i=n[a]={id:a,exports:{}};return e[a](i,i.exports,t),i.exports}function a(){}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var a in n)t.o(n,a)&&!t.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:n[a]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&"SCRIPT"===n.currentScript.tagName.toUpperCase()&&(e=n.currentScript.src),!e)){var a=n.getElementsByTagName("script");if(a.length)for(var o=a.length-1;o>-1&&(!e||!/^http(s?):/.test(e));)e=a[o--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/^blob:/,"").replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.nc=void 0;let o=[],i=[{name:"Tobo The Fighter",shortName:"Tobo",cate:"supra",attk:45,def:12,esse:100},{name:"The One From System",shortName:"Jace",cate:"supra",attk:44,def:14,esse:100},{name:"Spunky With The Funky Draco",shortName:"Spunky",cate:"supra",attk:39,def:17,esse:100},{name:"Allybelle",shortName:"Ally",cate:"fere",attk:27,def:15,esse:100},{name:"The Experiment",shortName:"Mason",cate:"fere",attk:24,def:13,esse:100},{name:"The Trendsetter Rotao",shortName:"Rotao",cate:"fere",attk:25,def:18,esse:100},{name:"Dan The Prol",shortName:"Dan",cate:"bonum",attk:19,def:22,esse:100},{name:"Mac The Rat",shortName:"Mac",cate:"bonum",attk:16,def:33,esse:100},{name:"A Karen",shortName:"Karen",cate:"bonum",attk:15,def:26,esse:100},{name:"The Office Worker Ken",shortName:"Ken",cate:"bonum",attk:16,def:25,esse:100}];const r={numberOfShuffles:0,shuffleLimitReached:!1,battleCard:null,switchedCards:!1,currentLevel:1,compBattleCard:null,compSwitchedCards:!1,compCardDeckCreated:!1};function c(e,n){if("Shuffle Cards Content"===e){const e=document.querySelectorAll(".shuffle-cards-content > div > div"),t=document.querySelectorAll(".shuffle-cards-content > button");"open card info window"===n?(e.forEach((e=>{e.classList.add("no-click")})),t.forEach((e=>{e.disabled=!0}))):"close card info window"===n?(e.forEach((e=>{e.classList.remove("no-click")})),t.forEach((e=>{e.disabled=!1}))):"shuffle cards"===n&&e.forEach((e=>{e.classList.add("no-click")}))}}const s=t.p+"5b9eb662f103822a4a50.svg",d=[{level:1,levelName:"The Unknown Birth",levelCompleted:!1},{level:2,levelName:"Dear Friend",levelCompleted:!1}],l=[{name:"Renoy Bright",shortName:"Renoy",levelCard:1,cate:"supra",attk:0,def:0,esse:100},{name:"Chairman Sam",shortName:"Chairman",levelCard:1,cate:null,attk:0,def:0,esse:100},{name:"Guard 1",shortName:"Guard 1",levelCard:1,cate:null,attk:0,def:0,esse:100},{name:"Guard 2",shortName:"Guard 2",levelCard:1,cate:null,attk:0,def:0,esse:100},{name:"Tales Venoy",shortName:"Tales",levelCard:2,cate:"supra",attk:0,def:0,esse:100}];let A=[];function u(e){r.compCardDeckCreated||(l.forEach((e=>{e.levelCard===r.currentLevel&&A.push(e)})),r.compCardDeckCreated=!0);const n=document.querySelector(".battle-levels-content"),t=document.querySelector(".battle-arena-section"),a=document.querySelector(".battle-card-stats-section"),o=document.querySelector(".battle-card-deck-section"),i=document.querySelector(".battle-command-section");0===e?(function(){const e=document.querySelector(".battle-levels-content"),n=document.createElement("section");n.classList.add("battle-level-section");const t=document.createElement("h4");d.forEach((e=>{e.level===r.currentLevel&&(t.textContent=`Level: ${e.level} - ${e.levelName}`)})),n.appendChild(t),e.appendChild(n)}(),p(),m(),f(),h()):1===e&&(n.removeChild(t),n.removeChild(a),n.removeChild(o),n.removeChild(i),p(),m(),f(),h())}function p(){const e=document.querySelector(".battle-levels-content"),n=document.createElement("section");n.classList.add("battle-arena-section");const t=document.createElement("section");r.switchedCards?t.textContent=r.battleCard:(r.battleCard=o[0].name,t.textContent=o[0].name);const a=document.createElement("section");r.compSwitchedCards?console.log("The Computer has switched cards"):(r.compBattleCard=A[0],a.textContent=A[0].name),n.appendChild(t),n.appendChild(a),e.appendChild(n)}function m(){const e=document.querySelector(".battle-levels-content"),n=document.createElement("section");n.classList.add("battle-card-stats-section");const t=document.createElement("section");o.forEach((e=>{if(e.name===r.battleCard){const n=document.createElement("div");n.textContent=`Cate: ${e.cate}`;const a=document.createElement("div");a.textContent=`Attk: ${e.attk}`;const o=document.createElement("div");o.textContent=`Def: ${e.def}`;const i=document.createElement("div");i.textContent=`Esse: ${e.esse}`,t.appendChild(n),t.appendChild(a),t.appendChild(o),t.appendChild(i)}})),document.createElement("section"),n.appendChild(t),e.appendChild(n)}function f(){const e=document.querySelector(".battle-levels-content"),n=document.createElement("section");n.classList.add("battle-card-deck-section");const t=document.querySelector(".battle-arena-section > section:nth-child(1)"),a=document.createElement("section");for(let e=0;e<o.length;e++)if(o[e].name!==t.textContent){const n=document.createElement("div");n.textContent=o[e].shortName,n.addEventListener("click",C),a.appendChild(n)}const i=document.createElement("section");l.forEach((e=>{if(e.levelCard===r.currentLevel){const n=document.createElement("div");n.textContent=e.shortName,i.appendChild(n)}})),n.appendChild(a),n.appendChild(i),e.appendChild(n)}function C(e){r.switchedCards=!0,o.forEach((n=>{n.shortName===e.target.textContent&&(r.battleCard=n.name)})),u(1)}function h(){const e=document.querySelector(".battle-levels-content"),n=document.createElement("section");n.classList.add("battle-command-section");const t=document.createElement("button");t.textContent="Attack";const a=document.createElement("button");a.textContent="Defend",n.appendChild(t),n.appendChild(a),e.appendChild(n)}function B(e){const n=document.querySelector(".shuffle-cards-content");if(0===e)b(),x(),g(),w();else if(1===e)n.replaceChildren(),b(),x(),g(),w();else if(2===e){const e=document.querySelector(".shuffle-cards-content > button:nth-child(2)"),t=document.querySelector(".shuffle-cards-content > button:nth-child(3)");n.removeChild(e),n.removeChild(t),g(),w()}}function b(){const e=document.querySelector(".shuffle-cards-content"),n=document.createElement("div");n.classList.add("display-cards-section");for(let e=0;e<4;e++){const e=document.createElement("div");n.appendChild(e)}e.appendChild(n)}function x(){const e=document.querySelectorAll(".display-cards-section > div");0===o.length?e.forEach((e=>{e.textContent="No Card"})):e.forEach(((e,n)=>{e.textContent=`${o[n].name}`,e.addEventListener("click",v)}))}function v(e){const n=document.querySelector(".shuffle-cards-content");console.log(e.target);const t=document.createElement("div");t.classList.add("card-info-window"),t.classList.add("open-card-info-window");const a=document.createElement("div"),o=document.createElement("img");o.src=s,a.appendChild(o),o.addEventListener("click",y),c("Shuffle Cards Content","open card info window"),t.appendChild(a),n.appendChild(t)}function y(){const e=document.querySelector(".shuffle-cards-content"),n=document.querySelector(".card-info-window");n.classList.remove("open-card-info-window"),n.classList.add("close-card-info-window"),setTimeout((()=>{e.removeChild(n)}),500),setTimeout((()=>{c("Shuffle Cards Content","close card info window")}),700)}function g(){const e=document.querySelector(".shuffle-cards-content"),n=document.createElement("button");3===r.numberOfShuffles?(console.log("Shuffle limit reached"),r.shuffleLimitReached=!0,n.removeEventListener("click",E),n.classList.add("shuffle-limit-reached"),n.innerHTML=`Shuffle (${r.numberOfShuffles}) <span>Limit Reached</span>`,n.addEventListener("click",(()=>{B(2)}))):(n.addEventListener("click",E),n.textContent=`Shuffle (${r.numberOfShuffles})`),e.appendChild(n)}function w(){const e=document.querySelector(".shuffle-cards-content"),n=document.createElement("button");n.textContent="Start",0===o.length&&(n.disabled=!0),n.addEventListener("click",I),e.appendChild(n)}function I(){u(0)}function E(e){o=function(){let e=[],n=[],t=[],a=[];var o;i.forEach((a=>{"supra"===a.cate?e.push(a):"fere"===a.cate?n.push(a):"bonum"===a.cate&&t.push(a)})),a.push(e[(o=e.length,Math.floor(Math.random()*o))]),a.push(n[function(e){return Math.floor(Math.random()*e)}(n.length)]);const r=function(e){let n=!1,t=[];const a=Math.floor(Math.random()*e);for(;!n;){const o=Math.floor(Math.random()*e);a!==o&&(t.push(a),t.push(o),n=!0)}return t}(t.length);return a.push(t[r[0]]),a.push(t[r[1]]),a}(),console.log(o),r.numberOfShuffles++,console.log("Shuffles: ",r.numberOfShuffles),console.log("\n"),c("Shuffle Cards Content","shuffle cards"),document.querySelectorAll(".shuffle-cards-content > button").forEach((e=>{e.disabled=!0})),document.querySelectorAll(".display-cards-section > div").forEach(((e,n)=>{switch(n){case 0:e.classList.add("shuffle-card-animation"),setTimeout((()=>{e.classList.remove("shuffle-card-animation")}),1e3);break;case 1:setTimeout((()=>{e.classList.add("shuffle-card-animation")}),1e3),setTimeout((()=>{e.classList.remove("shuffle-card-animation")}),2e3);break;case 2:setTimeout((()=>{e.classList.add("shuffle-card-animation")}),2e3),setTimeout((()=>{e.classList.remove("shuffle-card-animation")}),3e3);break;case 3:setTimeout((()=>{e.classList.add("shuffle-card-animation")}),3e3),setTimeout((()=>{e.classList.remove("shuffle-card-animation")}),4e3);break;default:return}})),setTimeout((()=>{B(1)}),4500)}var Q=t(72),S=t.n(Q),k=t(825),L=t.n(k),D=t(659),T=t.n(D),q=t(56),M=t.n(q),N=t(540),Y=t.n(N),j=t(113),W=t.n(j),R=t(159),F={};F.styleTagTransform=W(),F.setAttributes=M(),F.insert=T().bind(null,"head"),F.domAPI=L(),F.insertStyleElement=Y(),S()(R.A,F),R.A&&R.A.locals&&R.A.locals,console.log("Application will initiate"),function(){const e=document.getElementById("content"),n=document.createElement("div");n.classList.add("main-menu-content"),e.appendChild(n),function(){const e=document.querySelector(".main-menu-content"),n=document.createElement("h1");n.textContent="STRIVE",e.appendChild(n)}(),function(){const e=document.querySelector(".main-menu-content"),n=document.createElement("button");n.textContent="Start Game",n.addEventListener("click",a);const t=document.createElement("button");t.textContent="Settings";const o=document.createElement("button");o.textContent="SoSu Studio",e.appendChild(n),e.appendChild(t),e.appendChild(o)}()}(),function(){const e=document.getElementById("content"),n=document.createElement("div");n.classList.add("shuffle-cards-content"),e.appendChild(n)}(),function(){const e=document.getElementById("content"),n=document.createElement("div");n.classList.add("battle-levels-content"),e.appendChild(n)}(),B(0)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,