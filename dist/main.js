(()=>{"use strict";var n={56:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},72:n=>{var e=[];function t(n){for(var t=-1,a=0;a<e.length;a++)if(e[a].identifier===n){t=a;break}return t}function a(n,a){for(var i={},r=[],c=0;c<n.length;c++){var s=n[c],l=a.base?s[0]+a.base:s[0],d=i[l]||0,A="".concat(l," ").concat(d);i[l]=d+1;var m=t(A),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==m)e[m].references++,e[m].updater(u);else{var p=o(u,a);a.byIndex=c,e.splice(c,0,{identifier:A,updater:p,references:1})}r.push(A)}return r}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var i=a(n=n||[],o=o||{});return function(n){n=n||[];for(var r=0;r<i.length;r++){var c=t(i[r]);e[c].references--}for(var s=a(n,o),l=0;l<i.length;l++){var d=t(i[l]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}i=s}}},113:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},159:(n,e,t)=>{t.d(e,{A:()=>c});var a=t(354),o=t.n(a),i=t(314),r=t.n(i)()(o());r.push([n.id,"/* body - The entire body for the application. */\nbody{\n    padding: 0;\n    margin: 0;\n}\n\n*{\n    box-sizing: border-box;\n}\n\n.no-click{\n    pointer-events: none;  \n}\n/***************************************************************************************************************************************************************************/\n/***************************************************************************************************************************************************************************/\n/* Mobile and Desktop Miniturization */\n\n/* Media-0 - For mobile viewports */\n@media only screen and (max-width: 1000px)\n{\n    /* |Main Content| */\n    #content{\n        border: 1px solid red;\n        padding: 5px; \n    }\n\n    /* |Main Menu Content| */\n    .main-menu-content{\n        display: flex;\n        flex-direction: column;\n        align-items: center; \n        gap: 10px;\n\n        border: 1px solid purple;\n    }\n\n    /* |Shuffle Cards Content| */\n    .shuffle-cards-content{\n        display: flex;\n        flex-direction: column;\n        gap: 10px;\n\n        border: 1px solid orange;\n        padding: 5px;\n        margin-top: 20px; \n    }\n\n    .display-cards-section{ /* Display cards container */\n        display: flex; \n        justify-content: center; \n        gap: 5px; \n\n        border: 1px solid blue;\n    }\n    .display-cards-section > div{\n        display: flex;\n        justify-content: center;\n        align-items: center;\n\n        border: 1px solid black;\n        width: 65px;\n        height: 65px;\n        font-size: 10px;\n        text-align: center;\n    }\n    .shuffle-card-animation{ /* Shuffle Card Animation for the Display cards container. */\n        animation-name: shuffleCardAnimation;\n        animation-duration: 1s;\n        animation-timing-function: ease-in-out;\n    }\n    @keyframes shuffleCardAnimation{\n        from {\n            transform: scale(1);\n        }\n        to {\n            transform: scale(1.2); \n        }\n    }\n\n    .card-info-window{ /* The main card info window for the each card being displayed in the 'Display Card Section'. */\n        position: relative;\n        top: -120px; /* This will change based on the final page size. */\n\n        border: 1px solid red; \n        background-color: rgba(255, 0, 0, 0.432);\n        padding: 10px; \n    }\n    .card-info-window > div{ /* Close Window Button Section */\n        display: flex;\n        justify-content: end; \n        border: 1px solid green;\n    }\n    .card-info-window > div > img[src]{\n        width: 50px;\n    }\n    .open-card-info-window{ /* Will open the card info window with a keyframe animation. */ \n        animation-name: openCardInfoWindow;\n        animation-duration: .5s;\n        animation-timing-function: ease-in-out;\n        /* animation-fill-mode: forwards; */\n    }\n    @keyframes openCardInfoWindow{\n        from{\n            transform: perspective(800px) translateZ(-4000px);\n        }\n        to{\n            transform: perspective(800px) translateZ(25px); \n        }\n    }\n    .close-card-info-window{ /* Will close the card info window with a keyframe animation. */\n        animation-name: closeCardInfoWindow;\n        animation-duration: .5s;\n        animation-timing-function: ease-in-out;\n        animation-fill-mode: forwards;\n    }\n    @keyframes closeCardInfoWindow{\n        from{\n            transform: perspective(800px) translateZ(25px); \n        }\n        to{\n            transform: perspective(800px) translateZ(-4000px); \n        }\n    }\n\n    .shuffle-limit-reached{\n        animation-name: shuffleLimitReached;\n        animation-duration: 1s;\n        animation-timing-function: ease-in-out;\n        border: 1px solid red;\n    }\n    @keyframes shuffleLimitReached{\n        from{ \n            transform: scale(1)\n        }\n        to{\n            transform: scale(1.1); \n        }\n    }\n    .shuffle-limit-reached > span{\n        color: red; \n    }\n\n    /* |Battle Levels Content| */ \n    .battle-levels-content{\n        display: flex;\n        flex-direction: column;\n        gap: 20px; \n        border: 1px solid green; \n        margin-top: 20px; \n    }\n\n    .battle-level-section{ /* Battle Level Section */\n        text-align: center; \n        border: 1px solid blue; \n    }\n    .battle-level-section > h4{\n        margin: 0; \n    }\n\n    .battle-singularity-point-section{ /* Battle Sigularity Point Section */\n        display: flex;\n\n        border: 1px solid olive;\n    }\n    .battle-singularity-point-section > section{\n        flex: 1;\n        \n        text-align: center; \n        border: 1px solid black;\n    }\n\n    .battle-arena-section{ /* Battle Arena Section */ \n        display: flex; \n        justify-content: space-between;\n\n        border: 1px solid purple;\n        padding: 3px; \n    }\n    .battle-arena-section > section{ /* User card & Comp Card in the Battle Arena Section. */ \n        display: flex;\n\n        border: 1px solid black; \n        width: 80px; /* The width and height will change once the card art is implemented. */ \n        height: 80px; \n    }\n    .battle-arena-section > section:nth-child(2) > div{ /* Comp Card Battle Damage - Will contain damage animation. */\n        border: 1px solid black;\n        position: absolute;\n        animation-name: compCardBattleAnim;\n        animation-duration: 0.7s; \n        animation-timing-function: ease-in-out;\n        animation-fill-mode: forwards;  \n    }\n    @keyframes compCardBattleAnim{\n        from{\n            transform: translate(0);\n        }\n        to{\n            transform: translate(-100px, -20px); \n        }\n    }\n\n    .battle-card-stats-section{ /* Battle Card Stats Section */\n        display: flex;\n        justify-content: space-between;\n        border: 1px solid cornflowerblue;\n        padding: 3px; \n    }\n    .battle-card-stats-section > section{ /* User Battle Card Stats & Comp Battle Card Stats */\n        display: flex;\n        flex-direction: column;\n        gap: 3px;\n        \n        border: 1px solid black;\n    }\n\n    .battle-card-deck-section{ /* Battle Card Deck Section */\n        display: flex;\n        justify-content: space-between;\n\n        border: 1px solid chocolate;\n        padding: 3px;\n    }\n    .battle-card-deck-section > section{ /* User Card Deck & Comp Card Deck */\n        display: flex;\n        justify-content: center;\n        gap: 10px; \n\n        padding: 3px;\n        border: 1px solid lightseagreen;\n    }\n    .battle-card-deck-section > section > div{ /* Each card in both deck sections */ \n        font-size: 10px; \n        border: 1px solid black; \n    }\n\n    .battle-command-section{ /* Battle Command Section */ \n        display: flex;\n        justify-content: space-around;\n\n        border: 1px solid lightcoral;\n        padding: 3px; \n    }\n    .user-card-attack-anim{ /* Battle Command: User Attack Anim */\n        animation-name: userAttackAnim;\n        animation-duration: 0.5s;\n        animation-timing-function: ease-in-out;\n    }\n    @keyframes userAttackAnim{\n        from{\n            transform: translateX(0);\n        }\n        to{\n            transform: translateX(20px); \n        }\n    }\n    .comp-card-attack-anim{ /* Battle Commmand: Computer Attack Anim */\n        animation-name: compAttackAnim;\n        animation-duration: 0.5s;\n        animation-timing-function: ease-in-out; \n    }\n    @keyframes compAttackAnim{\n        from{\n            transform: translateX(0); \n        }\n        to{\n            transform: translateX(-20px);  \n        }\n    }\n} ","",{version:3,sources:["webpack://./src/styles/styles.css"],names:[],mappings:"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",sourcesContent:["/* body - The entire body for the application. */\nbody{\n    padding: 0;\n    margin: 0;\n}\n\n*{\n    box-sizing: border-box;\n}\n\n.no-click{\n    pointer-events: none;  \n}\n/***************************************************************************************************************************************************************************/\n/***************************************************************************************************************************************************************************/\n/* Mobile and Desktop Miniturization */\n\n/* Media-0 - For mobile viewports */\n@media only screen and (max-width: 1000px)\n{\n    /* |Main Content| */\n    #content{\n        border: 1px solid red;\n        padding: 5px; \n    }\n\n    /* |Main Menu Content| */\n    .main-menu-content{\n        display: flex;\n        flex-direction: column;\n        align-items: center; \n        gap: 10px;\n\n        border: 1px solid purple;\n    }\n\n    /* |Shuffle Cards Content| */\n    .shuffle-cards-content{\n        display: flex;\n        flex-direction: column;\n        gap: 10px;\n\n        border: 1px solid orange;\n        padding: 5px;\n        margin-top: 20px; \n    }\n\n    .display-cards-section{ /* Display cards container */\n        display: flex; \n        justify-content: center; \n        gap: 5px; \n\n        border: 1px solid blue;\n    }\n    .display-cards-section > div{\n        display: flex;\n        justify-content: center;\n        align-items: center;\n\n        border: 1px solid black;\n        width: 65px;\n        height: 65px;\n        font-size: 10px;\n        text-align: center;\n    }\n    .shuffle-card-animation{ /* Shuffle Card Animation for the Display cards container. */\n        animation-name: shuffleCardAnimation;\n        animation-duration: 1s;\n        animation-timing-function: ease-in-out;\n    }\n    @keyframes shuffleCardAnimation{\n        from {\n            transform: scale(1);\n        }\n        to {\n            transform: scale(1.2); \n        }\n    }\n\n    .card-info-window{ /* The main card info window for the each card being displayed in the 'Display Card Section'. */\n        position: relative;\n        top: -120px; /* This will change based on the final page size. */\n\n        border: 1px solid red; \n        background-color: rgba(255, 0, 0, 0.432);\n        padding: 10px; \n    }\n    .card-info-window > div{ /* Close Window Button Section */\n        display: flex;\n        justify-content: end; \n        border: 1px solid green;\n    }\n    .card-info-window > div > img[src]{\n        width: 50px;\n    }\n    .open-card-info-window{ /* Will open the card info window with a keyframe animation. */ \n        animation-name: openCardInfoWindow;\n        animation-duration: .5s;\n        animation-timing-function: ease-in-out;\n        /* animation-fill-mode: forwards; */\n    }\n    @keyframes openCardInfoWindow{\n        from{\n            transform: perspective(800px) translateZ(-4000px);\n        }\n        to{\n            transform: perspective(800px) translateZ(25px); \n        }\n    }\n    .close-card-info-window{ /* Will close the card info window with a keyframe animation. */\n        animation-name: closeCardInfoWindow;\n        animation-duration: .5s;\n        animation-timing-function: ease-in-out;\n        animation-fill-mode: forwards;\n    }\n    @keyframes closeCardInfoWindow{\n        from{\n            transform: perspective(800px) translateZ(25px); \n        }\n        to{\n            transform: perspective(800px) translateZ(-4000px); \n        }\n    }\n\n    .shuffle-limit-reached{\n        animation-name: shuffleLimitReached;\n        animation-duration: 1s;\n        animation-timing-function: ease-in-out;\n        border: 1px solid red;\n    }\n    @keyframes shuffleLimitReached{\n        from{ \n            transform: scale(1)\n        }\n        to{\n            transform: scale(1.1); \n        }\n    }\n    .shuffle-limit-reached > span{\n        color: red; \n    }\n\n    /* |Battle Levels Content| */ \n    .battle-levels-content{\n        display: flex;\n        flex-direction: column;\n        gap: 20px; \n        border: 1px solid green; \n        margin-top: 20px; \n    }\n\n    .battle-level-section{ /* Battle Level Section */\n        text-align: center; \n        border: 1px solid blue; \n    }\n    .battle-level-section > h4{\n        margin: 0; \n    }\n\n    .battle-singularity-point-section{ /* Battle Sigularity Point Section */\n        display: flex;\n\n        border: 1px solid olive;\n    }\n    .battle-singularity-point-section > section{\n        flex: 1;\n        \n        text-align: center; \n        border: 1px solid black;\n    }\n\n    .battle-arena-section{ /* Battle Arena Section */ \n        display: flex; \n        justify-content: space-between;\n\n        border: 1px solid purple;\n        padding: 3px; \n    }\n    .battle-arena-section > section{ /* User card & Comp Card in the Battle Arena Section. */ \n        display: flex;\n\n        border: 1px solid black; \n        width: 80px; /* The width and height will change once the card art is implemented. */ \n        height: 80px; \n    }\n    .battle-arena-section > section:nth-child(2) > div{ /* Comp Card Battle Damage - Will contain damage animation. */\n        border: 1px solid black;\n        position: absolute;\n        animation-name: compCardBattleAnim;\n        animation-duration: 0.7s; \n        animation-timing-function: ease-in-out;\n        animation-fill-mode: forwards;  \n    }\n    @keyframes compCardBattleAnim{\n        from{\n            transform: translate(0);\n        }\n        to{\n            transform: translate(-100px, -20px); \n        }\n    }\n\n    .battle-card-stats-section{ /* Battle Card Stats Section */\n        display: flex;\n        justify-content: space-between;\n        border: 1px solid cornflowerblue;\n        padding: 3px; \n    }\n    .battle-card-stats-section > section{ /* User Battle Card Stats & Comp Battle Card Stats */\n        display: flex;\n        flex-direction: column;\n        gap: 3px;\n        \n        border: 1px solid black;\n    }\n\n    .battle-card-deck-section{ /* Battle Card Deck Section */\n        display: flex;\n        justify-content: space-between;\n\n        border: 1px solid chocolate;\n        padding: 3px;\n    }\n    .battle-card-deck-section > section{ /* User Card Deck & Comp Card Deck */\n        display: flex;\n        justify-content: center;\n        gap: 10px; \n\n        padding: 3px;\n        border: 1px solid lightseagreen;\n    }\n    .battle-card-deck-section > section > div{ /* Each card in both deck sections */ \n        font-size: 10px; \n        border: 1px solid black; \n    }\n\n    .battle-command-section{ /* Battle Command Section */ \n        display: flex;\n        justify-content: space-around;\n\n        border: 1px solid lightcoral;\n        padding: 3px; \n    }\n    .user-card-attack-anim{ /* Battle Command: User Attack Anim */\n        animation-name: userAttackAnim;\n        animation-duration: 0.5s;\n        animation-timing-function: ease-in-out;\n    }\n    @keyframes userAttackAnim{\n        from{\n            transform: translateX(0);\n        }\n        to{\n            transform: translateX(20px); \n        }\n    }\n    .comp-card-attack-anim{ /* Battle Commmand: Computer Attack Anim */\n        animation-name: compAttackAnim;\n        animation-duration: 0.5s;\n        animation-timing-function: ease-in-out; \n    }\n    @keyframes compAttackAnim{\n        from{\n            transform: translateX(0); \n        }\n        to{\n            transform: translateX(-20px);  \n        }\n    }\n} "],sourceRoot:""}]);const c=r},314:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",a=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),a&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),a&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,a,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var r={};if(a)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(r[s]=!0)}for(var l=0;l<n.length;l++){var d=[].concat(n[l]);a&&r[d[0]]||(void 0!==i&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=i),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),e.push(d))}},e}},354:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),i="/*# ".concat(o," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},540:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},659:n=>{var e={};n.exports=function(n,t){var a=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var a="";t.supports&&(a+="@supports (".concat(t.supports,") {")),t.media&&(a+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(a+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),a+=t.css,o&&(a+="}"),t.media&&(a+="}"),t.supports&&(a+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(a,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}}},e={};function t(a){var o=e[a];if(void 0!==o)return o.exports;var i=e[a]={id:a,exports:{}};return n[a](i,i.exports,t),i.exports}function a(){}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var a in e)t.o(e,a)&&!t.o(n,a)&&Object.defineProperty(n,a,{enumerable:!0,get:e[a]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&"SCRIPT"===e.currentScript.tagName.toUpperCase()&&(n=e.currentScript.src),!n)){var a=e.getElementsByTagName("script");if(a.length)for(var o=a.length-1;o>-1&&(!n||!/^http(s?):/.test(n));)n=a[o--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/^blob:/,"").replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0;let o=[],i=[{name:"Tobo The Fighter",shortName:"Tobo",cate:"supra",attk:45,def:12,esse:100},{name:"The One From System",shortName:"Jace",cate:"supra",attk:44,def:14,esse:100},{name:"Spunky With The Funky Draco",shortName:"Spunky",cate:"supra",attk:39,def:17,esse:100},{name:"Allybelle",shortName:"Ally",cate:"fere",attk:27,def:15,esse:100},{name:"The Experiment",shortName:"Mason",cate:"fere",attk:24,def:13,esse:100},{name:"The Trendsetter Rotao",shortName:"Rotao",cate:"fere",attk:25,def:18,esse:100},{name:"Dan The Prol",shortName:"Dan",cate:"bonum",attk:19,def:22,esse:100},{name:"Mac The Rat",shortName:"Mac",cate:"bonum",attk:16,def:33,esse:100},{name:"A Karen",shortName:"Karen",cate:"bonum",attk:15,def:26,esse:100},{name:"The Office Worker Ken",shortName:"Ken",cate:"bonum",attk:16,def:25,esse:100}];const r={numberOfShuffles:0,shuffleLimitReached:!1,battleCard:null,switchedCards:!1,currentLevel:1,compBattleCard:null,compSwitchedCards:!1,compCardDeckCreated:!1};function c(n,e){if("Shuffle Cards Content"===n){const n=document.querySelectorAll(".shuffle-cards-content > div > div"),t=document.querySelectorAll(".shuffle-cards-content > button");"open card info window"===e?(n.forEach((n=>{n.classList.add("no-click")})),t.forEach((n=>{n.disabled=!0}))):"close card info window"===e?(n.forEach((n=>{n.classList.remove("no-click")})),t.forEach((n=>{n.disabled=!1}))):"shuffle cards"===e&&n.forEach((n=>{n.classList.add("no-click")}))}}const s=t.p+"5b9eb662f103822a4a50.svg",l=[{level:1,levelName:"The Unknown Birth",levelCompleted:!1},{level:2,levelName:"Dear Friend",levelCompleted:!1}],d=[{name:"Renoy Bright",shortName:"Renoy",levelCard:1,cate:"supra",attk:0,def:0,esse:100},{name:"Chairman Sam",shortName:"Chairman",levelCard:1,cate:null,attk:0,def:0,esse:100},{name:"Guard 1",shortName:"Guard 1",levelCard:1,cate:null,attk:0,def:0,esse:100},{name:"Guard 2",shortName:"Guard 2",levelCard:1,cate:null,attk:0,def:0,esse:100},{name:"Tales Venoy",shortName:"Tales",levelCard:2,cate:"supra",attk:0,def:0,esse:100}];let A=[];function m(n){r.compCardDeckCreated||(d.forEach((n=>{n.levelCard===r.currentLevel&&A.push(n)})),r.compCardDeckCreated=!0);const e=document.querySelector(".battle-levels-content"),t=document.querySelector(".battle-singularity-point-section"),a=document.querySelector(".battle-arena-section"),o=document.querySelector(".battle-card-stats-section"),i=document.querySelector(".battle-card-deck-section"),c=document.querySelector(".battle-command-section");0===n?(function(){const n=document.querySelector(".battle-levels-content"),e=document.createElement("section");e.classList.add("battle-level-section");const t=document.createElement("h4");l.forEach((n=>{n.level===r.currentLevel&&(t.textContent=`Level: ${n.level} - ${n.levelName}`)})),e.appendChild(t),n.appendChild(e)}(),u(),p(),C(),f(),B()):1===n&&(e.removeChild(t),e.removeChild(a),e.removeChild(o),e.removeChild(i),e.removeChild(c),u(),p(),C(),f(),B())}function u(){const n=document.querySelector(".battle-levels-content"),e=document.createElement("section");e.classList.add("battle-singularity-point-section");const t=document.createElement("section");t.textContent="0 SP";const a=document.createElement("section");a.textContent="0 SP",e.appendChild(t),e.appendChild(a),n.appendChild(e)}function p(){const n=document.querySelector(".battle-levels-content"),e=document.createElement("section");e.classList.add("battle-arena-section");const t=document.createElement("section");r.switchedCards?t.textContent=r.battleCard:(r.battleCard=o[0].name,t.textContent=o[0].name);const a=document.createElement("section");r.compSwitchedCards?console.log("The Computer has switched cards"):(r.compBattleCard=A[0].name,a.textContent=A[0].name),e.appendChild(t),e.appendChild(a),n.appendChild(e)}function C(){const n=document.querySelector(".battle-levels-content"),e=document.createElement("section");e.classList.add("battle-card-stats-section");const t=document.createElement("section");o.forEach((n=>{if(n.name===r.battleCard){const e=document.createElement("div");e.textContent=`Cate: ${n.cate}`;const a=document.createElement("div");a.textContent=`Attk: ${n.attk}`;const o=document.createElement("div");o.textContent=`Def: ${n.def}`;const i=document.createElement("div");i.textContent=`Esse: ${n.esse}`,t.appendChild(e),t.appendChild(a),t.appendChild(o),t.appendChild(i)}}));const a=document.createElement("section");A.forEach((n=>{if(n.name===r.compBattleCard){const e=document.createElement("div");e.textContent=`Cate: ${n.cate}`;const t=document.createElement("div");t.textContent=`Attk: ${n.attk}`;const o=document.createElement("div");o.textContent=`Def: ${n.def}`;const i=document.createElement("div");i.textContent=`Esse: ${n.esse}`,a.appendChild(e),a.appendChild(t),a.appendChild(o),a.appendChild(i)}})),e.appendChild(t),e.appendChild(a),n.appendChild(e)}function f(){const n=document.querySelector(".battle-levels-content"),e=document.createElement("section");e.classList.add("battle-card-deck-section");const t=document.querySelector(".battle-arena-section > section:nth-child(1)"),a=document.createElement("section");for(let n=0;n<o.length;n++)if(o[n].name!==t.textContent){const e=document.createElement("div");e.textContent=o[n].shortName,e.addEventListener("click",h),a.appendChild(e)}const i=document.createElement("section");d.forEach((n=>{if(n.levelCard===r.currentLevel){const e=document.createElement("div");e.textContent=n.shortName,i.appendChild(e)}})),e.appendChild(a),e.appendChild(i),n.appendChild(e)}function h(n){r.switchedCards=!0,o.forEach((e=>{e.shortName===n.target.textContent&&(r.battleCard=e.name)})),m(1)}function B(){const n=document.querySelector(".battle-levels-content"),e=document.createElement("section");e.classList.add("battle-command-section");const t=document.createElement("button");t.textContent="Attack";const a=document.createElement("button");a.textContent="Defend",t.addEventListener("click",b),a.addEventListener("click",b),e.appendChild(t),e.appendChild(a),n.appendChild(e)}function b(n){const e=document.querySelector(".battle-arena-section > section:nth-child(2)");if("Attack"===n.target.textContent){document.querySelector(".battle-arena-section > section:nth-child(1)").classList.add("user-card-attack-anim");const n=function(n,e,t){console.log("action: ",n),console.log("Player Battle Card: ",e);let a=null,i=null;o.forEach((n=>{n.name===e&&(a=n)})),d.forEach((n=>{n.name===t&&(i=n)}));{console.log("Battle Card Attack Points: ",a.attk),console.log("0 * attk: ",0*a.attk),console.log("1/3 * attk: ",1*a.attk/3),console.log("1/2 * attk: ",1*a.attk/2),console.log("2/3 * attk: ",2*a.attk/3),console.log("3/4 * attk: ",3*a.attk/4),console.log("1 * attk: ",1*a.attk);const n=[1/3,.5,0,2/3,3/4,1,0],e=Math.floor(Math.random()*n.length);let t=a.attk*n[e];return t=Number(t.toFixed(0)),console.log("Random Attack Points: ",n[e]),console.log("Random Attack Generated: ",t),console.log("Random Attack Point: ",typeof t),console.log("\n"),0===t?"Missed!":0!==t&&1!==t?(i.esse-=t,`${t} Hit!`):`${t} Critical Hit!`}}("Attack",r.battleCard,r.compBattleCard),t=document.createElement("div");t.textContent=n,e.appendChild(t)}if("defend"===n.target.textContent){const n=document.querySelector(".battle-arena-section > section:nth-child(1)");console.log(n)}setTimeout((()=>{const n=document.querySelector(".battle-arena-section > section:nth-child(2) > div");e.removeChild(n),console.log("Computer turn to attack..."),document.querySelector(".battle-arena-section > section:nth-child(2)").classList.add("comp-card-attack-anim")}),1200)}function x(n){const e=document.querySelector(".shuffle-cards-content");if(0===n)g(),y(),w(),Q();else if(1===n)e.replaceChildren(),g(),y(),w(),Q();else if(2===n){const n=document.querySelector(".shuffle-cards-content > button:nth-child(2)"),t=document.querySelector(".shuffle-cards-content > button:nth-child(3)");e.removeChild(n),e.removeChild(t),w(),Q()}}function g(){const n=document.querySelector(".shuffle-cards-content"),e=document.createElement("div");e.classList.add("display-cards-section");for(let n=0;n<4;n++){const n=document.createElement("div");e.appendChild(n)}n.appendChild(e)}function y(){const n=document.querySelectorAll(".display-cards-section > div");0===o.length?n.forEach((n=>{n.textContent="No Card"})):n.forEach(((n,e)=>{n.textContent=`${o[e].name}`,n.addEventListener("click",v)}))}function v(n){const e=document.querySelector(".shuffle-cards-content");console.log(n.target);const t=document.createElement("div");t.classList.add("card-info-window"),t.classList.add("open-card-info-window");const a=document.createElement("div"),o=document.createElement("img");o.src=s,a.appendChild(o),o.addEventListener("click",k),c("Shuffle Cards Content","open card info window"),t.appendChild(a),e.appendChild(t)}function k(){const n=document.querySelector(".shuffle-cards-content"),e=document.querySelector(".card-info-window");e.classList.remove("open-card-info-window"),e.classList.add("close-card-info-window"),setTimeout((()=>{n.removeChild(e)}),500),setTimeout((()=>{c("Shuffle Cards Content","close card info window")}),700)}function w(){const n=document.querySelector(".shuffle-cards-content"),e=document.createElement("button");3===r.numberOfShuffles?(console.log("Shuffle limit reached"),r.shuffleLimitReached=!0,e.removeEventListener("click",E),e.classList.add("shuffle-limit-reached"),e.innerHTML=`Shuffle (${r.numberOfShuffles}) <span>Limit Reached</span>`,e.addEventListener("click",(()=>{x(2)}))):(e.addEventListener("click",E),e.textContent=`Shuffle (${r.numberOfShuffles})`),n.appendChild(e)}function Q(){const n=document.querySelector(".shuffle-cards-content"),e=document.createElement("button");e.textContent="Start",0===o.length&&(e.disabled=!0),e.addEventListener("click",I),n.appendChild(e)}function I(){m(0)}function E(n){o=function(){let n=[],e=[],t=[],a=[];var o;i.forEach((a=>{"supra"===a.cate?n.push(a):"fere"===a.cate?e.push(a):"bonum"===a.cate&&t.push(a)})),a.push(n[(o=n.length,Math.floor(Math.random()*o))]),a.push(e[function(n){return Math.floor(Math.random()*n)}(e.length)]);const r=function(n){let e=!1,t=[];const a=Math.floor(Math.random()*n);for(;!e;){const o=Math.floor(Math.random()*n);a!==o&&(t.push(a),t.push(o),e=!0)}return t}(t.length);return a.push(t[r[0]]),a.push(t[r[1]]),a}(),console.log(o),r.numberOfShuffles++,console.log("Shuffles: ",r.numberOfShuffles),console.log("\n"),c("Shuffle Cards Content","shuffle cards"),document.querySelectorAll(".shuffle-cards-content > button").forEach((n=>{n.disabled=!0})),document.querySelectorAll(".display-cards-section > div").forEach(((n,e)=>{switch(e){case 0:n.classList.add("shuffle-card-animation"),setTimeout((()=>{n.classList.remove("shuffle-card-animation")}),1e3);break;case 1:setTimeout((()=>{n.classList.add("shuffle-card-animation")}),1e3),setTimeout((()=>{n.classList.remove("shuffle-card-animation")}),2e3);break;case 2:setTimeout((()=>{n.classList.add("shuffle-card-animation")}),2e3),setTimeout((()=>{n.classList.remove("shuffle-card-animation")}),3e3);break;case 3:setTimeout((()=>{n.classList.add("shuffle-card-animation")}),3e3),setTimeout((()=>{n.classList.remove("shuffle-card-animation")}),4e3);break;default:return}})),setTimeout((()=>{x(1)}),4500)}var S=t(72),D=t.n(S),L=t(825),T=t.n(L),q=t(659),M=t.n(q),Y=t(56),N=t.n(Y),j=t(540),W=t.n(j),R=t(113),F=t.n(R),U=t(159),$={};$.styleTagTransform=F(),$.setAttributes=N(),$.insert=M().bind(null,"head"),$.domAPI=T(),$.insertStyleElement=W(),D()(U.A,$),U.A&&U.A.locals&&U.A.locals,console.log("Application will initiate"),function(){const n=document.getElementById("content"),e=document.createElement("div");e.classList.add("main-menu-content"),n.appendChild(e),function(){const n=document.querySelector(".main-menu-content"),e=document.createElement("h1");e.textContent="STRIVE",n.appendChild(e)}(),function(){const n=document.querySelector(".main-menu-content"),e=document.createElement("button");e.textContent="Start Game",e.addEventListener("click",a);const t=document.createElement("button");t.textContent="Settings";const o=document.createElement("button");o.textContent="SoSu Studio",n.appendChild(e),n.appendChild(t),n.appendChild(o)}()}(),function(){const n=document.getElementById("content"),e=document.createElement("div");e.classList.add("shuffle-cards-content"),n.appendChild(e)}(),function(){const n=document.getElementById("content"),e=document.createElement("div");e.classList.add("battle-levels-content"),n.appendChild(e)}(),x(0)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,